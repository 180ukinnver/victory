{"description":"","props":{"scale":{"type":{"name":"union","value":[{"name":"func"},{"name":"shape","value":{"x":{"name":"func","required":false},"y":{"name":"func","required":false}}}]},"required":false,"description":"The scale prop determines which scales your chart should use. This prop can be\ngiven as a function, or as an object that specifies separate functions for x and y.\n@exampes d3.time.scale(), {x: d3.scale.linear(), y: d3.scale.log()}"},"domain":{"type":{"name":"union","value":[{"name":"array"},{"name":"shape","value":{"x":{"name":"array","required":false},"y":{"name":"array","required":false}}}]},"required":false,"description":"The domain prop describes the range of values your chart will include. This prop can be\ngiven as a array of the minimum and maximum expected values for your chart,\nor as an object that specifies separate arrays for x and y.\nIf this prop is not provided, a domain will be calculated from data, or other\navailable information.\n@exampes [-1, 1], {x: [0, 100], y: [0, 1]}"},"standalone":{"type":{"name":"bool"},"required":false,"description":"The standalone prop determines whether the component will render a standalone svg\nor a <g> tag that will be included in an external svg. Set standalone to false to\ncompose VictoryChart with other components within an enclosing <svg> tag.","defaultValue":{"value":"true","computed":false}},"style":{"type":{"name":"object"},"required":false,"description":"The style prop specifies styles for your chart. Victory Chart relies on Radium,\nso valid Radium style objects should work for this prop, however height, width, and margin\nare used to calculate range, and need to be expressed as a number of pixels\n@examples {width: 500, height: 300, axis: {x: {...}, y: {...}},\nline: {data: {...}, labels: {...}}, scatter: {...}, bar: {...}}"},"domainPadding":{"type":{"name":"shape","value":{"x":{"name":"number","required":false},"y":{"name":"number","required":false}}},"required":false,"description":"The domainPadding prop specifies a number of pixels of padding to add to the\nbeginning and end of a domain. This prop is useful for explicitly spacing ticks farther\nfrom the origin to prevent crowding. This prop should be given as an object with\nnumbers specified for x and y."},"animate":{"type":{"name":"object"},"required":false,"description":"The animate prop specifies props for victory-animation to use. It this prop is\ngiven, all children defined in chart will pass the options specified in this prop to\nvictory-animation, unless they have animation props of their own specified.\nLarge datasets might animate slowly due to the inherent limits of svg rendering.\n@examples {line: {delay: 5, velocity: 10, onEnd: () => alert(\"woo!\")}}"}}}