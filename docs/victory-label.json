{"description":"","props":{"capHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"custom","raw":"Util.PropTypes.nonNegative"}]},"required":false,"description":"The capHeight prop defines a text metric for the font being used: the\nexpected height of capital letters. This is necessary because of SVG,\nwhich (a) positions the *bottom* of the text at `y`, and (b) has no\nnotion of line height. The value should ideally use the same units as\n`lineHeight` and `dy`, preferably ems. If given a unitless number, it\nis assumed to be ems.","defaultValue":{"value":"\"0.71em\"","computed":false}},"children":{"type":{"name":"string"},"required":false,"description":"The children of this component define the content of the label. This\nmakes using the component similar to normal HTML spans or labels.\nCurrently, only strings are supported."},"lineHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"custom","raw":"Util.PropTypes.nonNegative"}]},"required":false,"description":"The lineHeight prop defines how much space a single line of text should\ntake up. Note that SVG has no notion of line-height, so the positioning\nmay differ slightly from what you would expect with CSS, but the result\nis similar: a roughly equal amount of extra space is distributed above\nand below the line of text. The value should ideally use the same units\nas `capHeight` and `dy`, preferably ems. If given a unitless number, it\nis assumed to be ems.","defaultValue":{"value":"1","computed":false}},"style":{"type":{"name":"object"},"required":false,"description":"The style prop applies CSS properties to the rendered `<text>` element."},"textAnchor":{"type":{"name":"enum","value":[{"value":"\"start\"","computed":false},{"value":"\"middle\"","computed":false},{"value":"\"end\"","computed":false},{"value":"\"inherit\"","computed":false}]},"required":false,"description":"The textAnchor prop defines how the text is horizontally positioned\nrelative to the given `x` and `y` coordinates."},"verticalAnchor":{"type":{"name":"enum","value":[{"value":"\"start\"","computed":false},{"value":"\"middle\"","computed":false},{"value":"\"end\"","computed":false}]},"required":false,"description":"The verticalAnchor prop defines how the text is vertically positioned\nrelative to the given `x` and `y` coordinates.","defaultValue":{"value":"\"start\"","computed":false}},"transform":{"type":{"name":"union","value":[{"name":"string"},{"name":"object"}]},"required":false,"description":"The transform prop applies a transform to the rendered `<text>` element.\nIn addition to being a string, it can be an object containing transform\ndefinitions for easier authoring."},"x":{"type":{"name":"custom","raw":"Util.PropTypes.nonNegative"},"required":false,"description":"The x prop defines the x coordinate to use as a basis for horizontal\npositioning."},"y":{"type":{"name":"custom","raw":"Util.PropTypes.nonNegative"},"required":false,"description":"The y prop defines the y coordinate to use as a basis for vertical\npositioning."},"dy":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":"The dy prop defines a vertical shift from the `y` coordinate. Since this\ncomponent already accounts for `capHeight`, `lineHeight`, and\n`verticalAnchor`, this will usually not be necessary.","defaultValue":{"value":"0","computed":false}}}}