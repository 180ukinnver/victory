{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///victory-animation.min.js","webpack:///webpack/bootstrap d70151679c87159e7102","webpack:///./src/index.js","webpack:///./src/components/victory-animation.jsx","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/d3/d3.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","VictoryAnimation","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","getPrototypeOf","_react","_react2","_d3","_d32","_React$Component","state","data","interpolator","step","startRaf","bind","nextProps","raf","cancelAnimationFrame","interpolate","setState","requestAnimationFrame","children","Component","propTypes","duration","PropTypes","number","transition","array","defaultProps","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","apply","d3_vendorSymbol","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","toLowerCase","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML"],"mappings":"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","file":"victory-animation.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VictoryAnimation\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"VictoryAnimation\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VictoryAnimation\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"VictoryAnimation\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  VictoryAnimation: __webpack_require__(1)\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _d3 = __webpack_require__(3);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar VictoryAnimation = (function (_React$Component) {\n\t  _inherits(VictoryAnimation, _React$Component);\n\t\n\t  function VictoryAnimation(props) {\n\t    _classCallCheck(this, VictoryAnimation);\n\t\n\t    _get(Object.getPrototypeOf(VictoryAnimation.prototype), \"constructor\", this).call(this, props);\n\t    this.state = this.props.data;\n\t    this.interpolator = null;\n\t    this.step = 0;\n\t    this.startRaf = this.startRaf.bind(this);\n\t  }\n\t\n\t  _createClass(VictoryAnimation, [{\n\t    key: \"componentWillReceiveProps\",\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      this.raf && cancelAnimationFrame(this.raf);\n\t      this.interpolator = _d32[\"default\"].interpolate(this.state, nextProps.data);\n\t      this.startRaf();\n\t    }\n\t  }, {\n\t    key: \"startRaf\",\n\t    value: function startRaf() {\n\t      if (this.step >= 1) {\n\t        this.step = 0;\n\t        return;\n\t      }\n\t      this.setState(this.interpolator(this.step));\n\t      this.step += 0.06;\n\t      this.raf = requestAnimationFrame(this.startRaf);\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      return this.props.children(this.state);\n\t    }\n\t  }]);\n\t\n\t  return VictoryAnimation;\n\t})(_react2[\"default\"].Component);\n\t\n\tVictoryAnimation.propTypes = {\n\t  duration: _react2[\"default\"].PropTypes.number,\n\t  data: _react2[\"default\"].PropTypes.object,\n\t  transition: _react2[\"default\"].PropTypes.array\n\t};\n\t\n\tVictoryAnimation.defaultProps = {\n\t  duration: 300,\n\t  data: {},\n\t  transition: []\n\t};\n\t\n\texports[\"default\"] = VictoryAnimation;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** victory-animation.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d70151679c87159e7102\n **/","module.exports = {\n  VictoryAnimation: require(\"./components/victory-animation\")\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import React from \"react\";\nimport d3 from \"d3\";\n\nclass VictoryAnimation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props.data;\n    this.interpolator = null;\n    this.step = 0;\n    this.startRaf = this.startRaf.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    this.raf && cancelAnimationFrame(this.raf);\n    this.interpolator = d3.interpolate(this.state, nextProps.data);\n    this.startRaf();\n  }\n  startRaf() {\n    if (this.step >= 1) {\n      this.step = 0;\n      return;\n    }\n    this.setState(this.interpolator(this.step))\n    this.step += 0.06;\n    this.raf = requestAnimationFrame(this.startRaf);\n  }\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nVictoryAnimation.propTypes = {\n  duration: React.PropTypes.number,\n  data: React.PropTypes.object,\n  transition: React.PropTypes.array\n}\n\nVictoryAnimation.defaultProps = {\n  duration: 300,\n  data: {},\n  transition: []\n}\n\nexport default VictoryAnimation;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/victory-animation.jsx\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 2\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}