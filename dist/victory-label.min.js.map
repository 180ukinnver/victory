{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///victory-label.min.js","webpack:///webpack/bootstrap 413968a692af856e3418","webpack:///./src/index.js","webpack:///./src/components/victory-label.jsx","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/radium/lib/index.js","webpack:///./~/radium/lib/enhancer.js","webpack:///./~/radium/lib/resolve-styles.js","webpack:///./~/radium/lib/get-state.js","webpack:///./~/radium/lib/get-state-key.js","webpack:///./~/radium/lib/merge-styles.js","webpack:///./~/is-plain-object/index.js","webpack:///./~/isobject/index.js","webpack:///./~/radium/lib/plugins/index.js","webpack:///./~/radium/lib/plugins/check-props-plugin.js","webpack:///./~/radium/lib/plugins/merge-style-array-plugin.js","webpack:///./~/radium/lib/plugins/prefix-plugin.js","webpack:///./~/radium/lib/prefixer.js","webpack:///./~/exenv/index.js","webpack:///./~/array-find/find.js","webpack:///./~/radium/lib/plugins/resolve-interaction-styles-plugin.js","webpack:///./~/radium/lib/plugins/mouse-up-listener.js","webpack:///./~/radium/lib/plugins/resolve-media-queries-plugin.js","webpack:///./~/radium/lib/print-styles.js","webpack:///./~/radium/lib/components/print-style-sheet.js","webpack:///./~/radium/lib/components/style.js","webpack:///./~/radium/lib/camel-case-props-to-dash-case.js","webpack:///./~/radium/lib/create-markup-for-styles.js","webpack:///./~/radium/lib/keyframes.js","webpack:///./~/victory-util/lib/index.js","webpack:///./~/victory-util/lib/collection.js","webpack:///./~/lodash/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/victory-util/lib/log.js","webpack:///./~/victory-util/lib/style.js","webpack:///./~/reduce-css-calc/index.js","webpack:///./~/reduce-css-calc/~/balanced-match/index.js","webpack:///./~/reduce-function-call/index.js","webpack:///./~/victory-util/lib/type.js","webpack:///./~/victory-util/lib/prop-types.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","concat","VictoryLabel","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","length","descriptor","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","_react","_react2","_radium","_radium2","_victoryUtil","_victoryUtil2","_lodash","_lodash2","styles","stroke","fill","fontSize","fontFamily","backgroundColor","_React$Component","_VictoryLabel","arguments","style","merge","_this","getStyles","transform","Style","toTransformString","content","children","lines","split","lineHeight","capHeight","dy","verticalAnchor","calc","createElement","x","y","textAnchor","map","line","PropTypes","oneOfType","string","nonNegative","oneOf","number","Component","Enhancer","ComposedComponent","Plugins","PrintStyleSheet","getState","keyframes","__clearStateForTests","_x4","_extends","assign","source","_require","resolveStyles","printStyles","KEYS_TO_IGNORE_WHEN_COPYING_PROPERTIES","copyProperties","getOwnPropertyNames","forEach","indexOf","enhanceWithRadium","configOrComposedComponent","config","newConfig","configOrComponent","component","render","_Component","_class","displayName","name","RadiumEnhancer","_ComposedComponent","state","_radiumStyleState","_radiumIsMounted","printStyleClass","_radiumMouseUpListener","remove","_radiumMediaQueryListenersByQuery","keys","query","renderedElement","addPrintStyles","_getState","getStateKey","mergeStyles","ExecutionEnvironment","React","DEFAULT_CONFIG","plugins","mergeStyleArray","checkProps","resolveMediaQueries","resolveInteractionStyles","prefix","globalState","_resolveChildren","_ref","existingKeyMap","childrenType","result","isValidElement","Children","count","type","onlyChild","only","child","_resolveProps","_ref2","newProps","prop","propValue","_buildGetKey","originalKey","ref","alreadyGotKey","getKey","Error","_setStyleState","stateKey","existing","_lastRadiumState","setState","_runPlugins","_ref3","newStyle","plugin","componentName","getComponentField","getGlobalState","elementKey","newComponentFields","componentFields","fieldName","newGlobalState","_cloneElement","newChildren","_radiumDidResolveStyles","cloneElement","toString","isPlainObject","shouldMerge","Array","isArray","isObjectObject","o","isObject","ctor","prot","val","checkPropsPlugin","mergeStyleArrayPlugin","prefixPlugin","resolveInteractionStylesPlugin","resolveMediaQueriesPlugin","Prefixer","getPrefixedStyle","arrayFind","VENDOR_PREFIX_REGEX","vendorPrefixes","infoByCssPrefix","-moz-","cssPrefix","jsPrefix","alternativeProperties","alignItems","flex","flexDirection","justifyContent","order","alternativeValues","flex-start","flex-end","display","column","row","space-between","-ms-","alignContent","alignSelf","space-around","inline-flex","-o-","-webkit-","isUnitlessNumber","boxFlex","boxFlexGroup","columnCount","flexGrow","flexPositive","flexShrink","flexNegative","fontWeight","lineClamp","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","strokeDashoffset","strokeOpacity","strokeWidth","domStyle","prefixedPropertyCache","prefixedValueCache","prefixInfo","canUseDOM","prefixMatch","windowStyles","window","getComputedStyle","document","documentElement","match","cssVendorPrefix","getPrefixedPropertyName","unprefixed","possiblePropertyNames","toUpperCase","workingProperty","possiblePropertyName","_getUnprefixedProperty","noPrefixProperty","some","replace","charAt","toLowerCase","_addPixelSuffixToValueIfNeeded","originalProperty","unPrefixedProperty","isNaN","_getPrefixedValue","parseInt","cacheKey","join","possibleValues","v","filter","workingValue","possibleValue","reduce","newValue","prefixedStyle","newProperty","__WEBPACK_AMD_DEFINE_RESULT__","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","find","array","predicate","context","MouseUpListener","_isInteractiveStyleField","styleFieldName","existingOnMouseEnter","onMouseEnter","e","existingOnMouseLeave","onMouseLeave","existingOnMouseDown","onMouseDown","_lastMouseDown","Date","now","existingOnKeyDown","onKeyDown","existingOnKeyUp","onKeyUp","existingOnFocus","onFocus","existingOnBlur","onBlur","subscribe","interactionStyles","styleWithoutInteractions","_callbacks","_mouseUpListenerIsActive","_handleMouseUp","ev","callback","push","index","splice","removeEventListener","_windowMatchMedia","_getWindowMatchMedia","matchMedia","mediaQueryString","mediaQueryListByQueryString","mediaQueryStyles","mql","listenersByQuery","listener","matches","addListener","removeListener","styleWithoutMedia","allPrintStyles","listeners","listenerIndex","_emitChange","_appendImportantToEachValue","styleObj","importantStyleObj","className","getPrintStyles","PrintStyle","createClass","getInitialState","_getStylesState","componentDidMount","subscription","_onChange","componentWillUnmount","rules","mediaQueries","print","camelCasePropsToDashCase","createMarkupForStyles","buildCssString","selector","prefixedRules","cssPrefixedRules","serializedRules","propTypes","func","isRequired","scopeSelector","getDefaultProps","_buildStyles","accumulator","_buildMediaQueryString","completeSelector","stylesByMediaQuery","_this2","contextMediaQueries","_getContextMediaQueries","completeQuery","media","bind","dangerouslySetInnerHTML","__html","_camelCaseRegex","_camelCaseReplacer","p1","p2","_camelCaseToDashCase","s","spaces","isAnimationSupported","keyframesPrefixed","domPrefixes","element","animationName","animationIndex","animationStyleSheet","head","appendChild","keyframeRules","rule","percentage","prefixedProps","cssPrefixedProps","serializedProps","sheet","insertRule","cssRules","_interopRequireWildcard","newObj","_collection","Collection","_log","Log","_style","_type","Type","_propTypes","containsStrings","collection","item","isString","containsOnlyStrings","every","global","baseCompareAscending","other","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","fromRight","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","chars","charsRightIndex","compareAscending","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","lodash","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","reverse","outer","iterIndex","data","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","cacheIndexOf","cache","cachePush","add","arrayConcat","othIndex","othLength","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","baseAssign","baseCopy","baseAt","isNil","isArrayLike","propsLength","isIndex","baseCallback","thisArg","argCount","bindCallback","identity","baseMatches","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","FUNC_ERROR_TEXT","setTimeout","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","baseRandom","min","max","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","createPartialWrapper","createRound","methodName","Math","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","pairs","getNative","isNative","transforms","size","input","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","rePropName","quote","reEscapeChar","chunk","compact","drop","n","dropRight","dropRightWhile","dropWhile","first","flatten","flattenDeep","initial","lastIndexOf","pull","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","wrapperReverse","wrapped","wrapperToString","wrapperValue","findWhere","includes","pluck","reject","sample","toArray","rand","shuffle","sortBy","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isFinite","isMatch","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","radix","trim","nativeParseInt","reHasHexPrefix","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","constant","matchesProperty","mixin","isObj","methodNames","noConflict","_","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","idCounter","augend","addend","sum","defaults","pick","contextProps","Number","String","arrayProto","objectProto","stringProto","WeakMap","ceil","floor","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","findLast","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduceRight","sortByAll","getTime","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","modArgs","partial","partialRight","rearg","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","kebabCase","padLeft","padRight","snakeCase","startCase","method","methodOf","round","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","d","f","r","t","u","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","webpackPolyfill","deprecate","paths","warn","_reduceCssCalc","_reduceCssCalc2","expr","getColorScale","scales","victory","gray","bluePurple","red","yellowBlue","reduceCSSCalc","decimalPrecision","evaluateExpression","expression","functionIdentifier","stack","MAX_STACK","evaluateNestedExpression","units","getUnitsInExpression","unit","percent","toEvaluate","eval","evaluatedPart","nonEvaluatedPart","NESTED_CALC_RE","balancedExpr","balanced","body","evaluated","pre","post","reduceFunctionCall","uniqueUnits","unitRegEx","str","bal","substr","functionRE","getFunctionCalls","evalFunctionCall","expressions","fnRE","searchMatch","startIndex","SyntaxError","nullConstructor","undefinedConstructor","getConstructor","getConstructorName","makeChainable","validator","_chainable","propName","chainable","error","minMaxArray","scale","copy","domain","homogenousArray","_constructor","otherConstructor","constructorName","otherConstructorName"],"mappings":"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","file":"victory-label.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VictoryLabel\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"VictoryLabel\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VictoryLabel\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"VictoryLabel\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  VictoryLabel: __webpack_require__(1)\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _radium = __webpack_require__(3);\n\t\n\tvar _radium2 = _interopRequireDefault(_radium);\n\t\n\tvar _victoryUtil = __webpack_require__(27);\n\t\n\tvar _victoryUtil2 = _interopRequireDefault(_victoryUtil);\n\t\n\tvar _lodash = __webpack_require__(29);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar styles = {\n\t  stroke: \"transparent\",\n\t  fill: \"#756f6a\",\n\t  fontSize: 16,\n\t  fontFamily: \"Helvetica\",\n\t  backgroundColor: \"#ccc\"\n\t};\n\t\n\tvar VictoryLabel = (function (_React$Component) {\n\t  _inherits(VictoryLabel, _React$Component);\n\t\n\t  function VictoryLabel() {\n\t    _classCallCheck(this, _VictoryLabel);\n\t\n\t    _get(Object.getPrototypeOf(_VictoryLabel.prototype), \"constructor\", this).apply(this, arguments);\n\t  }\n\t\n\t  _createClass(VictoryLabel, [{\n\t    key: \"getStyles\",\n\t    value: function getStyles() {\n\t      return this.props.style ? _lodash2[\"default\"].merge({}, styles, this.props.style) : styles;\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _this = this;\n\t\n\t      var style = this.getStyles();\n\t      var transform = _victoryUtil2[\"default\"].Style.toTransformString(this.props.transform);\n\t      var content = this.props.children || \"\";\n\t      var lines = content.split(\"\\n\");\n\t\n\t      var lineHeight = this.props.lineHeight;\n\t      if (typeof lineHeight === \"number\") {\n\t        lineHeight = lineHeight + \"em\";\n\t      }\n\t\n\t      var capHeight = this.props.capHeight;\n\t      if (typeof capHeight === \"number\") {\n\t        capHeight = capHeight + \"em\";\n\t      }\n\t\n\t      var dy = this.props.dy;\n\t      switch (this.props.verticalAnchor) {\n\t        case \"end\":\n\t          dy = _victoryUtil2[\"default\"].Style.calc(dy + \" + \" + capHeight + \" / 2 + (0.5 - \" + lines.length + \") * \" + lineHeight);\n\t          break;\n\t        case \"middle\":\n\t          dy = _victoryUtil2[\"default\"].Style.calc(dy + \" + \" + capHeight + \" / 2 + (0.5 - \" + lines.length + \" / 2) * \" + lineHeight);\n\t          break;\n\t        default:\n\t          dy = _victoryUtil2[\"default\"].Style.calc(dy + \" + \" + capHeight + \" / 2 + \" + lineHeight + \" / 2\");\n\t      }\n\t\n\t      return _react2[\"default\"].createElement(\n\t        \"text\",\n\t        { x: this.props.x, y: this.props.y, dy: dy,\n\t          textAnchor: this.props.textAnchor,\n\t          transform: transform,\n\t          style: style\n\t        },\n\t        lines.map(function (line, i) {\n\t          return _react2[\"default\"].createElement(\n\t            \"tspan\",\n\t            { key: i, x: _this.props.x, dy: i ? lineHeight : undefined },\n\t            line\n\t          );\n\t        })\n\t      );\n\t    }\n\t  }], [{\n\t    key: \"propTypes\",\n\t    value: {\n\t      /**\n\t       * The capHeight prop defines a text metric for the font being used: the\n\t       * expected height of capital letters. This is necessary because of SVG,\n\t       * which (a) positions the *bottom* of the text at `y`, and (b) has no\n\t       * notion of line height. The value should ideally use the same units as\n\t       * `lineHeight` and `dy`, preferably ems. If given a unitless number, it\n\t       * is assumed to be ems.\n\t       */\n\t      capHeight: _react.PropTypes.oneOfType([_react.PropTypes.string, _victoryUtil2[\"default\"].PropTypes.nonNegative]),\n\t      /**\n\t       * The children of this component define the content of the label. This\n\t       * makes using the component similar to normal HTML spans or labels.\n\t       * Currently, only strings are supported.\n\t       */\n\t      children: _react.PropTypes.string, // TODO: Expand child support in future release\n\t      /**\n\t       * The lineHeight prop defines how much space a single line of text should\n\t       * take up. Note that SVG has no notion of line-height, so the positioning\n\t       * may differ slightly from what you would expect with CSS, but the result\n\t       * is similar: a roughly equal amount of extra space is distributed above\n\t       * and below the line of text. The value should ideally use the same units\n\t       * as `capHeight` and `dy`, preferably ems. If given a unitless number, it\n\t       * is assumed to be ems.\n\t       */\n\t      lineHeight: _react.PropTypes.oneOfType([_react.PropTypes.string, _victoryUtil2[\"default\"].PropTypes.nonNegative]),\n\t      /**\n\t       * The style prop applies CSS properties to the rendered `<text>` element.\n\t       */\n\t      style: _react.PropTypes.object,\n\t      /**\n\t       * The textAnchor prop defines how the text is horizontally positioned\n\t       * relative to the given `x` and `y` coordinates.\n\t       */\n\t      textAnchor: _react.PropTypes.oneOf([\"start\", \"middle\", \"end\", \"inherit\"]),\n\t      /**\n\t       * The verticalAnchor prop defines how the text is vertically positioned\n\t       * relative to the given `x` and `y` coordinates.\n\t       */\n\t      verticalAnchor: _react.PropTypes.oneOf([\"start\", \"middle\", \"end\"]),\n\t      /**\n\t       * The transform prop applies a transform to the rendered `<text>` element.\n\t       * In addition to being a string, it can be an object containing transform\n\t       * definitions for easier authoring.\n\t       */\n\t      transform: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object]),\n\t      /**\n\t       * The x prop defines the x coordinate to use as a basis for horizontal\n\t       * positioning.\n\t       */\n\t      x: _victoryUtil2[\"default\"].PropTypes.nonNegative,\n\t      /**\n\t       * The y prop defines the y coordinate to use as a basis for vertical\n\t       * positioning.\n\t       */\n\t      y: _victoryUtil2[\"default\"].PropTypes.nonNegative,\n\t      /**\n\t       * The dy prop defines a vertical shift from the `y` coordinate. Since this\n\t       * component already accounts for `capHeight`, `lineHeight`, and\n\t       * `verticalAnchor`, this will usually not be necessary.\n\t       */\n\t      dy: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string])\n\t    },\n\t    enumerable: true\n\t  }, {\n\t    key: \"defaultProps\",\n\t    value: {\n\t      capHeight: \"0.71em\", // Magic number from d3.\n\t      lineHeight: 1,\n\t      verticalAnchor: \"start\",\n\t      dy: 0\n\t    },\n\t    enumerable: true\n\t  }]);\n\t\n\t  var _VictoryLabel = VictoryLabel;\n\t  VictoryLabel = (0, _radium2[\"default\"])(VictoryLabel) || VictoryLabel;\n\t  return VictoryLabel;\n\t})(_react2[\"default\"].Component);\n\t\n\texports[\"default\"] = VictoryLabel;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Enhancer = __webpack_require__(4);\n\t\n\tmodule.exports = function (ComposedComponent /*: constructor*/) {\n\t  return Enhancer(ComposedComponent);\n\t};\n\tmodule.exports.Plugins = __webpack_require__(11);\n\tmodule.exports.PrintStyleSheet = __webpack_require__(22);\n\tmodule.exports.Style = __webpack_require__(23);\n\tmodule.exports.getState = __webpack_require__(6);\n\tmodule.exports.keyframes = __webpack_require__(26);\n\tmodule.exports.__clearStateForTests = __webpack_require__(5).__clearStateForTests;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _require = __webpack_require__(2);\n\t\n\tvar Component = _require.Component;\n\t\n\tvar resolveStyles = __webpack_require__(5);\n\tvar printStyles = __webpack_require__(21);\n\t\n\tvar KEYS_TO_IGNORE_WHEN_COPYING_PROPERTIES = ['arguments', 'callee', 'caller', 'length', 'name', 'prototype', 'type'];\n\t\n\tvar copyProperties = function copyProperties(source, target) {\n\t  Object.getOwnPropertyNames(source).forEach(function (key) {\n\t    if (KEYS_TO_IGNORE_WHEN_COPYING_PROPERTIES.indexOf(key) < 0 && !target.hasOwnProperty(key)) {\n\t      var descriptor = Object.getOwnPropertyDescriptor(source, key);\n\t      Object.defineProperty(target, key, descriptor);\n\t    }\n\t  });\n\t};\n\t\n\tvar enhanceWithRadium = function enhanceWithRadium(configOrComposedComponent /*: constructor | Function | Object*/) /*: constructor*/ {\n\t  var config /*:: ?: Object*/ = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t  if (typeof configOrComposedComponent !== 'function') {\n\t    var newConfig = _extends({}, config, configOrComposedComponent);\n\t    return function (configOrComponent) {\n\t      return enhanceWithRadium(configOrComponent, newConfig);\n\t    };\n\t  }\n\t\n\t  var component /*: Function*/ = configOrComposedComponent;\n\t  var ComposedComponent /*: constructor*/ = component;\n\t\n\t  // Handle stateless components\n\t\n\t  if (!ComposedComponent.render && !ComposedComponent.prototype.render) {\n\t    ComposedComponent = (function (_Component) {\n\t      _inherits(_class, _Component);\n\t\n\t      function _class() {\n\t        _classCallCheck(this, _class);\n\t\n\t        _get(Object.getPrototypeOf(_class.prototype), 'constructor', this).apply(this, arguments);\n\t      }\n\t\n\t      _createClass(_class, [{\n\t        key: 'render',\n\t        value: function render() {\n\t          return component(this.props);\n\t        }\n\t      }]);\n\t\n\t      return _class;\n\t    })(Component);\n\t    ComposedComponent.displayName = component.displayName || component.name;\n\t  }\n\t\n\t  var RadiumEnhancer = (function (_ComposedComponent) {\n\t    _inherits(RadiumEnhancer, _ComposedComponent);\n\t\n\t    function RadiumEnhancer() {\n\t      _classCallCheck(this, RadiumEnhancer);\n\t\n\t      _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'constructor', this).apply(this, arguments);\n\t\n\t      this.state = this.state || {};\n\t      this.state._radiumStyleState = {};\n\t      this._radiumIsMounted = true;\n\t\n\t      if (RadiumEnhancer.printStyleClass) {\n\t        this.printStyleClass = RadiumEnhancer.printStyleClass;\n\t      }\n\t    }\n\t\n\t    // Class inheritance uses Object.create and because of __proto__ issues\n\t    // with IE <10 any static properties of the superclass aren't inherited and\n\t    // so need to be manually populated.\n\t    // See http://babeljs.io/docs/advanced/caveats/#classes-10-and-below-\n\t\n\t    _createClass(RadiumEnhancer, [{\n\t      key: 'componentWillUnmount',\n\t      value: function componentWillUnmount() {\n\t        if (_get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this)) {\n\t          _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this).call(this);\n\t        }\n\t\n\t        this._radiumIsMounted = false;\n\t\n\t        if (this._radiumMouseUpListener) {\n\t          this._radiumMouseUpListener.remove();\n\t        }\n\t\n\t        if (this._radiumMediaQueryListenersByQuery) {\n\t          Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function (query) {\n\t            this._radiumMediaQueryListenersByQuery[query].remove();\n\t          }, this);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'render',\n\t      value: function render() {\n\t        var renderedElement = _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'render', this).call(this);\n\t        return resolveStyles(this, renderedElement, config);\n\t      }\n\t    }]);\n\t\n\t    return RadiumEnhancer;\n\t  })(ComposedComponent);\n\t\n\t  copyProperties(ComposedComponent, RadiumEnhancer);\n\t\n\t  if (false) {\n\t    // This also fixes React Hot Loader by exposing the original components top\n\t    // level prototype methods on the Radium enhanced prototype as discussed in\n\t    // https://github.com/FormidableLabs/radium/issues/219.\n\t    copyProperties(ComposedComponent.prototype, RadiumEnhancer.prototype);\n\t  }\n\t\n\t  RadiumEnhancer.displayName = ComposedComponent.displayName || ComposedComponent.name || 'Component';\n\t\n\t  RadiumEnhancer.printStyleClass = printStyles.addPrintStyles(RadiumEnhancer);\n\t\n\t  return RadiumEnhancer;\n\t};\n\t\n\tmodule.exports = enhanceWithRadium;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\t/*:: import type {Config} from './config';*/\n\t\n\tvar _getState = __webpack_require__(6);\n\tvar getStateKey = __webpack_require__(7);\n\tvar mergeStyles = __webpack_require__(8);\n\tvar Plugins = __webpack_require__(11);\n\t\n\tvar ExecutionEnvironment = __webpack_require__(16);\n\tvar React = __webpack_require__(2);\n\t\n\tvar DEFAULT_CONFIG = {\n\t  plugins: [Plugins.mergeStyleArray, Plugins.checkProps, Plugins.resolveMediaQueries, Plugins.resolveInteractionStyles, Plugins.prefix, Plugins.checkProps]\n\t};\n\t\n\t// Gross\n\tvar globalState = {};\n\t\n\t// Declare early for recursive helpers.\n\tvar resolveStyles = ((null /*: any*/) /*: (\n\t                                        component: any, // ReactComponent, flow+eslint complaining\n\t                                        renderedElement: any,\n\t                                        config: Config,\n\t                                        existingKeyMap?: {[key: string]: bool}\n\t                                      ) => any*/);\n\t\n\tvar _resolveChildren = function _resolveChildren(_ref) {\n\t  var children = _ref.children;\n\t  var component = _ref.component;\n\t  var config = _ref.config;\n\t  var existingKeyMap = _ref.existingKeyMap;\n\t\n\t  if (!children) {\n\t    return children;\n\t  }\n\t\n\t  var childrenType = typeof children;\n\t\n\t  if (childrenType === 'string' || childrenType === 'number') {\n\t    // Don't do anything with a single primitive child\n\t    return children;\n\t  }\n\t\n\t  if (childrenType === 'function') {\n\t    // Wrap the function, resolving styles on the result\n\t    return function () {\n\t      var result = children.apply(this, arguments);\n\t      if (React.isValidElement(result)) {\n\t        return resolveStyles(component, result, config, existingKeyMap);\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (React.Children.count(children) === 1 && children.type) {\n\t    // If a React Element is an only child, don't wrap it in an array for\n\t    // React.Children.map() for React.Children.only() compatibility.\n\t    var onlyChild = React.Children.only(children);\n\t    return resolveStyles(component, onlyChild, config, existingKeyMap);\n\t  }\n\t\n\t  return React.Children.map(children, function (child) {\n\t    if (React.isValidElement(child)) {\n\t      return resolveStyles(component, child, config, existingKeyMap);\n\t    }\n\t\n\t    return child;\n\t  });\n\t};\n\t\n\t// Recurse over props, just like children\n\tvar _resolveProps = function _resolveProps(_ref2) {\n\t  var component = _ref2.component;\n\t  var config = _ref2.config;\n\t  var existingKeyMap = _ref2.existingKeyMap;\n\t  var props = _ref2.props;\n\t\n\t  var newProps = props;\n\t\n\t  Object.keys(props).forEach(function (prop) {\n\t    // We already recurse over children above\n\t    if (prop === 'children') {\n\t      return;\n\t    }\n\t\n\t    var propValue = props[prop];\n\t    if (React.isValidElement(propValue)) {\n\t      newProps = _extends({}, newProps);\n\t      newProps[prop] = resolveStyles(component, propValue, config, existingKeyMap);\n\t    }\n\t  });\n\t\n\t  return newProps;\n\t};\n\t\n\tvar _buildGetKey = function _buildGetKey(renderedElement, existingKeyMap) {\n\t  // We need a unique key to correlate state changes due to user interaction\n\t  // with the rendered element, so we know to apply the proper interactive\n\t  // styles.\n\t  var originalKey = typeof renderedElement.ref === 'string' ? renderedElement.ref : renderedElement.key;\n\t  var key = getStateKey(originalKey);\n\t\n\t  var alreadyGotKey = false;\n\t  var getKey = function getKey() {\n\t    if (alreadyGotKey) {\n\t      return key;\n\t    }\n\t\n\t    alreadyGotKey = true;\n\t\n\t    if (existingKeyMap[key]) {\n\t      throw new Error('Radium requires each element with interactive styles to have a unique ' + 'key, set using either the ref or key prop. ' + (originalKey ? 'Key \"' + originalKey + '\" is a duplicate.' : 'Multiple elements have no key specified.'));\n\t    }\n\t\n\t    existingKeyMap[key] = true;\n\t\n\t    return key;\n\t  };\n\t\n\t  return getKey;\n\t};\n\t\n\tvar _setStyleState = function _setStyleState(component, key, stateKey, value) {\n\t  if (!component._radiumIsMounted) {\n\t    return;\n\t  }\n\t\n\t  var existing = component._lastRadiumState || component.state && component.state._radiumStyleState || {};\n\t\n\t  var state = { _radiumStyleState: _extends({}, existing) };\n\t  state._radiumStyleState[key] = _extends({}, state._radiumStyleState[key]);\n\t  state._radiumStyleState[key][stateKey] = value;\n\t\n\t  component._lastRadiumState = state._radiumStyleState;\n\t  component.setState(state);\n\t};\n\t\n\tvar _runPlugins = function _runPlugins(_ref3) {\n\t  var component = _ref3.component;\n\t  var config = _ref3.config;\n\t  var existingKeyMap = _ref3.existingKeyMap;\n\t  var props = _ref3.props;\n\t  var renderedElement = _ref3.renderedElement;\n\t\n\t  // Don't run plugins if renderedElement is not a simple ReactDOMElement or has\n\t  // no style.\n\t  if (!React.isValidElement(renderedElement) || typeof renderedElement.type !== 'string' || !props.style) {\n\t    return props;\n\t  }\n\t\n\t  var newProps = props;\n\t\n\t  var plugins = config.plugins || DEFAULT_CONFIG.plugins;\n\t\n\t  var getKey = _buildGetKey(renderedElement, existingKeyMap);\n\t\n\t  var newStyle = props.style;\n\t  plugins.forEach(function (plugin) {\n\t    var result = plugin({\n\t      ExecutionEnvironment: ExecutionEnvironment,\n\t      componentName: component.constructor.displayName || component.constructor.name,\n\t      config: config,\n\t      getComponentField: function getComponentField(key) {\n\t        return component[key];\n\t      },\n\t      getGlobalState: function getGlobalState(key) {\n\t        return globalState[key];\n\t      },\n\t      getState: function getState(stateKey, elementKey) {\n\t        return _getState(component.state, elementKey || getKey(), stateKey);\n\t      },\n\t      mergeStyles: mergeStyles,\n\t      props: newProps,\n\t      setState: function setState(stateKey, value, elementKey) {\n\t        return _setStyleState(component, elementKey || getKey(), stateKey, value);\n\t      },\n\t      style: newStyle\n\t    }) || {};\n\t\n\t    newStyle = result.style || newStyle;\n\t\n\t    newProps = result.props && Object.keys(result.props).length ? _extends({}, newProps, result.props) : newProps;\n\t\n\t    var newComponentFields = result.componentFields || {};\n\t    Object.keys(newComponentFields).forEach(function (fieldName) {\n\t      component[fieldName] = newComponentFields[fieldName];\n\t    });\n\t\n\t    var newGlobalState = result.globalState || {};\n\t    Object.keys(newGlobalState).forEach(function (key) {\n\t      globalState[key] = newGlobalState[key];\n\t    });\n\t  });\n\t\n\t  if (newStyle !== props.style) {\n\t    newProps = _extends({}, newProps, { style: newStyle });\n\t  }\n\t\n\t  return newProps;\n\t};\n\t\n\t// Wrapper around React.cloneElement. To avoid processing the same element\n\t// twice, whenever we clone an element add a special prop to make sure we don't\n\t// process this element again.\n\tvar _cloneElement = function _cloneElement(renderedElement, newProps, newChildren) {\n\t  // Only add flag if this is a normal DOM element\n\t  if (typeof renderedElement.type === 'string') {\n\t    newProps = _extends({}, newProps, { _radiumDidResolveStyles: true });\n\t  }\n\t\n\t  return React.cloneElement(renderedElement, newProps, newChildren);\n\t};\n\t\n\t//\n\t// The nucleus of Radium. resolveStyles is called on the rendered elements\n\t// before they are returned in render. It iterates over the elements and\n\t// children, rewriting props to add event handlers required to capture user\n\t// interactions (e.g. mouse over). It also replaces the style prop because it\n\t// adds in the various interaction styles (e.g. :hover).\n\t//\n\tresolveStyles = function (component /*: any*/, // ReactComponent, flow+eslint complaining\n\trenderedElement /*: any*/, // ReactElement\n\tconfig /*: Config*/, existingKeyMap /*:: ?: {[key: string]: boolean}*/) /*: any*/ {\n\t  if (config === undefined) config = DEFAULT_CONFIG;\n\t  // ReactElement\n\t  existingKeyMap = existingKeyMap || {};\n\t\n\t  if (!renderedElement ||\n\t  // Bail if we've already processed this element. This ensures that only the\n\t  // owner of an element processes that element, since the owner's render\n\t  // function will be called first (which will always be the case, since you\n\t  // can't know what else to render until you render the parent component).\n\t  renderedElement.props && renderedElement.props._radiumDidResolveStyles) {\n\t    return renderedElement;\n\t  }\n\t\n\t  var newChildren = _resolveChildren({\n\t    children: renderedElement.props.children,\n\t    component: component,\n\t    config: config,\n\t    existingKeyMap: existingKeyMap\n\t  });\n\t\n\t  var newProps = _resolveProps({\n\t    component: component,\n\t    config: config,\n\t    existingKeyMap: existingKeyMap,\n\t    props: renderedElement.props\n\t  });\n\t\n\t  newProps = _runPlugins({\n\t    component: component,\n\t    config: config,\n\t    existingKeyMap: existingKeyMap,\n\t    props: newProps,\n\t    renderedElement: renderedElement\n\t  });\n\t\n\t  // If nothing changed, don't bother cloning the element. Might be a bit\n\t  // wasteful, as we add the sentinal to stop double-processing when we clone.\n\t  // Assume benign double-processing is better than unneeded cloning.\n\t  if (newChildren === renderedElement.props.children && newProps === renderedElement.props) {\n\t    return renderedElement;\n\t  }\n\t\n\t  return _cloneElement(renderedElement, newProps !== renderedElement.props ? newProps : {}, newChildren);\n\t};\n\t\n\t// Only for use by tests\n\tresolveStyles.__clearStateForTests = function () {\n\t  globalState = {};\n\t};\n\t\n\tmodule.exports = resolveStyles;\n\t// ReactComponent, flow+eslint complaining\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar getStateKey = __webpack_require__(7);\n\t\n\tvar getState = function getState(state /*: {_radiumStyleState: {[key: string]: {[value: string]: boolean}}}*/, elementKey /*: string*/, value /*: string*/) /*: any*/ {\n\t  var key = getStateKey(elementKey);\n\t\n\t  return !!state && !!state._radiumStyleState && !!state._radiumStyleState[key] && state._radiumStyleState[key][value];\n\t};\n\t\n\tmodule.exports = getState;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar getStateKey = function getStateKey(elementKey /*: ?string*/) /*: string*/ {\n\t  return elementKey === null || elementKey === undefined ? 'main' : elementKey.toString();\n\t};\n\t\n\tmodule.exports = getStateKey;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar isPlainObject = __webpack_require__(9);\n\t\n\tvar shouldMerge = function shouldMerge(value) {\n\t  // Don't merge objects overriding toString, since they should be converted\n\t  // to string values.\n\t  return isPlainObject(value) && value.toString === Object.prototype.toString;\n\t};\n\t\n\t// Merge style objects. Deep merge plain object values.\n\tvar mergeStyles = function mergeStyles(styles) {\n\t  var result = {};\n\t\n\t  styles.forEach(function (style) {\n\t    if (!style || typeof style !== 'object') {\n\t      return;\n\t    }\n\t\n\t    if (Array.isArray(style)) {\n\t      style = mergeStyles(style);\n\t    }\n\t\n\t    Object.keys(style).forEach(function (key) {\n\t      if (shouldMerge(style[key]) && shouldMerge(result[key])) {\n\t        result[key] = mergeStyles([result[key], style[key]]);\n\t      } else {\n\t        result[key] = style[key];\n\t      }\n\t    });\n\t  });\n\t\n\t  return result;\n\t};\n\t\n\tmodule.exports = mergeStyles;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tvar isObject = __webpack_require__(10);\n\t\n\tfunction isObjectObject(o) {\n\t  return isObject(o) === true\n\t    && Object.prototype.toString.call(o) === '[object Object]';\n\t}\n\t\n\tmodule.exports = function isPlainObject(o) {\n\t  var ctor,prot;\n\t  \n\t  if (isObjectObject(o) === false) return false;\n\t  \n\t  // If has modified constructor\n\t  ctor = o.constructor;\n\t  if (typeof ctor !== 'function') return false;\n\t  \n\t  // If has modified prototype\n\t  prot = ctor.prototype;\n\t  if (isObjectObject(prot) === false) return false;\n\t  \n\t  // If constructor does not have an Object-specific method\n\t  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n\t    return false;\n\t  }\n\t  \n\t  // Most likely a plain Object\n\t  return true;\n\t};\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = function isObject(val) {\n\t  return val != null && typeof val === 'object'\n\t    && !Array.isArray(val);\n\t};\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @flow */\n\t/* eslint-disable block-scoped-var */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\t/*:: import type {Config} from '../config';*/\n\t\n\tvar checkPropsPlugin = __webpack_require__(12);\n\tvar mergeStyleArrayPlugin = __webpack_require__(13);\n\tvar prefixPlugin = __webpack_require__(14);\n\tvar resolveInteractionStylesPlugin = __webpack_require__(18);\n\tvar resolveMediaQueriesPlugin = __webpack_require__(20);\n\t\n\t/*:: export type PluginConfig = {\n\t  // May not be readable if code has been minified\n\t  componentName: string,\n\t\n\t  // The Radium configuration\n\t  config: Config,\n\t\n\t  // Retrieve the value of a field on the component\n\t  getComponentField: (key: string) => any,\n\t\n\t  // Retrieve the value of a field global to the Radium module\n\t  // Used so that tests can easily clear global state.\n\t  getGlobalState: (key: string) => any,\n\t\n\t  // Retrieve the value of some state specific to the rendered element.\n\t  // Requires the element to have a unique key or ref or for an element key\n\t  // to be passed in.\n\t  getState: (stateKey: string, elementKey?: string) => any,\n\t\n\t  // Access to the mergeStyles utility\n\t  mergeStyles: (styles: Array<Object>) => Object,\n\t\n\t  // The props of the rendered element. This can be changed by each plugin,\n\t  // and successive plugins will see the result of previous plugins.\n\t  props: Object,\n\t\n\t  // Calls setState on the component with the given key and value.\n\t  // By default this is specific to the rendered element, but you can override\n\t  // by passing in the `elementKey` parameter.\n\t  setState: (stateKey: string, value: any, elementKey?: string) => void,\n\t\n\t  // The style prop of the rendered element. This can be changed by each plugin,\n\t  // and successive plugins will see the result of previous plugins. Kept\n\t  // separate from `props` for ease of use.\n\t  style: Object,\n\t\n\t  // uses the exenv npm module\n\t  ExecutionEnvironment: {\n\t    canUseEventListeners: bool,\n\t    canUseDOM: bool,\n\t  }\n\t};*/\n\t/*:: export type PluginResult = ?{\n\t  // Merged into the component directly. Useful for storing things for which you\n\t  // don't need to re-render, event subscriptions, for instance.\n\t  componentFields?: Object,\n\t\n\t  // Merged into a Radium controlled global state object. Use this instead of\n\t  // module level state for ease of clearing state between tests.\n\t  globalState?: Object,\n\t\n\t  // Merged into the rendered element's props.\n\t  props?: Object,\n\t\n\t  // Replaces (not merged into) the rendered element's style property.\n\t  style?: Object,\n\t};*/\n\t\n\tmodule.exports = {\n\t  checkProps: checkPropsPlugin,\n\t  mergeStyleArray: mergeStyleArrayPlugin,\n\t  prefix: prefixPlugin,\n\t  resolveInteractionStyles: resolveInteractionStylesPlugin,\n\t  resolveMediaQueries: resolveMediaQueriesPlugin\n\t};\n\t\n\t// May not be readable if code has been minified\n\t\n\t// The Radium configuration\n\t\n\t// Retrieve the value of a field on the component\n\t\n\t// Retrieve the value of a field global to the Radium module\n\t// Used so that tests can easily clear global state.\n\t\n\t// Retrieve the value of some state specific to the rendered element.\n\t// Requires the element to have a unique key or ref or for an element key\n\t// to be passed in.\n\t\n\t// Access to the mergeStyles utility\n\t\n\t// The props of the rendered element. This can be changed by each plugin,\n\t// and successive plugins will see the result of previous plugins.\n\t\n\t// Calls setState on the component with the given key and value.\n\t// By default this is specific to the rendered element, but you can override\n\t// by passing in the `elementKey` parameter.\n\t\n\t// The style prop of the rendered element. This can be changed by each plugin,\n\t// and successive plugins will see the result of previous plugins. Kept\n\t// separate from `props` for ease of use.\n\t\n\t// uses the exenv npm module\n\t\n\t// Merged into the component directly. Useful for storing things for which you\n\t// don't need to re-render, event subscriptions, for instance.\n\t\n\t// Merged into a Radium controlled global state object. Use this instead of\n\t// module level state for ease of clearing state between tests.\n\t\n\t// Merged into the rendered element's props.\n\t\n\t// Replaces (not merged into) the rendered element's style property.\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\t/*:: import type {PluginConfig, PluginResult} from '.';*/\n\t\n\tvar checkProps = (function () {} /*: any*/);\n\t\n\tif (false) {\n\t  // Warn if you use longhand and shorthand properties in the same style\n\t  // object.\n\t  // https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties\n\t\n\t  var shorthandPropertyExpansions = {\n\t    'background': ['backgroundAttachment', 'backgroundBlendMode', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundRepeatX', 'backgroundRepeatY', 'backgroundSize'],\n\t    'border': ['borderBottom', 'borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderColor', 'borderLeft', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRight', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderStyle', 'borderTop', 'borderTopColor', 'borderTopStyle', 'borderTopWidth', 'borderWidth'],\n\t    'borderImage': ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],\n\t    'borderRadius': ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],\n\t    'font': ['fontFamily', 'fontKerning', 'fontSize', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantLigatures', 'fontWeight', 'lineHeight'],\n\t    'listStyle': ['listStyleImage', 'listStylePosition', 'listStyleType'],\n\t    'margin': ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n\t    'padding': ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n\t    'transition': ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction']\n\t  };\n\t\n\t  checkProps = function (config /*: PluginConfig*/) /*: PluginResult*/ {\n\t    var componentName = config.componentName;\n\t    var style = config.style;\n\t\n\t    if (typeof style !== 'object' || !style) {\n\t      return;\n\t    }\n\t\n\t    var styleKeys = Object.keys(style);\n\t    styleKeys.forEach(function (styleKey) {\n\t      if (shorthandPropertyExpansions[styleKey] && shorthandPropertyExpansions[styleKey].some(function (sp) {\n\t        return styleKeys.indexOf(sp) !== -1;\n\t      })) {\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          /* eslint-disable no-console */\n\t          console.warn('Radium: property \"' + styleKey + '\" in style object', style, ': do not mix longhand and ' + 'shorthand properties in the same style object. Check the render ' + 'method of ' + componentName + '.', 'See https://github.com/FormidableLabs/radium/issues/95 for more ' + 'information.');\n\t          /* eslint-enable no-console */\n\t        }\n\t      }\n\t    });\n\t\n\t    styleKeys.forEach(function (k) {\n\t      return checkProps(_extends({}, config, { style: style[k] }));\n\t    });\n\t    return;\n\t  };\n\t}\n\t\n\tmodule.exports = checkProps;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\t// Convenient syntax for multiple styles: `style={[style1, style2, etc]}`\n\t// Ignores non-objects, so you can do `this.state.isCool && styles.cool`.\n\t/*:: import type {PluginConfig, PluginResult} from '.';*/var mergeStyleArrayPlugin = function mergeStyleArrayPlugin(_ref /*: PluginConfig*/) /*: PluginResult*/ {\n\t  var style = _ref.style;\n\t  var mergeStyles = _ref.mergeStyles;\n\t\n\t  var newStyle = Array.isArray(style) ? mergeStyles(style) : style;\n\t  return { style: newStyle };\n\t};\n\t\n\tmodule.exports = mergeStyleArrayPlugin;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\t/*:: import type {PluginConfig, PluginResult} from '.';*/\n\t\n\tvar Prefixer = __webpack_require__(15);\n\t\n\tvar prefixPlugin = function prefixPlugin(_ref /*: PluginConfig*/) /*: PluginResult*/ {\n\t  var componentName = _ref.componentName;\n\t  var style = _ref.style;\n\t\n\t  var newStyle = Prefixer.getPrefixedStyle(style, componentName);\n\t  return { style: newStyle };\n\t};\n\t\n\tmodule.exports = prefixPlugin;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Based on https://github.com/jsstyles/css-vendor, but without having to\n\t * convert between different cases all the time.\n\t *\n\t * @flow\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(16);\n\tvar arrayFind = __webpack_require__(17);\n\t\n\tvar VENDOR_PREFIX_REGEX = /-(moz|webkit|ms|o)-/;\n\t\n\tvar vendorPrefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\t\n\tvar infoByCssPrefix = {\n\t  '-moz-': {\n\t    cssPrefix: '-moz-',\n\t    jsPrefix: 'Moz',\n\t    alternativeProperties: {\n\t      // OLD - Firefox 19-\n\t      alignItems: ['MozBoxAlign'],\n\t      flex: ['MozBoxFlex'],\n\t      flexDirection: ['MozBoxOrient'],\n\t      justifyContent: ['MozBoxPack'],\n\t      order: ['MozBoxOrdinalGroup']\n\t    },\n\t    alternativeValues: {\n\t      // OLD - Firefox 19-\n\t      alignItems: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      display: {\n\t        flex: ['-moz-box']\n\t      },\n\t      flexDirection: {\n\t        column: ['vertical'],\n\t        row: ['horizontal']\n\t      },\n\t      justifyContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify']\n\t      }\n\t    }\n\t  },\n\t  '-ms-': {\n\t    cssPrefix: '-ms-',\n\t    jsPrefix: 'ms',\n\t    alternativeProperties: {\n\t      // TWEENER - IE 10\n\t      alignContent: ['msFlexLinePack'],\n\t      alignItems: ['msFlexAlign'],\n\t      alignSelf: ['msFlexAlignItem'],\n\t      justifyContent: ['msFlexPack'],\n\t      order: ['msFlexOrder']\n\t    },\n\t    alternativeValues: {\n\t      // TWEENER - IE 10\n\t      alignContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify'],\n\t        'space-around': ['distribute']\n\t      },\n\t      alignItems: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      alignSelf: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      display: {\n\t        flex: ['-ms-flexbox'],\n\t        'inline-flex': ['-ms-inline-flexbox']\n\t      },\n\t      justifyContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify'],\n\t        'space-around': ['distribute']\n\t      }\n\t    }\n\t  },\n\t  '-o-': {\n\t    cssPrefix: '-o-',\n\t    jsPrefix: 'O'\n\t  },\n\t  '-webkit-': {\n\t    cssPrefix: '-webkit-',\n\t    jsPrefix: 'Webkit',\n\t    alternativeProperties: {\n\t      // OLD - iOS 6-, Safari 3.1-6\n\t      alignItems: ['WebkitBoxAlign'],\n\t      flex: ['MozBoxFlex'],\n\t      flexDirection: ['WebkitBoxOrient'],\n\t      justifyContent: ['WebkitBoxPack'],\n\t      order: ['WebkitBoxOrdinalGroup']\n\t    },\n\t    alternativeValues: {\n\t      // OLD - iOS 6-, Safari 3.1-6\n\t      alignItems: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      display: {\n\t        flex: ['-webkit-box']\n\t      },\n\t      flexDirection: {\n\t        row: ['horizontal'],\n\t        column: ['vertical']\n\t      },\n\t      justifyContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify']\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * CSS properties which accept numbers but are not in units of \"px\".\n\t * Copied from React core June 22, 2015.\n\t * https://github.com/facebook/react/blob/\n\t * ba81b60ad8e93b747be42a03b797065932c49c96/\n\t * src/renderers/dom/shared/CSSProperty.js\n\t */\n\tvar isUnitlessNumber = {\n\t  boxFlex: true,\n\t  boxFlexGroup: true,\n\t  columnCount: true,\n\t  flex: true,\n\t  flexGrow: true,\n\t  flexPositive: true,\n\t  flexShrink: true,\n\t  flexNegative: true,\n\t  fontWeight: true,\n\t  lineClamp: true,\n\t  lineHeight: true,\n\t  opacity: true,\n\t  order: true,\n\t  orphans: true,\n\t  tabSize: true,\n\t  widows: true,\n\t  zIndex: true,\n\t  zoom: true,\n\t\n\t  // SVG-related properties\n\t  fillOpacity: true,\n\t  strokeDashoffset: true,\n\t  strokeOpacity: true,\n\t  strokeWidth: true\n\t};\n\t\n\tvar domStyle = {};\n\tvar prefixedPropertyCache = {};\n\tvar prefixedValueCache = {};\n\tvar prefixInfo = {\n\t  cssPrefix: '',\n\t  jsPrefix: ''\n\t};\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  domStyle = (document /*: any*/).createElement('p').style;\n\t\n\t  // older Firefox versions may have no float property in style object\n\t  // so we need to add it manually\n\t  if (domStyle.float === undefined) {\n\t    domStyle.float = '';\n\t  }\n\t\n\t  // Based on http://davidwalsh.name/vendor-prefix\n\t  var prefixMatch;\n\t  var windowStyles = window.getComputedStyle(document.documentElement, '');\n\t\n\t  // Array.prototype.slice.call(windowStyles) fails with\n\t  // \"Uncaught TypeError: undefined is not a function\"\n\t  // in older versions Android (KitKat) web views\n\t  for (var i = 0; i < windowStyles.length; i++) {\n\t    prefixMatch = windowStyles[i].match(VENDOR_PREFIX_REGEX);\n\t\n\t    if (prefixMatch) {\n\t      break;\n\t    }\n\t  }\n\t\n\t  var cssVendorPrefix = prefixMatch && prefixMatch[0];\n\t\n\t  prefixInfo = cssVendorPrefix && infoByCssPrefix[cssVendorPrefix] ? infoByCssPrefix[cssVendorPrefix] : prefixInfo;\n\t}\n\t\n\tvar getPrefixedPropertyName = function getPrefixedPropertyName(property /*: string*/) /*: string*/ {\n\t  if (prefixedPropertyCache.hasOwnProperty(property)) {\n\t    return prefixedPropertyCache[property];\n\t  }\n\t\n\t  var unprefixed = property;\n\t\n\t  // Try the prefixed version first. Chrome in particular has the `filter` and\n\t  // `webkitFilter` properties availalbe on the style object, but only the\n\t  // prefixed version actually works.\n\t  var possiblePropertyNames = [\n\t  // Prefixed\n\t  prefixInfo.jsPrefix + property[0].toUpperCase() + property.slice(1), unprefixed];\n\t\n\t  // Alternative property names\n\t  if (prefixInfo.alternativeProperties && prefixInfo.alternativeProperties[property]) {\n\t    possiblePropertyNames = possiblePropertyNames.concat(prefixInfo.alternativeProperties[property]);\n\t  }\n\t\n\t  var workingProperty = arrayFind(possiblePropertyNames, function (possiblePropertyName) {\n\t    if (possiblePropertyName in domStyle) {\n\t      return possiblePropertyName;\n\t    }\n\t  }) || false;\n\t\n\t  prefixedPropertyCache[property] = workingProperty;\n\t\n\t  return prefixedPropertyCache[property];\n\t};\n\t\n\t// We are un-prefixing values before checking for isUnitlessNumber,\n\t// otherwise we are at risk of being in a situation where someone\n\t// explicitly passes something like `MozBoxFlex: 1` and that will\n\t// in turn get transformed into `MozBoxFlex: 1px`.\n\tvar _getUnprefixedProperty = function _getUnprefixedProperty(property) {\n\t  var noPrefixProperty = property;\n\t\n\t  vendorPrefixes.some(function (prefix) {\n\t    // Let's check if the property starts with a vendor prefix\n\t    if (property.indexOf(prefix) === 0) {\n\t      noPrefixProperty = noPrefixProperty.replace(prefix, '');\n\t\n\t      // We have removed the vendor prefix, however the first\n\t      // character is going to be uppercase hence won't match\n\t      // any of the `isUnitlessNumber` keys as they all start\n\t      // with lower case. Let's ensure that the first char is\n\t      // lower case.\n\t      noPrefixProperty = noPrefixProperty.charAt(0).toLowerCase() + noPrefixProperty.slice(1);\n\t\n\t      return true;\n\t    }\n\t  });\n\t\n\t  return noPrefixProperty;\n\t};\n\t\n\t// React is planning to deprecate adding px automatically\n\t// (https://github.com/facebook/react/issues/1873), and if they do, this\n\t// should change to a warning or be removed in favor of React's warning.\n\t// Same goes for below.\n\tvar _addPixelSuffixToValueIfNeeded = function _addPixelSuffixToValueIfNeeded(originalProperty, value) {\n\t  var unPrefixedProperty = _getUnprefixedProperty(originalProperty);\n\t\n\t  if (value !== 0 && !isNaN(value) && !isUnitlessNumber[unPrefixedProperty]) {\n\t    return value + 'px';\n\t  }\n\t  return value;\n\t};\n\t\n\tvar _getPrefixedValue = function _getPrefixedValue(componentName, property, value, originalProperty) {\n\t  if (!Array.isArray(value)) {\n\t    // don't test numbers (pure or stringy), but do add 'px' prefix if needed\n\t    if (!isNaN(value) && value !== null) {\n\t      return _addPixelSuffixToValueIfNeeded(originalProperty, value);\n\t    }\n\t\n\t    if (typeof value !== 'string') {\n\t      if (value !== null && value !== undefined) {\n\t        value = value.toString();\n\t      } else {\n\t        return value;\n\t      }\n\t    }\n\t\n\t    // don't test numbers with units (e.g. 10em)\n\t    if (!isNaN(parseInt(value, 10))) {\n\t      return value;\n\t    }\n\t  }\n\t\n\t  var cacheKey = Array.isArray(value) ? value.join(' || ') : property + value;\n\t\n\t  if (prefixedValueCache.hasOwnProperty(cacheKey)) {\n\t    return prefixedValueCache[cacheKey];\n\t  }\n\t\n\t  var possibleValues;\n\t  if (Array.isArray(value)) {\n\t    // Add px for the same values React would, otherwise the testing below will\n\t    // fail and it will try to fallback.\n\t    possibleValues = value.map(function (v) {\n\t      return _addPixelSuffixToValueIfNeeded(originalProperty, v);\n\t    });\n\t\n\t    // Add prefixed versions\n\t    possibleValues = possibleValues.concat(value.filter(function (v) {\n\t      return !isNaN(v);\n\t    }) // Don't prefix numbers\n\t    .map(function (v) {\n\t      return prefixInfo.cssPrefix + v;\n\t    }));\n\t  } else {\n\t    possibleValues = [\n\t    // Unprefixed\n\t    value,\n\t    // Prefixed\n\t    prefixInfo.cssPrefix + value];\n\t  }\n\t\n\t  // Alternative values\n\t  if (prefixInfo.alternativeValues && prefixInfo.alternativeValues[originalProperty] && prefixInfo.alternativeValues[originalProperty][value]) {\n\t    possibleValues = possibleValues.concat(prefixInfo.alternativeValues[originalProperty][value]);\n\t  }\n\t\n\t  // Test possible value in order\n\t  var workingValue = arrayFind(possibleValues, function (possibleValue) {\n\t    domStyle[property] = '';\n\t    domStyle[property] = possibleValue;\n\t\n\t    // Note that we just make sure it is not an empty string. Browsers will\n\t    // sometimes rewrite values, but still accept them. They will set the value\n\t    // to an empty string if not supported.\n\t    // E.g. for border, \"solid 1px black\" becomes \"1px solid black\"\n\t    //      but \"foobar\" becomes \"\", since it is not supported.\n\t    return !!domStyle[property];\n\t  });\n\t\n\t  if (workingValue) {\n\t    prefixedValueCache[cacheKey] = workingValue;\n\t  } else {\n\t    // Unsupported, assume unprefixed works, but warn\n\t    prefixedValueCache[cacheKey] = value;\n\t\n\t    if (false) {\n\t      /* eslint-disable no-console */\n\t      if (console && console.warn) {\n\t        var componentContext = componentName ? ' in component \"' + componentName + '\"' : '';\n\t\n\t        console.warn('Unsupported CSS value \"' + value + '\" for property \"' + property + '\"' + componentContext);\n\t      }\n\t      /* eslint-enable no-console */\n\t    }\n\t  }\n\t\n\t  return prefixedValueCache[cacheKey];\n\t};\n\t\n\t// Returns a new style object with vendor prefixes added to property names\n\t// and values.\n\tvar getPrefixedStyle = function getPrefixedStyle(style /*: Object*/, componentName /*: ?string*/) /*: Object*/ {\n\t  if (!ExecutionEnvironment.canUseDOM) {\n\t    return Object.keys(style).reduce(function (newStyle, key) {\n\t      var value = style[key];\n\t      var newValue = Array.isArray(value) ? value[0] : value;\n\t      newStyle[key] = newValue;\n\t      return newStyle;\n\t    }, {});\n\t  }\n\t\n\t  var prefixedStyle = {};\n\t  Object.keys(style).forEach(function (property) {\n\t    var value = style[property];\n\t\n\t    var newProperty = getPrefixedPropertyName(property);\n\t    if (!newProperty) {\n\t      // Ignore unsupported properties\n\t      if (false) {\n\t        /* eslint-disable no-console */\n\t        if (console && console.warn) {\n\t          var componentContext = componentName ? ' in component \"' + componentName + '\"' : '';\n\t\n\t          console.warn('Unsupported CSS property \"' + property + '\"' + componentContext);\n\t        }\n\t        /* eslint-enable no-console */\n\t        return;\n\t      }\n\t    }\n\t\n\t    var newValue = _getPrefixedValue(componentName, newProperty, value, property);\n\t\n\t    prefixedStyle[newProperty] = newValue;\n\t  });\n\t  return prefixedStyle;\n\t};\n\t\n\tmodule.exports = {\n\t  getPrefixedStyle: getPrefixedStyle,\n\t  cssPrefix: prefixInfo.cssPrefix,\n\t  jsPrefix: prefixInfo.jsPrefix\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t  Copyright (c) 2015 Jed Watson.\n\t  Based on code that is Copyright 2013-2015, Facebook, Inc.\n\t  All rights reserved.\n\t*/\n\t\n\t(function () {\n\t\t'use strict';\n\t\n\t\tvar canUseDOM = !!(\n\t\t\ttypeof window !== 'undefined' &&\n\t\t\twindow.document &&\n\t\t\twindow.document.createElement\n\t\t);\n\t\n\t\tvar ExecutionEnvironment = {\n\t\n\t\t\tcanUseDOM: canUseDOM,\n\t\n\t\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\t\n\t\t\tcanUseEventListeners:\n\t\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t\t\tcanUseViewport: canUseDOM && !!window.screen\n\t\n\t\t};\n\t\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn ExecutionEnvironment;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = ExecutionEnvironment;\n\t\t} else {\n\t\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t\t}\n\t\n\t}());\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction find(array, predicate, context) {\n\t  if (typeof Array.prototype.find === 'function') {\n\t    return array.find(predicate, context);\n\t  }\n\t\n\t  context = context || this;\n\t  var length = array.length;\n\t  var i;\n\t\n\t  if (typeof predicate !== 'function') {\n\t    throw new TypeError(predicate + ' is not a function');\n\t  }\n\t\n\t  for (i = 0; i < length; i++) {\n\t    if (predicate.call(context, array[i], i, array)) {\n\t      return array[i];\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = find;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @flow */\n\t\n\t'use strict';\n\t\n\t/*:: import type {PluginConfig, PluginResult} from '.';*/\n\t\n\tvar MouseUpListener = __webpack_require__(19);\n\t\n\tvar _isInteractiveStyleField = function _isInteractiveStyleField(styleFieldName) {\n\t  return styleFieldName === ':hover' || styleFieldName === ':active' || styleFieldName === ':focus';\n\t};\n\t\n\tvar resolveInteractionStyles = function resolveInteractionStyles(config /*: PluginConfig*/) /*: PluginResult*/ {\n\t  var ExecutionEnvironment = config.ExecutionEnvironment;\n\t  var getComponentField = config.getComponentField;\n\t  var getState = config.getState;\n\t  var mergeStyles = config.mergeStyles;\n\t  var props = config.props;\n\t  var setState = config.setState;\n\t  var style = config.style;\n\t\n\t  var newComponentFields = {};\n\t  var newProps = {};\n\t\n\t  // Only add handlers if necessary\n\t  if (style[':hover']) {\n\t    // Always call the existing handler if one is already defined.\n\t    // This code, and the very similar ones below, could be abstracted a bit\n\t    // more, but it hurts readability IMO.\n\t    var existingOnMouseEnter = props.onMouseEnter;\n\t    newProps.onMouseEnter = function (e) {\n\t      existingOnMouseEnter && existingOnMouseEnter(e);\n\t      setState(':hover', true);\n\t    };\n\t\n\t    var existingOnMouseLeave = props.onMouseLeave;\n\t    newProps.onMouseLeave = function (e) {\n\t      existingOnMouseLeave && existingOnMouseLeave(e);\n\t      setState(':hover', false);\n\t    };\n\t  }\n\t\n\t  if (style[':active']) {\n\t    var existingOnMouseDown = props.onMouseDown;\n\t    newProps.onMouseDown = function (e) {\n\t      existingOnMouseDown && existingOnMouseDown(e);\n\t      newComponentFields._lastMouseDown = Date.now();\n\t      setState(':active', 'viamousedown');\n\t    };\n\t\n\t    var existingOnKeyDown = props.onKeyDown;\n\t    newProps.onKeyDown = function (e) {\n\t      existingOnKeyDown && existingOnKeyDown(e);\n\t      if (e.key === ' ' || e.key === 'Enter') {\n\t        setState(':active', 'viakeydown');\n\t      }\n\t    };\n\t\n\t    var existingOnKeyUp = props.onKeyUp;\n\t    newProps.onKeyUp = function (e) {\n\t      existingOnKeyUp && existingOnKeyUp(e);\n\t      if (e.key === ' ' || e.key === 'Enter') {\n\t        setState(':active', false);\n\t      }\n\t    };\n\t  }\n\t\n\t  if (style[':focus']) {\n\t    var existingOnFocus = props.onFocus;\n\t    newProps.onFocus = function (e) {\n\t      existingOnFocus && existingOnFocus(e);\n\t      setState(':focus', true);\n\t    };\n\t\n\t    var existingOnBlur = props.onBlur;\n\t    newProps.onBlur = function (e) {\n\t      existingOnBlur && existingOnBlur(e);\n\t      setState(':focus', false);\n\t    };\n\t  }\n\t\n\t  if (style[':active'] && !getComponentField('_radiumMouseUpListener') && ExecutionEnvironment.canUseEventListeners) {\n\t    newComponentFields._radiumMouseUpListener = MouseUpListener.subscribe(function () {\n\t      Object.keys(getComponentField('state')._radiumStyleState).forEach(function (key) {\n\t        if (getState(':active') === 'viamousedown') {\n\t          setState(':active', false, key);\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  // Merge the styles in the order they were defined\n\t  var interactionStyles = Object.keys(style).filter(function (name) {\n\t    return _isInteractiveStyleField(name) && getState(name);\n\t  }).map(function (name) {\n\t    return style[name];\n\t  });\n\t\n\t  var newStyle = mergeStyles([style].concat(interactionStyles));\n\t\n\t  // Remove interactive styles\n\t  newStyle = Object.keys(newStyle).reduce(function (styleWithoutInteractions, name) {\n\t    if (!_isInteractiveStyleField(name)) {\n\t      styleWithoutInteractions[name] = newStyle[name];\n\t    }\n\t    return styleWithoutInteractions;\n\t  }, {});\n\t\n\t  return {\n\t    componentFields: newComponentFields,\n\t    props: newProps,\n\t    style: newStyle\n\t  };\n\t};\n\t\n\tmodule.exports = resolveInteractionStyles;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _callbacks = [];\n\tvar _mouseUpListenerIsActive = false;\n\t\n\tvar _handleMouseUp = function _handleMouseUp(ev) {\n\t  _callbacks.forEach(function (callback) {\n\t    callback(ev);\n\t  });\n\t};\n\t\n\tvar subscribe = function subscribe(callback /*: () => void*/) /*: {remove: () => void}*/ {\n\t  if (_callbacks.indexOf(callback) === -1) {\n\t    _callbacks.push(callback);\n\t  }\n\t\n\t  if (!_mouseUpListenerIsActive) {\n\t    window.addEventListener('mouseup', _handleMouseUp);\n\t    _mouseUpListenerIsActive = true;\n\t  }\n\t\n\t  return {\n\t    remove: function remove() {\n\t      var index = _callbacks.indexOf(callback);\n\t      _callbacks.splice(index, 1);\n\t\n\t      if (_callbacks.length === 0 && _mouseUpListenerIsActive) {\n\t        window.removeEventListener('mouseup', _handleMouseUp);\n\t        _mouseUpListenerIsActive = false;\n\t      }\n\t    }\n\t  };\n\t};\n\t\n\tmodule.exports = {\n\t  subscribe: subscribe\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t/** @flow */\n\t\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\t/*:: import type {MatchMediaType} from '../config';*/\n\t/*:: import type {PluginConfig, PluginResult} from '.';*/\n\t\n\tvar _windowMatchMedia;\n\tvar _getWindowMatchMedia = function _getWindowMatchMedia(ExecutionEnvironment) {\n\t  if (_windowMatchMedia === undefined) {\n\t    _windowMatchMedia = !!ExecutionEnvironment.canUseDOM && !!window && !!window.matchMedia && function (mediaQueryString) {\n\t      return window.matchMedia(mediaQueryString);\n\t    } || null;\n\t  }\n\t  return _windowMatchMedia;\n\t};\n\t\n\tvar resolveMediaQueries = function resolveMediaQueries(_ref /*: PluginConfig*/) /*: PluginResult*/ {\n\t  var ExecutionEnvironment = _ref.ExecutionEnvironment;\n\t  var getComponentField = _ref.getComponentField;\n\t  var getGlobalState = _ref.getGlobalState;\n\t  var config = _ref.config;\n\t  var mergeStyles = _ref.mergeStyles;\n\t  var setState = _ref.setState;\n\t  var style = _ref.style;\n\t\n\t  var newComponentFields = {};\n\t  var newStyle = style;\n\t  var matchMedia /*: ?MatchMediaType*/ = config.matchMedia || _getWindowMatchMedia(ExecutionEnvironment);\n\t  if (!matchMedia) {\n\t    return newStyle;\n\t  }\n\t\n\t  var mediaQueryListByQueryString = getGlobalState('mediaQueryListByQueryString') || {};\n\t\n\t  Object.keys(style).filter(function (name) {\n\t    return name.indexOf('@media') === 0;\n\t  }).map(function (query) {\n\t    var mediaQueryStyles = style[query];\n\t    query = query.replace('@media ', '');\n\t\n\t    // Create a global MediaQueryList if one doesn't already exist\n\t    var mql = mediaQueryListByQueryString[query];\n\t    if (!mql && matchMedia) {\n\t      mediaQueryListByQueryString[query] = mql = matchMedia(query);\n\t    }\n\t\n\t    var listenersByQuery = getComponentField('_radiumMediaQueryListenersByQuery');\n\t\n\t    if (!listenersByQuery || !listenersByQuery[query]) {\n\t      var listener = function listener() {\n\t        return setState(query, mql.matches, '_all');\n\t      };\n\t      mql.addListener(listener);\n\t      newComponentFields._radiumMediaQueryListenersByQuery = _extends({}, listenersByQuery);\n\t      newComponentFields._radiumMediaQueryListenersByQuery[query] = {\n\t        remove: function remove() {\n\t          mql.removeListener(listener);\n\t        }\n\t      };\n\t    }\n\t\n\t    // Apply media query states\n\t    if (mql.matches) {\n\t      newStyle = mergeStyles([newStyle, mediaQueryStyles]);\n\t    }\n\t  });\n\t\n\t  // Remove media queries\n\t  newStyle = Object.keys(newStyle).reduce(function (styleWithoutMedia, key) {\n\t    if (key.indexOf('@media') !== 0) {\n\t      styleWithoutMedia[key] = newStyle[key];\n\t    }\n\t    return styleWithoutMedia;\n\t  }, {});\n\t\n\t  return {\n\t    componentFields: newComponentFields,\n\t    globalState: { mediaQueryListByQueryString: mediaQueryListByQueryString },\n\t    style: newStyle\n\t  };\n\t};\n\t\n\tmodule.exports = resolveMediaQueries;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t\"use strict\";\n\t\n\tvar allPrintStyles = {};\n\tvar listeners = [];\n\t\n\tvar subscribe = function subscribe(listener /*: () => void*/) /*: {remove: () => void}*/ {\n\t  if (listeners.indexOf(listener) === -1) {\n\t    listeners.push(listener);\n\t  }\n\t\n\t  return {\n\t    remove: function remove() {\n\t      var listenerIndex = listeners.indexOf(listener);\n\t\n\t      if (listenerIndex > -1) {\n\t        listeners.splice(listenerIndex, 1);\n\t      }\n\t    }\n\t  };\n\t};\n\t\n\tvar _emitChange = function _emitChange() {\n\t  listeners.forEach(function (listener) {\n\t    return listener();\n\t  });\n\t};\n\t\n\tvar _appendImportantToEachValue = function _appendImportantToEachValue(styleObj) {\n\t  var importantStyleObj = {};\n\t\n\t  Object.keys(styleObj).forEach(function (key) {\n\t    var value = styleObj[key];\n\t\n\t    // This breaks unitless values but they'll be deprecated soon anyway\n\t    // https://github.com/facebook/react/issues/1873\n\t    value = value + \" !important\";\n\t    importantStyleObj[key] = value;\n\t  });\n\t\n\t  return importantStyleObj;\n\t};\n\t\n\tvar addPrintStyles = function addPrintStyles(Component /*: constructor*/) {\n\t  if (!Component.printStyles) {\n\t    return;\n\t  }\n\t\n\t  var printStyleClass = {};\n\t\n\t  Object.keys(Component.printStyles).forEach(function (key) {\n\t    var styles = Component.printStyles[key];\n\t    var className = \"Radium-\" + Component.displayName + \"-\" + key;\n\t    allPrintStyles[\".\" + className] = _appendImportantToEachValue(styles);\n\t    printStyleClass[key] = className;\n\t  });\n\t\n\t  // Allows for lazy loading of JS that then calls Radium to update the\n\t  // print styles\n\t  _emitChange();\n\t  return printStyleClass;\n\t};\n\t\n\tvar getPrintStyles = function getPrintStyles() /*: Object*/ {\n\t  return allPrintStyles;\n\t};\n\t\n\tmodule.exports = {\n\t  addPrintStyles: addPrintStyles,\n\t  getPrintStyles: getPrintStyles,\n\t  subscribe: subscribe\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(2);\n\t\n\tvar Style = __webpack_require__(23);\n\tvar printStyles = __webpack_require__(21);\n\t\n\tvar PrintStyle = React.createClass({\n\t  displayName: 'PrintStyle',\n\t\n\t  getInitialState: function getInitialState() {\n\t    return this._getStylesState();\n\t  },\n\t\n\t  componentDidMount: function componentDidMount() {\n\t    this.subscription = printStyles.subscribe(this._onChange);\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    this.subscription.remove();\n\t  },\n\t\n\t  _onChange: function _onChange() {\n\t    this.setState(this._getStylesState());\n\t  },\n\t\n\t  _getStylesState: function _getStylesState() {\n\t    return {\n\t      styles: printStyles.getPrintStyles()\n\t    };\n\t  },\n\t\n\t  render: function render() {\n\t    return React.createElement(Style, { rules: {\n\t        mediaQueries: {\n\t          print: this.state.styles\n\t        }\n\t      } });\n\t  }\n\t});\n\t\n\tmodule.exports = PrintStyle;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar camelCasePropsToDashCase = __webpack_require__(24);\n\tvar createMarkupForStyles = __webpack_require__(25);\n\tvar Prefixer = __webpack_require__(15);\n\t\n\tvar React = __webpack_require__(2);\n\t\n\tvar buildCssString = function buildCssString(selector /*: string*/, rules /*: Object*/, prefix /*: (rules: Object, componentName: string) => Object*/) /*: ?string*/ {\n\t  if (!selector || !rules) {\n\t    return null;\n\t  }\n\t\n\t  var prefixedRules = prefix(rules, 'Style');\n\t  var cssPrefixedRules = camelCasePropsToDashCase(prefixedRules);\n\t  var serializedRules = createMarkupForStyles(cssPrefixedRules);\n\t\n\t  return selector + '{' + serializedRules + '}';\n\t};\n\t\n\tvar Style = React.createClass({\n\t  displayName: 'Style',\n\t\n\t  propTypes: {\n\t    prefix: React.PropTypes.func.isRequired,\n\t\n\t    rules: React.PropTypes.object,\n\t    scopeSelector: React.PropTypes.string\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() /*: {scopeSelector: string}*/ {\n\t    return {\n\t      prefix: Prefixer.getPrefixedStyle,\n\t      scopeSelector: ''\n\t    };\n\t  },\n\t\n\t  _buildStyles: function _buildStyles(styles /*: Object*/) /*: string*/ {\n\t    var _this = this;\n\t\n\t    return Object.keys(styles).reduce(function (accumulator, selector) {\n\t      var rules = styles[selector];\n\t\n\t      if (selector === 'mediaQueries') {\n\t        accumulator += _this._buildMediaQueryString(rules);\n\t      } else {\n\t        var completeSelector = (_this.props.scopeSelector ? _this.props.scopeSelector + ' ' : '') + selector;\n\t        accumulator += buildCssString(completeSelector, rules, _this.props.prefix) || '';\n\t      }\n\t\n\t      return accumulator;\n\t    }, '');\n\t  },\n\t\n\t  _buildMediaQueryString: function _buildMediaQueryString(stylesByMediaQuery /*: {[mediaQuery: string]: Object}*/) /*: string*/ {\n\t    var _this2 = this;\n\t\n\t    var contextMediaQueries = this._getContextMediaQueries();\n\t    var mediaQueryString = '';\n\t\n\t    Object.keys(stylesByMediaQuery).forEach(function (query) {\n\t      var completeQuery = contextMediaQueries[query] ? contextMediaQueries[query] : query;\n\t      mediaQueryString += '@media ' + completeQuery + '{' + _this2._buildStyles(stylesByMediaQuery[query]) + '}';\n\t    });\n\t\n\t    return mediaQueryString;\n\t  },\n\t\n\t  _getContextMediaQueries: function _getContextMediaQueries() /*: {[mediaQuery: string]: Object}*/ {\n\t    var contextMediaQueries = {};\n\t    if (this.context && this.context.mediaQueries) {\n\t      Object.keys(this.context.mediaQueries).forEach((function (query) {\n\t        contextMediaQueries[query] = this.context.mediaQueries[query].media;\n\t      }).bind(this));\n\t    }\n\t\n\t    return contextMediaQueries;\n\t  },\n\t\n\t  render: function render() /*: ?ReactElement*/ {\n\t    if (!this.props.rules) {\n\t      return null;\n\t    }\n\t\n\t    var styles = this._buildStyles(this.props.rules);\n\t\n\t    return React.createElement('style', { dangerouslySetInnerHTML: { __html: styles } });\n\t  }\n\t});\n\t\n\tmodule.exports = Style;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _camelCaseRegex = /([a-z])?([A-Z])/g;\n\tvar _camelCaseReplacer = function _camelCaseReplacer(match, p1, p2) {\n\t  return (p1 || '') + '-' + p2.toLowerCase();\n\t};\n\tvar _camelCaseToDashCase = function _camelCaseToDashCase(s) {\n\t  return s.replace(_camelCaseRegex, _camelCaseReplacer);\n\t};\n\t\n\tvar camelCasePropsToDashCase = function camelCasePropsToDashCase(prefixedStyle /*: Object*/) /*: Object*/ {\n\t  // Since prefix is expected to work on inline style objects, we must\n\t  // translate the keys to dash case for rendering to CSS.\n\t  return Object.keys(prefixedStyle).reduce(function (result, key) {\n\t    result[_camelCaseToDashCase(key)] = prefixedStyle[key];\n\t    return result;\n\t  }, {});\n\t};\n\t\n\tmodule.exports = camelCasePropsToDashCase;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar createMarkupForStyles = function createMarkupForStyles(style /*: Object*/) /*: string*/ {\n\t  var spaces /*: string*/ = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n\t\n\t  return Object.keys(style).map(function (property) {\n\t    return spaces + property + ': ' + style[property] + ';';\n\t  }).join('\\n');\n\t};\n\t\n\tmodule.exports = createMarkupForStyles;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar camelCasePropsToDashCase = __webpack_require__(24);\n\tvar createMarkupForStyles = __webpack_require__(25);\n\tvar Prefixer = __webpack_require__(15);\n\t\n\tvar ExecutionEnvironment = __webpack_require__(16);\n\t\n\tvar isAnimationSupported = false;\n\tvar keyframesPrefixed = 'keyframes';\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // Animation feature detection and keyframes prefixing from MDN:\n\t  // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Detecting_CSS_animation_support\n\t  var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\t  var element = (document.createElement('div') /*: any*/);\n\t\n\t  if (element.style.animationName !== undefined) {\n\t    isAnimationSupported = true;\n\t  } else {\n\t    domPrefixes.some(function (prefix) {\n\t      if (element.style[prefix + 'AnimationName'] !== undefined) {\n\t        keyframesPrefixed = '-' + prefix.toLowerCase() + '-keyframes';\n\t        isAnimationSupported = true;\n\t        return true;\n\t      }\n\t      return false;\n\t    });\n\t  }\n\t}\n\t\n\tvar animationIndex = 1;\n\tvar animationStyleSheet = null;\n\t\n\tif (isAnimationSupported) {\n\t  animationStyleSheet = (document.createElement('style') /*: any*/);\n\t  document.head.appendChild(animationStyleSheet);\n\t}\n\t\n\t// Simple animation helper that injects CSS into a style object containing the\n\t// keyframes, and returns a string with the generated animation name.\n\tvar keyframes = function keyframes(keyframeRules /*: {[percentage: string]: {[key: string]: string|number}}*/, componentName /*:: ?: string*/) /*: string*/ {\n\t  var prefix /*: (style: Object, componentName: ?string) => Object*/ = arguments.length <= 2 || arguments[2] === undefined ? Prefixer.getPrefixedStyle : arguments[2];\n\t\n\t  var name = 'Animation' + animationIndex;\n\t  animationIndex += 1;\n\t\n\t  if (!isAnimationSupported) {\n\t    return name;\n\t  }\n\t\n\t  var rule = '@' + keyframesPrefixed + ' ' + name + ' {\\n' + Object.keys(keyframeRules).map(function (percentage) {\n\t    var props = keyframeRules[percentage];\n\t    var prefixedProps = prefix(props, componentName);\n\t    var cssPrefixedProps = camelCasePropsToDashCase(prefixedProps);\n\t    var serializedProps = createMarkupForStyles(cssPrefixedProps, '  ');\n\t    return '  ' + percentage + ' {\\n  ' + serializedProps + '\\n  }';\n\t  }).join('\\n') + '\\n}\\n';\n\t\n\t  // for flow\n\t  /* istanbul ignore next */\n\t  if (!animationStyleSheet) {\n\t    throw new Error('keyframes not initialized properly');\n\t  }\n\t\n\t  animationStyleSheet.sheet.insertRule(rule, animationStyleSheet.sheet.cssRules.length);\n\t  return name;\n\t};\n\t\n\tmodule.exports = keyframes;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\t\n\tvar _collection = __webpack_require__(28);\n\t\n\tvar Collection = _interopRequireWildcard(_collection);\n\t\n\tvar _log = __webpack_require__(31);\n\t\n\tvar Log = _interopRequireWildcard(_log);\n\t\n\tvar _style = __webpack_require__(32);\n\t\n\tvar Style = _interopRequireWildcard(_style);\n\t\n\tvar _type = __webpack_require__(37);\n\t\n\tvar Type = _interopRequireWildcard(_type);\n\t\n\tvar _propTypes = __webpack_require__(38);\n\t\n\tvar PropTypes = _interopRequireWildcard(_propTypes);\n\t\n\texports[\"default\"] = {\n\t  Collection: Collection,\n\t  Log: Log,\n\t  Style: Style,\n\t  Type: Type,\n\t  PropTypes: PropTypes\n\t};\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _lodash = __webpack_require__(29);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar containsStrings = function containsStrings(collection) {\n\t  return _lodash2[\"default\"].some(collection, function (item) {\n\t    return _lodash2[\"default\"].isString(item);\n\t  });\n\t};\n\t\n\texports.containsStrings = containsStrings;\n\tvar containsOnlyStrings = function containsOnlyStrings(collection) {\n\t  return _lodash2[\"default\"].every(collection, function (item) {\n\t    return _lodash2[\"default\"].isString(item);\n\t  });\n\t};\n\texports.containsOnlyStrings = containsOnlyStrings;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.10.1';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256;\n\t\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /**\n\t   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n\t   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n\t   */\n\t  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\t\n\t  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\t  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0[xX]/;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^\\d+$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\t\n\t    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n\t    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled regexes. */\n\t  var regexpEscapes = {\n\t    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n\t    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n\t    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n\t    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n\t    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isFunction` without support for environments\n\t   * with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t   */\n\t  function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t    return typeof value == 'function' || false;\n\t  }\n\t\n\t  /**\n\t   * Converts `value` to a string if it's not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    return value == null ? '' : (value + '');\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\t\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n\t   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n\t   * descending if \"desc\".\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * ((order === 'asc' || order === true) ? 1 : -1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @param {string} leadingChar The capture group for a leading character.\n\t   * @param {string} whitespaceChar The capture group for a whitespace character.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n\t    if (leadingChar) {\n\t      chr = regexpEscapes[chr];\n\t    } else if (whitespaceChar) {\n\t      chr = stringEscapes[chr];\n\t    }\n\t    return '\\\\' + chr;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return !!value && typeof value == 'object';\n\t  }\n\t\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\t\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype,\n\t        stringProto = String.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Native method references. */\n\t    var ArrayBuffer = context.ArrayBuffer,\n\t        clearTimeout = context.clearTimeout,\n\t        parseFloat = context.parseFloat,\n\t        pow = Math.pow,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        Set = getNative(context, 'Set'),\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = context.Uint8Array,\n\t        WeakMap = getNative(context, 'WeakMap');\n\t\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeCreate = getNative(Object, 'create'),\n\t        nativeFloor = Math.floor,\n\t        nativeIsArray = getNative(Array, 'isArray'),\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = getNative(Object, 'keys'),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = getNative(Date, 'now'),\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\t\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\t\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = 4294967295,\n\t        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t    /**\n\t     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t     * of an array-like value.\n\t     */\n\t    var MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that retrieve a single value or may return a\n\t     * primitive value will automatically end the chain returning the unwrapped\n\t     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n\t     * chained methods is lazy, that is, execution is deferred until `_#value`\n\t     * is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization strategy which merge iteratee calls; this can help\n\t     * to avoid the creation of intermediate data structures and greatly reduce the\n\t     * number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n\t     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n\t     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n\t     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n\t     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n\t     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n\t     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n\t     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n\t     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n\t     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n\t     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n\t     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n\t     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n\t     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n\t     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n\t     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n\t     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n\t     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n\t     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n\t     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n\t     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n\t     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n\t     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n\t     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n\t     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n\t     * `unescape`, `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) {\n\t     *   return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t    }\n\t\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = POSITIVE_INFINITY;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = arrayCopy(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = arrayCopy(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = arrayCopy(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\t\n\t    /**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\t\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\t\n\t      return result ? 0 : -1;\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a new array joining `array` with `other`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to join.\n\t     * @param {Array} other The other array to join.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     */\n\t    function arrayConcat(array, other) {\n\t      var index = -1,\n\t          length = array.length,\n\t          othIndex = -1,\n\t          othLength = other.length,\n\t          result = Array(length + othLength);\n\t\n\t      while (++index < length) {\n\t        result[index] = array[index];\n\t      }\n\t      while (++othIndex < othLength) {\n\t        result[index++] = other[othIndex];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\t\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n\t     * with one argument: (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function arrayExtremum(array, iteratee, comparator, exValue) {\n\t      var index = -1,\n\t          length = array.length,\n\t          computed = exValue,\n\t          result = computed;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = +iteratee(value);\n\t\n\t        if (comparator(current, computed)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Appends the elements of `values` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to append.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayPush(array, values) {\n\t      var index = -1,\n\t          length = values.length,\n\t          offset = array.length;\n\t\n\t      while (++index < length) {\n\t        array[offset + index] = values[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sum` for arrays without support for callback\n\t     * shorthands and `this` binding..\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function arraySum(array, iteratee) {\n\t      var length = array.length,\n\t          result = 0;\n\t\n\t      while (length--) {\n\t        result += +iteratee(array[length]) || 0;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : objectValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This function is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.assign` for customizing assigned values without\n\t     * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t     * functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function assignWith(object, source, customizer) {\n\t      var index = -1,\n\t          props = keys(source),\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\t\n\t        if ((result === result ? (result !== value) : (value === value)) ||\n\t            (value === undefined && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return source == null\n\t        ? object\n\t        : baseCopy(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for string collections\n\t     * and individual key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          isNil = collection == null,\n\t          isArr = !isNil && isArrayLike(collection),\n\t          length = isArr ? collection.length : 0,\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\t\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = isNil ? undefined : collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, props, object) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return thisArg === undefined\n\t          ? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return baseMatches(func);\n\t      }\n\t      return thisArg === undefined\n\t        ? property(func)\n\t        : baseMatchesProperty(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\t\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseAssign(result, value);\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          object.prototype = prototype;\n\t          var result = new object;\n\t          object.prototype = undefined;\n\t        }\n\t        return result || {};\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n\t          valuesLength = values.length;\n\t\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\t\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value, 0) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(collection, iteratee, comparator, exValue) {\n\t      var computed = exValue,\n\t          result = computed;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = +iteratee(value, index, collection);\n\t        if (comparator(current, computed) || (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end >>> 0);\n\t      start >>>= 0;\n\t\n\t      while (start < length) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (isObjectLike(value) && isArrayLike(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, isDeep, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `get` without support for string paths\n\t     * and default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path of the property to get.\n\t     * @param {string} [pathKey] The key representation of path.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t      if (object == null) {\n\t        return;\n\t      }\n\t      if (pathKey !== undefined && pathKey in toObject(object)) {\n\t        path = [pathKey];\n\t      }\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\t\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\t\n\t      stackA.pop();\n\t      stackB.pop();\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} matchData The propery names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = toObject(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which does not clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return baseIsMatch(object, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      var isArr = isArray(path),\n\t          isCommon = isKey(path) && isStrictComparable(srcValue),\n\t          pathKey = (path + '');\n\t\n\t      path = toPath(path);\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        var key = pathKey;\n\t        object = toObject(object);\n\t        if ((isArr || !isCommon) && !(key in object)) {\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          key = last(path);\n\t          object = toObject(object);\n\t        }\n\t        return object[key] === srcValue\n\t          ? (srcValue !== undefined || (key in object))\n\t          : baseIsEqual(srcValue, object[key], undefined, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n\t          props = isSrcArr ? undefined : keys(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        else {\n\t          var value = object[key],\n\t              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t              isCommon = result === undefined;\n\t\n\t          if (isCommon) {\n\t            result = srcValue;\n\t          }\n\t          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n\t              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t            object[key] = result;\n\t          }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\t\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\t\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (isArrayLike(value) ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? (result !== value) : (value === value)) {\n\t        object[key] = result;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      var pathKey = (path + '');\n\t      path = toPath(path);\n\t      return function(object) {\n\t        return baseGet(object, path, pathKey);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments and capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0;\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + nativeFloor(nativeRandom() * (max - min + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands and `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortBy` which uses `comparer` to define\n\t     * the sort order of `array` and replaces criteria objects with their\n\t     * corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sort.\n\t     * @param {Function} comparer The function to define sort order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseSortBy(array, comparer) {\n\t      var length = array.length;\n\t\n\t      array.sort(comparer);\n\t      while (length--) {\n\t        array[length] = array[length].value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, orders) {\n\t      var callback = getCallback(),\n\t          index = -1;\n\t\n\t      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\t\n\t      var result = baseMap(collection, function(value) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sum` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function baseSum(collection, iteratee) {\n\t      var result = 0;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result += +iteratee(value, index, collection) || 0;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n\t          seen = isLarge ? createCache() : null,\n\t          result = [];\n\t\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed, 0) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * of `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\t\n\t      while (++index < length) {\n\t        var action = actions[index];\n\t        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (thisArg === undefined) {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      var result = new ArrayBuffer(buffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(buffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(leftLength + argsLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\t\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return restParam(function(object, sources) {\n\t        var index = -1,\n\t            length = object == null ? 0 : sources.length,\n\t            customizer = length > 2 ? sources[length - 2] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined,\n\t            thisArg = length > 1 ? sources[length - 1] : undefined;\n\t\n\t        if (typeof customizer == 'function') {\n\t          customizer = bindCallback(customizer, thisArg, 5);\n\t          length -= 2;\n\t        } else {\n\t          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n\t          length -= (customizer ? 1 : 0);\n\t        }\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        var length = collection ? getLength(collection) : 0;\n\t        if (!isLength(length)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var index = fromRight ? length : -1,\n\t            iterable = toObject(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var iterable = toObject(object),\n\t            props = keysFunc(object),\n\t            length = props.length,\n\t            index = fromRight ? length : -1;\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var key = props[index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    function createCache(values) {\n\t      return (nativeCreate && Set) ? new SetCache(values) : null;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\t\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The curry bit flag.\n\t     * @returns {Function} Returns the new curry function.\n\t     */\n\t    function createCurry(flag) {\n\t      function curryFunc(func, arity, guard) {\n\t        if (guard && isIterateeCall(func, arity, guard)) {\n\t          arity = undefined;\n\t        }\n\t        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n\t        result.placeholder = curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      return curryFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.defaults` or `_.defaultsDeep` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Function} Returns the new defaults function.\n\t     */\n\t    function createDefaults(assigner, customizer) {\n\t      return restParam(function(args) {\n\t        var object = args[0];\n\t        if (object == null) {\n\t          return object;\n\t        }\n\t        args.push(customizer);\n\t        return assigner.apply(undefined, args);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * @private\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(comparator, exValue) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = undefined;\n\t        }\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t        if (iteratee.length == 1) {\n\t          collection = isArray(collection) ? collection : toIterable(collection);\n\t          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n\t          if (!(collection.length && result === exValue)) {\n\t            return result;\n\t          }\n\t        }\n\t        return baseExtremum(collection, iteratee, comparator, exValue);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(eachFunc, fromRight) {\n\t      return function(collection, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) {\n\t          var index = baseFindIndex(collection, predicate, fromRight);\n\t          return index > -1 ? collection[index] : undefined;\n\t        }\n\t        return baseFind(collection, predicate, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t      return function(array, predicate, thisArg) {\n\t        if (!(array && array.length)) {\n\t          return -1;\n\t        }\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindKey(objectFunc) {\n\t      return function(object, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return function() {\n\t        var wrapper,\n\t            length = arguments.length,\n\t            index = fromRight ? length : -1,\n\t            leftIndex = 0,\n\t            funcs = Array(length);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var func = funcs[leftIndex++] = arguments[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n\t            wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? -1 : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forEach` or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, thisArg) {\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForIn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, keysIn);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForOwn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.mapKeys` or `_.mapValues`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n\t     * @returns {Function} Returns the new map function.\n\t     */\n\t    function createObjectMapper(isMapKeys) {\n\t      return function(object, iteratee, thisArg) {\n\t        var result = {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        baseForOwn(object, function(value, key, object) {\n\t          var mapped = iteratee(value, key, object);\n\t          key = isMapKeys ? mapped : key;\n\t          value = isMapKeys ? value : mapped;\n\t          result[key] = value;\n\t        });\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify padding from the right.\n\t     * @returns {Function} Returns the new pad function.\n\t     */\n\t    function createPadDir(fromRight) {\n\t      return function(string, length, chars) {\n\t        string = baseToString(string);\n\t        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.partial` or `_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The partial bit flag.\n\t     * @returns {Function} Returns the new partial function.\n\t     */\n\t    function createPartial(flag) {\n\t      var partialFunc = restParam(function(func, partials) {\n\t        var holders = replaceHolders(partials, partialFunc.placeholder);\n\t        return createWrapper(func, flag, undefined, partials, holders);\n\t      });\n\t      return partialFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createReduce(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, accumulator, thisArg) {\n\t        var initFromArray = arguments.length < 3;\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : undefined,\n\t                newHoldersRight = isCurry ? undefined : argsHolders,\n\t                newPartials = isCurry ? args : undefined,\n\t                newPartialsRight = isCurry ? undefined : args;\n\t\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t                result = createHybridWrapper.apply(undefined, newData);\n\t\n\t            if (isLaziable(func)) {\n\t              setData(result, newData);\n\t            }\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(func);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates the padding required for `string` based on the given `length`.\n\t     * The `chars` string is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\t\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength);\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        precision = precision === undefined ? 0 : (+precision || 0);\n\t        if (precision) {\n\t          precision = pow(10, precision);\n\t          return func(number * precision) / precision;\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {Function} Returns the new index function.\n\t     */\n\t    function createSortedIndex(retHighest) {\n\t      return function(array, value, iteratee, thisArg) {\n\t        var callback = getCallback(iteratee);\n\t        return (iteratee == null && callback === baseCallback)\n\t          ? binaryIndex(array, value, retHighest)\n\t          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\t\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index],\n\t            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\t\n\t        if (result !== undefined) {\n\t          if (result) {\n\t            continue;\n\t          }\n\t          return false;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isLoose) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t              })) {\n\t            return false;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isLoose) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      var skipCtor = isLoose;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key],\n\t            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\t\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n\t          return false;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = func.name,\n\t          array = realNames[result],\n\t          length = array ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the propery names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = pairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\t\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function invokePath(object, path, args) {\n\t      if (object != null && !isKey(path, object)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : func.apply(object, args);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\t\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        var other = object[index];\n\t        return value === value ? (value === other) : (other !== other);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      var type = typeof value;\n\t      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t        return true;\n\t      }\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var result = !reIsDeepProp.test(value);\n\t      return result || (object != null && value in toObject(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func);\n\t      if (!(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      var other = lodash[funcName];\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < ARY_FLAG;\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n\t        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function mergeDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties specified\n\t     * by `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length;\n\t\n\t      var allowIndexes = !!length && isLength(length) &&\n\t        (isArray(object) || isArguments(object));\n\t\n\t      var index = -1,\n\t          result = [];\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isArrayLike(value)) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to property path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      var result = [];\n\t      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      return wrapper instanceof LazyWrapper\n\t        ? wrapper.clone()\n\t        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(nativeFloor(size) || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [4, 2]);\n\t     * // => [1, 3]\n\t     */\n\t    var difference = restParam(function(array, values) {\n\t      return (isObjectLike(array) && isArrayLike(array))\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that match the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // => [4, '*', 8]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) {\n\t     *   return chr.user == 'barney';\n\t     * });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, 'active', false);\n\t     * // => 0\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    var findIndex = createFindIndex();\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) {\n\t     *   return chr.user == 'pebbles';\n\t     * });\n\t     * // => 2\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastIndex(users, 'active', false);\n\t     * // => 2\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    var findLastIndex = createFindIndex(true);\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, 3, [4]]], true);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n\t     * performs a faster binary search.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value);\n\t        if (index < length &&\n\t            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all of the provided\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     * _.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // => [2]\n\t     */\n\t    var intersection = restParam(function(arrays) {\n\t      var othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(length),\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n\t        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n\t      }\n\t      var array = arrays[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all provided values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var args = arguments,\n\t          array = args[0];\n\t\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = args.length;\n\t\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = args[index];\n\t\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = restParam(function(array, indexes) {\n\t      indexes = baseFlatten(indexes);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(baseCompareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    var sortedIndex = createSortedIndex();\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     * // => 4\n\t     */\n\t    var sortedLastIndex = createSortedIndex(true);\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all of the provided arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // => [1, 2, 4]\n\t     */\n\t    var union = restParam(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurence of each element\n\t     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n\t     * for sorted arrays. If an iteratee function is provided it is invoked for\n\t     * each element in the array to generate the criterion by which uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (isSorted != null && typeof isSorted != 'boolean') {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var callback = getCallback();\n\t      if (!(iteratee == null && callback === baseCallback)) {\n\t        iteratee = callback(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          length = 0;\n\t\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLike(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts an iteratee to specify\n\t     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee] The function to combine regrouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      iteratee = bindCallback(iteratee, thisArg, 4);\n\t      return arrayMap(result, function(group) {\n\t        return arrayReduce(group, iteratee, undefined, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all provided values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = restParam(function(array, values) {\n\t      return isArrayLike(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the provided arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\t\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArrayLike(array)) {\n\t          var result = result\n\t            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = restParam(unzip);\n\t\n\t    /**\n\t     * The inverse of `_.pairs`; this method returns an object composed from arrays\n\t     * of property names and values. Provide either a single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n\t     * and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\t\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an iteratee to specify\n\t     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee] The function to combine grouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = restParam(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 2 ? arrays[length - 2] : undefined,\n\t          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      if (length > 2 && typeof iteratee == 'function') {\n\t        length -= 2;\n\t      } else {\n\t        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n\t        thisArg = undefined;\n\t      }\n\t      arrays.length = length;\n\t      return unzipWith(arrays, iteratee, thisArg);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Creates a new array joining a wrapped array with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @name concat\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var wrapped = _(array).concat(2, [3], [[4]]);\n\t     *\n\t     * console.log(wrapped.value());\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var wrapperConcat = restParam(function(values) {\n\t      values = baseFlatten(values);\n\t      return this.thru(function(array) {\n\t        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).map(function(value) {\n\t     *   return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other = [3, 4];\n\t     * var otherWrapped = wrapped.plant(other);\n\t     *\n\t     * otherWrapped.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t\n\t      var interceptor = function(value) {\n\t        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n\t      };\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(interceptor);\n\t    }\n\t\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], [0, 2]);\n\t     * // => ['a', 'c']\n\t     *\n\t     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // => ['barney', 'pebbles']\n\t     */\n\t    var at = restParam(function(collection, props) {\n\t      return baseAt(collection, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.every(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 6]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.result(_.find(users, 'active', false), 'user');\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'barney'\n\t     */\n\t    var find = createFind(baseEach);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(baseEachRight, true);\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection). Iteratee functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    var forEach = createForEach(arrayEach, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex, guard) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex = 0;\n\t      } else {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n\t        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return String.fromCharCode(object.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it is\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invoke = restParam(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n\t     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n\t     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n\t     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n\t     * `sum`, `uniq`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     * _.map([1, 2], timesThree);\n\t     * // => [3, 6]\n\t     *\n\t     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // => [3, 6] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return this.floor(n) % 2;\n\t     * }, Math);\n\t     * // => [[1.2, 3.4], [2.3]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * var mapper = function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * };\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.map(_.partition(users, 'active', false), mapper);\n\t     * // => [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(_.partition(users, 'active'), mapper);\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Gets the property value of `path` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|string} path The path of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t      return map(collection, property(path));\n\t    }\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n\t     * and `sortByOrder`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n\t     */\n\t    var reduce = createReduce(arrayReduce, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sample(collection, POSITIVE_INFINITY);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.some(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      var index = -1;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n\t     * or property names.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t     *  The iteratees to sort by, specified as individual values or arrays of values.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     *   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortByAll = restParam(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var guard = iteratees[2];\n\t      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.sortByAll` except that it allows specifying the\n\t     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n\t     * values are sorted in ascending order. Otherwise, a value is sorted in\n\t     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // sort by `user` in ascending order and by `age` in descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function sortByOrder(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (guard && isIterateeCall(iteratees, orders, guard)) {\n\t        orders = undefined;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseSortByOrder(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = undefined;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = restParam(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bind.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    var bindAll = restParam(function(object, methodNames) {\n\t      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\t\n\t      var index = -1,\n\t          length = methodNames.length;\n\t\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = restParam(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bindKey.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curry = createCurry(CURRY_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the debounced function return the result of the last\n\t     * `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : (+wait || 0);\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = restParam(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = restParam(function(func, wait, args) {\n\t      return baseDelay(func, wait, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that runs each argument through a corresponding\n\t     * transform function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified as individual functions or arrays of functions.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var modded = _.modArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * modded(1, 2);\n\t     * // => [1, 4]\n\t     *\n\t     * modded(5, 10);\n\t     * // => [25, 20]\n\t     */\n\t    var modArgs = restParam(function(func, transforms) {\n\t      transforms = baseFlatten(transforms);\n\t      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = transforms.length;\n\t      return restParam(function(args) {\n\t        var index = nativeMin(args.length, length);\n\t        while (index--) {\n\t          args[index] = transforms[index](args[index]);\n\t        }\n\t        return func.apply(this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = createPartial(PARTIAL_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    var rearg = restParam(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.restParam(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            rest = Array(length);\n\t\n\t        while (++index < length) {\n\t          rest[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, rest);\n\t          case 1: return func.call(this, args[0], rest);\n\t          case 2: return func.call(this, args[0], args[1], rest);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = rest;\n\t        return func.apply(this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * // with a Promise\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function(array) {\n\t        return func.apply(this, array);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed invocations. Provide an options object to indicate\n\t     * that `func` should be invoked on the leading and/or trailing edge of the\n\t     * `wait` timeout. Subsequent calls to the throttled function return the\n\t     * result of the last `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.clone(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n\t        isDeep = false;\n\t      }\n\t      else if (typeof isDeep == 'function') {\n\t        thisArg = customizer;\n\t        customizer = isDeep;\n\t        isDeep = false;\n\t      }\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, isDeep);\n\t    }\n\t\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      return isObjectLike(value) && isArrayLike(value) &&\n\t        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(function() { return arguments; }());\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !value.length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eq\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t     *     return true;\n\t     *   }\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in older versions of Chrome and Safari which return 'function' for regexes\n\t      // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t      return isObject(value) && objToString.call(value) == funcTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      return baseIsMatch(object, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(fnToString.call(value));\n\t      }\n\t      return isObjectLike(value) && reIsHostCtor.test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      var Ctor;\n\t\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n\t          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return result === undefined || hasOwnProperty.call(value, result);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t     * }(1, 2, 3));\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? getLength(value) : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments: (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) {\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object` and is based on\n\t     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return _.isUndefined(value) ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(function(object, source, customizer) {\n\t      return customizer\n\t        ? assignWith(object, source, customizer)\n\t        : baseAssign(object, source);\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = undefined;\n\t      }\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = createDefaults(assign, assignDefaults);\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    var findKey = createFindKey(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    var findLastKey = createFindKey(baseForOwnRight);\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    var forIn = createForIn(baseFor);\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    var forInRight = createForIn(baseForRight);\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n\t     */\n\t    var forOwn = createForOwn(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t     */\n\t    var forOwnRight = createForOwn(baseForOwnRight);\n\t\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['after', 'ary', 'assign', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the property value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     */\n\t    function has(object, path) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasOwnProperty.call(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        path = last(path);\n\t        result = hasOwnProperty.call(object, path);\n\t      }\n\t      return result || (isLength(object.length) && isIndex(path, object.length) &&\n\t        (isArray(object) || isArguments(object)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = undefined;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      var Ctor = object == null ? undefined : object.constructor;\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t          (typeof object != 'function' && isArrayLike(object))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || isArguments(object)) && length) || 0;\n\t\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\t\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    var mapKeys = createObjectMapper(true);\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    var mapValues = createObjectMapper();\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var omit = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof props[0] != 'function') {\n\t        var props = arrayMap(baseFlatten(props), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      var predicate = bindCallback(props[0], props[1], 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var pick = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof props[0] == 'function'\n\t        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it is invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a.b.c', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      var result = object == null ? undefined : object[path];\n\t      if (result === undefined) {\n\t        if (object != null && !isKey(path, object)) {\n\t          path = toPath(path);\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          result = object == null ? undefined : object[last(path)];\n\t        }\n\t        result = result === undefined ? defaultValue : result;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the property value of `path` on `object`. If a portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to augment.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var pathKey = (path + '');\n\t      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          if (index == lastIndex) {\n\t            nested[key] = value;\n\t          } else if (nested[key] == null) {\n\t            nested[key] = isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it is set to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} n The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     */\n\t    function inRange(value, start, end) {\n\t      start = +start || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = undefined;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\t\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\t\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, escapeRegExpChar)\n\t        : (string || '(?:)');\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\t\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      chars = createPadding('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padLeft = createPadDir();\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padRight = createPadDir(true);\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = trim(string);\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null\n\t        ? 0\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\t\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\t\n\t      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1);\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? (+options.length || 0) : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = restParam(function(func, args) {\n\t      try {\n\t        return func.apply(undefined, args);\n\t      } catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and arguments of the created function. If `func` is a property name the\n\t     * created callback returns the property value for a given element. If `func`\n\t     * is an object the created callback returns `true` for elements that contain\n\t     * the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt'\n\t     *       ? object[match[1]] > match[3]\n\t     *       : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = undefined;\n\t      }\n\t      return isObjectLike(func)\n\t        ? matches(func)\n\t        : baseCallback(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that compares the property value of `path` on a given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` on a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = restParam(function(path, args) {\n\t      return function(object) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path on `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = restParam(function(object, args) {\n\t      return function(path) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj ? keys(source) : undefined,\n\t            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\t\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\t\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\t\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__),\n\t                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\t\n\t                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              return func.apply(object, arrayPush([this.value()], arguments));\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      root._ = oldDash;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the property value at `path` on a\n\t     * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the property value at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return baseGet(object, toPath(path), path + '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `end` is not specified it is\n\t     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n\t     * a zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = undefined;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\t\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   this.cast(n);\n\t     * }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = nativeFloor(n);\n\t\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\t\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number to add.\n\t     * @param {number} addend The second number to add.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      return (+augend || 0) + (+addend || 0);\n\t    }\n\t\n\t    /**\n\t     * Calculates `n` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Calculates `n` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     */\n\t    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\t\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var min = createExtremum(lt, POSITIVE_INFINITY);\n\t\n\t    /**\n\t     * Calculates `n` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Gets the sum of the values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // => 10\n\t     *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // => 10\n\t     *\n\t     * var objects = [\n\t     *   { 'n': 4 },\n\t     *   { 'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * // => 10\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sum(objects, 'n');\n\t     * // => 10\n\t     */\n\t    function sum(collection, iteratee, thisArg) {\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return iteratee.length == 1\n\t        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n\t        : baseSum(collection, iteratee);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.modArgs = modArgs;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.restParam = restParam;\n\t    lodash.set = set;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.sortByOrder = sortByOrder;\n\t    lodash.spread = spread;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.floor = floor;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.sum = sum;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\t\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.eq = isEqual;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\t\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n\t        } else {\n\t          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type != LAZY_MAP_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : property;\n\t\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(value));\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 1);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n\t      return this.reverse().takeWhile(predicate, thisArg).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(POSITIVE_INFINITY);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName),\n\t          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var args = retUnwrapped ? [1] : arguments,\n\t            chainAll = this.__chain__,\n\t            value = this.__wrapped__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var interceptor = function(value) {\n\t          return (retUnwrapped && chainAll)\n\t            ? lodashFunc(value, 1)[0]\n\t            : lodashFunc.apply(undefined, arrayPush([value], args));\n\t        };\n\t\n\t        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (retUnwrapped && !chainAll) {\n\t          if (onlyLazy) {\n\t            value = value.clone();\n\t            value.__actions__.push(action);\n\t            return func.call(value);\n\t          }\n\t          return lodashFunc.call(undefined, this.value())[0];\n\t        }\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push(action);\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n\t      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = lodashFunc.name,\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.concat = wrapperConcat;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add function aliases to the `lodash` wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\t\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Rhino with CommonJS support.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(30)(module), (function() { return this; }())))\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* global console */\n\t/* eslint-disable no-console */\n\t\n\t// TODO: Use \"warning\" npm module like React is switching to.\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar warn = function warn(message) {\n\t  if (false) {\n\t    if (console && console.warn) {\n\t      console.warn(message);\n\t    }\n\t  }\n\t};\n\texports.warn = warn;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _reduceCssCalc = __webpack_require__(33);\n\t\n\tvar _reduceCssCalc2 = _interopRequireDefault(_reduceCssCalc);\n\t\n\t/**\n\t * Given an object with CSS/SVG transform definitions, return the string value\n\t * for use with the `transform` CSS property or SVG attribute. Note that we\n\t * can't always guarantee the order will match the author's intended order, so\n\t * authors should only use the object notation if they know that their transform\n\t * is commutative or that there is only one.\n\t * @param {Object} obj An object of transform definitions.\n\t * @returns {String} The generated transform string.\n\t */\n\tvar toTransformString = function toTransformString(obj) {\n\t  if (!obj || typeof obj === \"string\") {\n\t    return obj;\n\t  }\n\t  var transforms = [];\n\t  for (var key in obj) {\n\t    if (obj.hasOwnProperty(key)) {\n\t      var value = obj[key];\n\t      transforms.push(key + \"(\" + value + \")\");\n\t    }\n\t  }\n\t  return transforms.join(\" \");\n\t};\n\t\n\texports.toTransformString = toTransformString;\n\tvar calc = function calc(expr, precision) {\n\t  return (0, _reduceCssCalc2[\"default\"])(\"calc(\" + expr + \")\", precision);\n\t};\n\t\n\texports.calc = calc;\n\t/**\n\t * Given the name of a color scale, getColorScale will return an array\n\t * of 5 hex string values in that color scale. If no 'name' parameter\n\t * is given, it will return the Victory default grayscale.\n\t * @param {String} name The name of the color scale to return (optional).\n\t * @returns {Array} An array of 5 hex string values composing a color scale.\n\t */\n\tvar getColorScale = function getColorScale(name) {\n\t  var scales = {\n\t    victory: [\"#9f9f9f\", \"#e0dfe0\", \"#7e7e7e\", \"#d3d2d3\", \"#000000\"],\n\t    gray: [\"#969696\", \"#f1f1f1\", \"#636363\", \"#cccccc\", \"#252525\"],\n\t    bluePurple: [\"#8c96c6\", \"#edf8fb\", \"#8856a7\", \"#b3cde3\", \"#810f7c\"],\n\t    red: [\"#de2d26\", \"#fee5d9\", \"#fb6a4a\", \"#fcae91\", \"#a50f15\"],\n\t    yellowBlue: [\"#41b6c4\", \"#ffffcc\", \"#2c7fb8\", \"#a1dab4\", \"#253494\"]\n\t  };\n\t  return name ? scales[name] : scales.victory;\n\t};\n\texports.getColorScale = getColorScale;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies\n\t */\n\tvar balanced = __webpack_require__(34)\n\tvar reduceFunctionCall = __webpack_require__(35)\n\t\n\t/**\n\t * Constantes\n\t */\n\tvar MAX_STACK = 100 // should be enough for a single calc()...\n\tvar NESTED_CALC_RE = /(\\+|\\-|\\*|\\\\|[^a-z]|)(\\s*)(\\()/g\n\t\n\t/**\n\t * Global variables\n\t */\n\tvar stack\n\t\n\t/**\n\t * Expose reduceCSSCalc plugin\n\t *\n\t * @type {Function}\n\t */\n\tmodule.exports = reduceCSSCalc\n\t\n\t/**\n\t * Reduce CSS calc() in a string, whenever it's possible\n\t *\n\t * @param {String} value css input\n\t */\n\tfunction reduceCSSCalc(value, decimalPrecision) {\n\t  stack = 0\n\t  decimalPrecision = Math.pow(10, decimalPrecision === undefined ? 5 : decimalPrecision)\n\t\n\t  /**\n\t   * Evaluates an expression\n\t   *\n\t   * @param {String} expression\n\t   * @returns {String}\n\t   */\n\t  function evaluateExpression (expression, functionIdentifier, call) {\n\t    if (stack++ > MAX_STACK) {\n\t      stack = 0\n\t      throw new Error(\"Call stack overflow for \" + call)\n\t    }\n\t\n\t    if (expression === \"\") {\n\t      throw new Error(functionIdentifier + \"(): '\" + call + \"' must contain a non-whitespace string\")\n\t    }\n\t\n\t    expression = evaluateNestedExpression(expression, call)\n\t\n\t    var units = getUnitsInExpression(expression)\n\t\n\t    // If multiple units let the expression be (i.e. browser calc())\n\t    if (units.length > 1) {\n\t      return functionIdentifier + \"(\" + expression + \")\"\n\t    }\n\t\n\t    var unit = units[0] || \"\"\n\t\n\t    if (unit === \"%\") {\n\t      // Convert percentages to numbers, to handle expressions like: 50% * 50% (will become: 25%):\n\t      expression = expression.replace(/\\b[0-9\\.]+%/g, function(percent) {\n\t        return parseFloat(percent.slice(0, -1)) * 0.01\n\t      })\n\t    }\n\t\n\t    // Remove units in expression:\n\t    var toEvaluate = expression.replace(new RegExp(unit, \"g\"), \"\")\n\t    var result\n\t\n\t    try {\n\t      result = eval(toEvaluate)\n\t    }\n\t    catch (e) {\n\t      return functionIdentifier + \"(\" + expression + \")\"\n\t    }\n\t\n\t    // Transform back to a percentage result:\n\t    if (unit === \"%\") {\n\t      result *= 100\n\t    }\n\t\n\t    // adjust rounding shit\n\t    // (0.1 * 0.2 === 0.020000000000000004)\n\t    result = Math.round(result * decimalPrecision) / decimalPrecision\n\t\n\t    // We don't need units for zero values...\n\t    if (result !== 0) {\n\t      result += unit\n\t    }\n\t\n\t    return result\n\t  }\n\t\n\t  /**\n\t   * Evaluates nested expressions\n\t   *\n\t   * @param {String} expression\n\t   * @returns {String}\n\t   */\n\t  function evaluateNestedExpression(expression, call) {\n\t    var evaluatedPart = \"\"\n\t    var nonEvaluatedPart = expression\n\t    var matches\n\t    while ((matches = NESTED_CALC_RE.exec(nonEvaluatedPart))) {\n\t      if (matches[0].index > 0) {\n\t        evaluatedPart += nonEvaluatedPart.substring(0, matches[0].index)\n\t      }\n\t\n\t      var balancedExpr = balanced(\"(\", \")\", nonEvaluatedPart.substring([0].index))\n\t      if (balancedExpr.body === \"\") {\n\t        throw new Error(\"'\" + expression + \"' must contain a non-whitespace string\")\n\t      }\n\t\n\t      var evaluated = evaluateExpression(balancedExpr.body, \"\", call)\n\t\n\t      evaluatedPart += balancedExpr.pre + evaluated\n\t      nonEvaluatedPart = balancedExpr.post\n\t    }\n\t\n\t    return evaluatedPart + nonEvaluatedPart\n\t  }\n\t\n\t  return reduceFunctionCall(value, /((?:\\-[a-z]+\\-)?calc)\\(/, evaluateExpression)\n\t}\n\t\n\t/**\n\t * Checks what units are used in an expression\n\t *\n\t * @param {String} expression\n\t * @returns {Array}\n\t */\n\t\n\tfunction getUnitsInExpression(expression) {\n\t  var uniqueUnits = []\n\t  var unitRegEx = /[\\.0-9]([%a-z]+)/g\n\t  var matches = unitRegEx.exec(expression)\n\t\n\t  while (matches) {\n\t    if (!matches || !matches[1]) {\n\t      continue\n\t    }\n\t\n\t    if (uniqueUnits.indexOf(matches[1]) === -1) {\n\t      uniqueUnits.push(matches[1])\n\t    }\n\t\n\t    matches = unitRegEx.exec(expression)\n\t  }\n\t\n\t  return uniqueUnits\n\t}\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(a, b, str) {\n\t  var bal = 0;\n\t  var m = {};\n\t\n\t  for (var i = 0; i < str.length; i++) {\n\t    if (a == str.substr(i, a.length)) {\n\t      if (!('start' in m)) m.start = i;\n\t      bal++;\n\t    }\n\t    else if (b == str.substr(i, b.length) && 'start' in m) {\n\t      bal--;\n\t      if (!bal) {\n\t        m.end = i;\n\t        m.pre = str.substr(0, m.start);\n\t        m.body = (m.end - m.start > 1)\n\t          ? str.substring(m.start + a.length, m.end)\n\t          : '';\n\t        m.post = str.slice(m.end + b.length);\n\t        return m;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * Module dependencies\n\t */\n\tvar balanced = __webpack_require__(36)\n\t\n\t/**\n\t * Expose `reduceFunctionCall`\n\t *\n\t * @type {Function}\n\t */\n\tmodule.exports = reduceFunctionCall\n\t\n\t/**\n\t * Walkthrough all expressions, evaluate them and insert them into the declaration\n\t *\n\t * @param {Array} expressions\n\t * @param {Object} declaration\n\t */\n\t\n\tfunction reduceFunctionCall(string, functionRE, callback) {\n\t  var call = string\n\t  return getFunctionCalls(string, functionRE).reduce(function(string, obj) {\n\t    return string.replace(obj.functionIdentifier + \"(\" + obj.matches.body + \")\", evalFunctionCall(obj.matches.body, obj.functionIdentifier, callback, call, functionRE))\n\t  }, string)\n\t}\n\t\n\t/**\n\t * Parses expressions in a value\n\t *\n\t * @param {String} value\n\t * @returns {Array}\n\t * @api private\n\t */\n\t\n\tfunction getFunctionCalls(call, functionRE) {\n\t  var expressions = []\n\t\n\t  var fnRE = typeof functionRE === \"string\" ? new RegExp(\"\\\\b(\" + functionRE + \")\\\\(\") : functionRE\n\t  do {\n\t    var searchMatch = fnRE.exec(call)\n\t    if (!searchMatch) {\n\t      return expressions\n\t    }\n\t    if (searchMatch[1] === undefined) {\n\t      throw new Error(\"Missing the first couple of parenthesis to get the function identifier in \" + functionRE)\n\t    }\n\t    var fn = searchMatch[1]\n\t    var startIndex = searchMatch.index\n\t    var matches = balanced(\"(\", \")\", call.substring(startIndex))\n\t\n\t    if (!matches) {\n\t      throw new SyntaxError(fn + \"(): missing closing ')' in the value '\" + call + \"'\")\n\t    }\n\t\n\t    expressions.push({matches: matches, functionIdentifier: fn})\n\t    call = matches.post\n\t  }\n\t  while (fnRE.test(call))\n\t\n\t  return expressions\n\t}\n\t\n\t/**\n\t * Evaluates an expression\n\t *\n\t * @param {String} expression\n\t * @returns {String}\n\t * @api private\n\t */\n\t\n\tfunction evalFunctionCall (string, functionIdentifier, callback, call, functionRE) {\n\t  // allow recursivity\n\t  return callback(reduceFunctionCall(string, functionRE, callback), functionIdentifier, call)\n\t}\n\n\n/***/ },\n/* 36 */\n34,\n/* 37 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar nullConstructor = function nullConstructor() {\n\t  return null;\n\t};\n\texports.nullConstructor = nullConstructor;\n\tvar undefinedConstructor = function undefinedConstructor() {\n\t  return;\n\t};\n\texports.undefinedConstructor = undefinedConstructor;\n\t/**\n\t * Get the constructor of `value`. If `value` is null or undefined, return the\n\t * special singletons `nullConstructor` or `undefinedConstructor`, respectively.\n\t * @param {*} value Instance to return the constructor of.\n\t * @returns {Function} Constructor of `value`.\n\t */\n\tvar getConstructor = function getConstructor(value) {\n\t  if (typeof value === \"undefined\") {\n\t    return undefinedConstructor;\n\t  } else if (value === null) {\n\t    return nullConstructor;\n\t  } else {\n\t    return value.constructor;\n\t  }\n\t};\n\t\n\texports.getConstructor = getConstructor;\n\t/**\n\t * Get the name of the constructor used to create `value`, using\n\t * `Object.protoype.toString`. If the value is null or undefined, return\n\t * \"null\" or \"undefined\", respectively.\n\t * @param {*} value Instance to return the constructor name of.\n\t * @returns {String} Name of the constructor.\n\t */\n\tvar getConstructorName = function getConstructorName(value) {\n\t  if (typeof value === \"undefined\") {\n\t    return \"undefined\";\n\t  } else if (value === null) {\n\t    return \"null\";\n\t  }\n\t  return Object.prototype.toString.call(value).slice(8, -1);\n\t};\n\texports.getConstructorName = getConstructorName;\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _type = __webpack_require__(37);\n\t\n\tvar _lodash = __webpack_require__(29);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\t/**\n\t * Return a new validator based on `validator` but with the option to chain\n\t * `isRequired` onto the validation. This is nearly identical to how React\n\t * does it internally, but they don't expose their helper for us to use.\n\t * @param {Function} validator Validation function.\n\t * @returns {Function} Validator with `isRequired` option.\n\t */\n\tvar makeChainable = function makeChainable(validator) {\n\t  /* eslint-disable max-params */\n\t  var _chainable = function _chainable(isRequired, props, propName, componentName) {\n\t    var value = props[propName];\n\t    if (typeof value === \"undefined\" || value === null) {\n\t      if (isRequired) {\n\t        return new Error(\"Required `\" + propName + \"` was not specified in `\" + componentName + \"`.\");\n\t      }\n\t      return null;\n\t    }\n\t    return validator(props, propName, componentName);\n\t  };\n\t  var chainable = _lodash2[\"default\"].bind(_chainable, null, false);\n\t  chainable.isRequired = _lodash2[\"default\"].bind(_chainable, null, true);\n\t  return chainable;\n\t};\n\t\n\texports.makeChainable = makeChainable;\n\t/**\n\t * Check that the value is a non-negative number.\n\t */\n\tvar nonNegative = makeChainable(function (props, propName, componentName) {\n\t  var error = _react.PropTypes.number(props, propName, componentName);\n\t  if (error) {\n\t    return error;\n\t  }\n\t  var value = props[propName];\n\t  if (value < 0) {\n\t    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be non-negative.\");\n\t  }\n\t});\n\t\n\texports.nonNegative = nonNegative;\n\t/**\n\t * Check that the value is a two-item Array in ascending order.\n\t */\n\tvar minMaxArray = makeChainable(function (props, propName, componentName) {\n\t  var error = _react.PropTypes.array(props, propName, componentName);\n\t  if (error) {\n\t    return error;\n\t  }\n\t  var value = props[propName];\n\t  if (value.length !== 2 || value[1] < value[0]) {\n\t    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a [min, max] array.\");\n\t  }\n\t});\n\t\n\texports.minMaxArray = minMaxArray;\n\t/**\n\t * Check that the value looks like a d3 `scale` function.\n\t */\n\tvar scale = makeChainable(function (props, propName, componentName) {\n\t  var value = props[propName];\n\t  if (typeof value !== \"function\" || !value.copy || !value.domain || !value.range) {\n\t    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a d3 scale.\");\n\t  }\n\t});\n\t\n\texports.scale = scale;\n\t/**\n\t * Check that an array contains items of the same type.\n\t */\n\tvar homogenousArray = makeChainable(function (props, propName, componentName) {\n\t  var error = _react.PropTypes.array(props, propName, componentName);\n\t  if (error) {\n\t    return error;\n\t  }\n\t  var value = props[propName];\n\t  if (value.length > 1) {\n\t    var _constructor = (0, _type.getConstructor)(value[0]);\n\t    for (var i = 1; i < value.length; i++) {\n\t      var otherConstructor = (0, _type.getConstructor)(value[i]);\n\t      if (_constructor !== otherConstructor) {\n\t        var constructorName = (0, _type.getConstructorName)(value[0]);\n\t        var otherConstructorName = (0, _type.getConstructorName)(value[i]);\n\t        return new Error(\"Expected `\" + propName + \"` in `\" + componentName + \"` to be a \" + (\"homogenous array, but found types `\" + constructorName + \"` and \") + (\"`\" + otherConstructorName + \"`.\"));\n\t      }\n\t    }\n\t  }\n\t});\n\texports.homogenousArray = homogenousArray;\n\n/***/ }\n/******/ ])))\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** victory-label.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 413968a692af856e3418\n **/","module.exports = {\n  VictoryLabel: require(\"./components/victory-label\")\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import React, { PropTypes } from \"react\";\nimport Radium from \"radium\";\nimport Util from \"victory-util\";\nimport _ from \"lodash\";\n\nconst styles = {\n  stroke: \"transparent\",\n  fill: \"#756f6a\",\n  fontSize: 16,\n  fontFamily: \"Helvetica\",\n  backgroundColor: \"#ccc\"\n};\n\n@Radium\nexport default class VictoryLabel extends React.Component {\n  static propTypes = {\n    /**\n     * The capHeight prop defines a text metric for the font being used: the\n     * expected height of capital letters. This is necessary because of SVG,\n     * which (a) positions the *bottom* of the text at `y`, and (b) has no\n     * notion of line height. The value should ideally use the same units as\n     * `lineHeight` and `dy`, preferably ems. If given a unitless number, it\n     * is assumed to be ems.\n     */\n    capHeight: PropTypes.oneOfType([\n      PropTypes.string,\n      Util.PropTypes.nonNegative\n    ]),\n    /**\n     * The children of this component define the content of the label. This\n     * makes using the component similar to normal HTML spans or labels.\n     * Currently, only strings are supported.\n     */\n    children: PropTypes.string, // TODO: Expand child support in future release\n    /**\n     * The lineHeight prop defines how much space a single line of text should\n     * take up. Note that SVG has no notion of line-height, so the positioning\n     * may differ slightly from what you would expect with CSS, but the result\n     * is similar: a roughly equal amount of extra space is distributed above\n     * and below the line of text. The value should ideally use the same units\n     * as `capHeight` and `dy`, preferably ems. If given a unitless number, it\n     * is assumed to be ems.\n     */\n    lineHeight: PropTypes.oneOfType([\n      PropTypes.string,\n      Util.PropTypes.nonNegative\n    ]),\n    /**\n     * The style prop applies CSS properties to the rendered `<text>` element.\n     */\n    style: PropTypes.object,\n    /**\n     * The textAnchor prop defines how the text is horizontally positioned\n     * relative to the given `x` and `y` coordinates.\n     */\n    textAnchor: PropTypes.oneOf([\n      \"start\",\n      \"middle\",\n      \"end\",\n      \"inherit\"\n    ]),\n    /**\n     * The verticalAnchor prop defines how the text is vertically positioned\n     * relative to the given `x` and `y` coordinates.\n     */\n    verticalAnchor: PropTypes.oneOf([\n      \"start\",\n      \"middle\",\n      \"end\"\n    ]),\n    /**\n     * The transform prop applies a transform to the rendered `<text>` element.\n     * In addition to being a string, it can be an object containing transform\n     * definitions for easier authoring.\n     */\n    transform: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object\n    ]),\n    /**\n     * The x prop defines the x coordinate to use as a basis for horizontal\n     * positioning.\n     */\n    x: Util.PropTypes.nonNegative,\n    /**\n     * The y prop defines the y coordinate to use as a basis for vertical\n     * positioning.\n     */\n    y: Util.PropTypes.nonNegative,\n    /**\n     * The dy prop defines a vertical shift from the `y` coordinate. Since this\n     * component already accounts for `capHeight`, `lineHeight`, and\n     * `verticalAnchor`, this will usually not be necessary.\n     */\n    dy: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string\n    ])\n  };\n\n  static defaultProps = {\n    capHeight: \"0.71em\", // Magic number from d3.\n    lineHeight: 1,\n    verticalAnchor: \"start\",\n    dy: 0\n  };\n\n  getStyles() {\n    return this.props.style ? _.merge({}, styles, this.props.style) : styles;\n  }\n\n  render() {\n    const style = this.getStyles();\n    const transform = Util.Style.toTransformString(this.props.transform);\n    const content = this.props.children || \"\";\n    const lines = content.split(\"\\n\");\n\n    let lineHeight = this.props.lineHeight;\n    if (typeof lineHeight === \"number\") {\n      lineHeight = `${lineHeight}em`;\n    }\n\n    let capHeight = this.props.capHeight;\n    if (typeof capHeight === \"number\") {\n      capHeight = `${capHeight}em`;\n    }\n\n    let dy = this.props.dy;\n    switch (this.props.verticalAnchor) {\n    case \"end\":\n      dy = Util.Style.calc(\n        `${dy} + ${capHeight} / 2 + (0.5 - ${lines.length}) * ${lineHeight}`\n      );\n      break;\n    case \"middle\":\n      dy = Util.Style.calc(\n        `${dy} + ${capHeight} / 2 + (0.5 - ${lines.length} / 2) * ${lineHeight}`\n      );\n      break;\n    default:\n      dy = Util.Style.calc(`${dy} + ${capHeight} / 2 + ${lineHeight} / 2`);\n    }\n\n\n    return (\n      <text x={this.props.x} y={this.props.y} dy={dy}\n        textAnchor={this.props.textAnchor}\n        transform={transform}\n        style={style}\n      >\n        {lines.map((line, i) => {\n          return (\n            <tspan key={i} x={this.props.x} dy={i ? lineHeight : undefined}>\n              {line}\n            </tspan>\n          );\n        })}\n      </text>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/victory-label.jsx\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar Enhancer = require('./enhancer');\n\nmodule.exports = function (ComposedComponent /*: constructor*/) {\n  return Enhancer(ComposedComponent);\n};\nmodule.exports.Plugins = require('./plugins');\nmodule.exports.PrintStyleSheet = require('./components/print-style-sheet');\nmodule.exports.Style = require('./components/style');\nmodule.exports.getState = require('./get-state');\nmodule.exports.keyframes = require('./keyframes');\nmodule.exports.__clearStateForTests = require('./resolve-styles').__clearStateForTests;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/index.js\n ** module id = 3\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('react');\n\nvar Component = _require.Component;\n\nvar resolveStyles = require('./resolve-styles.js');\nvar printStyles = require('./print-styles.js');\n\nvar KEYS_TO_IGNORE_WHEN_COPYING_PROPERTIES = ['arguments', 'callee', 'caller', 'length', 'name', 'prototype', 'type'];\n\nvar copyProperties = function copyProperties(source, target) {\n  Object.getOwnPropertyNames(source).forEach(function (key) {\n    if (KEYS_TO_IGNORE_WHEN_COPYING_PROPERTIES.indexOf(key) < 0 && !target.hasOwnProperty(key)) {\n      var descriptor = Object.getOwnPropertyDescriptor(source, key);\n      Object.defineProperty(target, key, descriptor);\n    }\n  });\n};\n\nvar enhanceWithRadium = function enhanceWithRadium(configOrComposedComponent /*: constructor | Function | Object*/) /*: constructor*/ {\n  var config /*:: ?: Object*/ = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  if (typeof configOrComposedComponent !== 'function') {\n    var newConfig = _extends({}, config, configOrComposedComponent);\n    return function (configOrComponent) {\n      return enhanceWithRadium(configOrComponent, newConfig);\n    };\n  }\n\n  var component /*: Function*/ = configOrComposedComponent;\n  var ComposedComponent /*: constructor*/ = component;\n\n  // Handle stateless components\n\n  if (!ComposedComponent.render && !ComposedComponent.prototype.render) {\n    ComposedComponent = (function (_Component) {\n      _inherits(_class, _Component);\n\n      function _class() {\n        _classCallCheck(this, _class);\n\n        _get(Object.getPrototypeOf(_class.prototype), 'constructor', this).apply(this, arguments);\n      }\n\n      _createClass(_class, [{\n        key: 'render',\n        value: function render() {\n          return component(this.props);\n        }\n      }]);\n\n      return _class;\n    })(Component);\n    ComposedComponent.displayName = component.displayName || component.name;\n  }\n\n  var RadiumEnhancer = (function (_ComposedComponent) {\n    _inherits(RadiumEnhancer, _ComposedComponent);\n\n    function RadiumEnhancer() {\n      _classCallCheck(this, RadiumEnhancer);\n\n      _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'constructor', this).apply(this, arguments);\n\n      this.state = this.state || {};\n      this.state._radiumStyleState = {};\n      this._radiumIsMounted = true;\n\n      if (RadiumEnhancer.printStyleClass) {\n        this.printStyleClass = RadiumEnhancer.printStyleClass;\n      }\n    }\n\n    // Class inheritance uses Object.create and because of __proto__ issues\n    // with IE <10 any static properties of the superclass aren't inherited and\n    // so need to be manually populated.\n    // See http://babeljs.io/docs/advanced/caveats/#classes-10-and-below-\n\n    _createClass(RadiumEnhancer, [{\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (_get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this)) {\n          _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this).call(this);\n        }\n\n        this._radiumIsMounted = false;\n\n        if (this._radiumMouseUpListener) {\n          this._radiumMouseUpListener.remove();\n        }\n\n        if (this._radiumMediaQueryListenersByQuery) {\n          Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function (query) {\n            this._radiumMediaQueryListenersByQuery[query].remove();\n          }, this);\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var renderedElement = _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'render', this).call(this);\n        return resolveStyles(this, renderedElement, config);\n      }\n    }]);\n\n    return RadiumEnhancer;\n  })(ComposedComponent);\n\n  copyProperties(ComposedComponent, RadiumEnhancer);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This also fixes React Hot Loader by exposing the original components top\n    // level prototype methods on the Radium enhanced prototype as discussed in\n    // https://github.com/FormidableLabs/radium/issues/219.\n    copyProperties(ComposedComponent.prototype, RadiumEnhancer.prototype);\n  }\n\n  RadiumEnhancer.displayName = ComposedComponent.displayName || ComposedComponent.name || 'Component';\n\n  RadiumEnhancer.printStyleClass = printStyles.addPrintStyles(RadiumEnhancer);\n\n  return RadiumEnhancer;\n};\n\nmodule.exports = enhanceWithRadium;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/enhancer.js\n ** module id = 4\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*:: import type {Config} from './config';*/\n\nvar _getState = require('./get-state');\nvar getStateKey = require('./get-state-key');\nvar mergeStyles = require('./merge-styles');\nvar Plugins = require('./plugins/');\n\nvar ExecutionEnvironment = require('exenv');\nvar React = require('react');\n\nvar DEFAULT_CONFIG = {\n  plugins: [Plugins.mergeStyleArray, Plugins.checkProps, Plugins.resolveMediaQueries, Plugins.resolveInteractionStyles, Plugins.prefix, Plugins.checkProps]\n};\n\n// Gross\nvar globalState = {};\n\n// Declare early for recursive helpers.\nvar resolveStyles = ((null /*: any*/) /*: (\n                                        component: any, // ReactComponent, flow+eslint complaining\n                                        renderedElement: any,\n                                        config: Config,\n                                        existingKeyMap?: {[key: string]: bool}\n                                      ) => any*/);\n\nvar _resolveChildren = function _resolveChildren(_ref) {\n  var children = _ref.children;\n  var component = _ref.component;\n  var config = _ref.config;\n  var existingKeyMap = _ref.existingKeyMap;\n\n  if (!children) {\n    return children;\n  }\n\n  var childrenType = typeof children;\n\n  if (childrenType === 'string' || childrenType === 'number') {\n    // Don't do anything with a single primitive child\n    return children;\n  }\n\n  if (childrenType === 'function') {\n    // Wrap the function, resolving styles on the result\n    return function () {\n      var result = children.apply(this, arguments);\n      if (React.isValidElement(result)) {\n        return resolveStyles(component, result, config, existingKeyMap);\n      }\n      return result;\n    };\n  }\n\n  if (React.Children.count(children) === 1 && children.type) {\n    // If a React Element is an only child, don't wrap it in an array for\n    // React.Children.map() for React.Children.only() compatibility.\n    var onlyChild = React.Children.only(children);\n    return resolveStyles(component, onlyChild, config, existingKeyMap);\n  }\n\n  return React.Children.map(children, function (child) {\n    if (React.isValidElement(child)) {\n      return resolveStyles(component, child, config, existingKeyMap);\n    }\n\n    return child;\n  });\n};\n\n// Recurse over props, just like children\nvar _resolveProps = function _resolveProps(_ref2) {\n  var component = _ref2.component;\n  var config = _ref2.config;\n  var existingKeyMap = _ref2.existingKeyMap;\n  var props = _ref2.props;\n\n  var newProps = props;\n\n  Object.keys(props).forEach(function (prop) {\n    // We already recurse over children above\n    if (prop === 'children') {\n      return;\n    }\n\n    var propValue = props[prop];\n    if (React.isValidElement(propValue)) {\n      newProps = _extends({}, newProps);\n      newProps[prop] = resolveStyles(component, propValue, config, existingKeyMap);\n    }\n  });\n\n  return newProps;\n};\n\nvar _buildGetKey = function _buildGetKey(renderedElement, existingKeyMap) {\n  // We need a unique key to correlate state changes due to user interaction\n  // with the rendered element, so we know to apply the proper interactive\n  // styles.\n  var originalKey = typeof renderedElement.ref === 'string' ? renderedElement.ref : renderedElement.key;\n  var key = getStateKey(originalKey);\n\n  var alreadyGotKey = false;\n  var getKey = function getKey() {\n    if (alreadyGotKey) {\n      return key;\n    }\n\n    alreadyGotKey = true;\n\n    if (existingKeyMap[key]) {\n      throw new Error('Radium requires each element with interactive styles to have a unique ' + 'key, set using either the ref or key prop. ' + (originalKey ? 'Key \"' + originalKey + '\" is a duplicate.' : 'Multiple elements have no key specified.'));\n    }\n\n    existingKeyMap[key] = true;\n\n    return key;\n  };\n\n  return getKey;\n};\n\nvar _setStyleState = function _setStyleState(component, key, stateKey, value) {\n  if (!component._radiumIsMounted) {\n    return;\n  }\n\n  var existing = component._lastRadiumState || component.state && component.state._radiumStyleState || {};\n\n  var state = { _radiumStyleState: _extends({}, existing) };\n  state._radiumStyleState[key] = _extends({}, state._radiumStyleState[key]);\n  state._radiumStyleState[key][stateKey] = value;\n\n  component._lastRadiumState = state._radiumStyleState;\n  component.setState(state);\n};\n\nvar _runPlugins = function _runPlugins(_ref3) {\n  var component = _ref3.component;\n  var config = _ref3.config;\n  var existingKeyMap = _ref3.existingKeyMap;\n  var props = _ref3.props;\n  var renderedElement = _ref3.renderedElement;\n\n  // Don't run plugins if renderedElement is not a simple ReactDOMElement or has\n  // no style.\n  if (!React.isValidElement(renderedElement) || typeof renderedElement.type !== 'string' || !props.style) {\n    return props;\n  }\n\n  var newProps = props;\n\n  var plugins = config.plugins || DEFAULT_CONFIG.plugins;\n\n  var getKey = _buildGetKey(renderedElement, existingKeyMap);\n\n  var newStyle = props.style;\n  plugins.forEach(function (plugin) {\n    var result = plugin({\n      ExecutionEnvironment: ExecutionEnvironment,\n      componentName: component.constructor.displayName || component.constructor.name,\n      config: config,\n      getComponentField: function getComponentField(key) {\n        return component[key];\n      },\n      getGlobalState: function getGlobalState(key) {\n        return globalState[key];\n      },\n      getState: function getState(stateKey, elementKey) {\n        return _getState(component.state, elementKey || getKey(), stateKey);\n      },\n      mergeStyles: mergeStyles,\n      props: newProps,\n      setState: function setState(stateKey, value, elementKey) {\n        return _setStyleState(component, elementKey || getKey(), stateKey, value);\n      },\n      style: newStyle\n    }) || {};\n\n    newStyle = result.style || newStyle;\n\n    newProps = result.props && Object.keys(result.props).length ? _extends({}, newProps, result.props) : newProps;\n\n    var newComponentFields = result.componentFields || {};\n    Object.keys(newComponentFields).forEach(function (fieldName) {\n      component[fieldName] = newComponentFields[fieldName];\n    });\n\n    var newGlobalState = result.globalState || {};\n    Object.keys(newGlobalState).forEach(function (key) {\n      globalState[key] = newGlobalState[key];\n    });\n  });\n\n  if (newStyle !== props.style) {\n    newProps = _extends({}, newProps, { style: newStyle });\n  }\n\n  return newProps;\n};\n\n// Wrapper around React.cloneElement. To avoid processing the same element\n// twice, whenever we clone an element add a special prop to make sure we don't\n// process this element again.\nvar _cloneElement = function _cloneElement(renderedElement, newProps, newChildren) {\n  // Only add flag if this is a normal DOM element\n  if (typeof renderedElement.type === 'string') {\n    newProps = _extends({}, newProps, { _radiumDidResolveStyles: true });\n  }\n\n  return React.cloneElement(renderedElement, newProps, newChildren);\n};\n\n//\n// The nucleus of Radium. resolveStyles is called on the rendered elements\n// before they are returned in render. It iterates over the elements and\n// children, rewriting props to add event handlers required to capture user\n// interactions (e.g. mouse over). It also replaces the style prop because it\n// adds in the various interaction styles (e.g. :hover).\n//\nresolveStyles = function (component /*: any*/, // ReactComponent, flow+eslint complaining\nrenderedElement /*: any*/, // ReactElement\nconfig /*: Config*/, existingKeyMap /*:: ?: {[key: string]: boolean}*/) /*: any*/ {\n  if (config === undefined) config = DEFAULT_CONFIG;\n  // ReactElement\n  existingKeyMap = existingKeyMap || {};\n\n  if (!renderedElement ||\n  // Bail if we've already processed this element. This ensures that only the\n  // owner of an element processes that element, since the owner's render\n  // function will be called first (which will always be the case, since you\n  // can't know what else to render until you render the parent component).\n  renderedElement.props && renderedElement.props._radiumDidResolveStyles) {\n    return renderedElement;\n  }\n\n  var newChildren = _resolveChildren({\n    children: renderedElement.props.children,\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap\n  });\n\n  var newProps = _resolveProps({\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    props: renderedElement.props\n  });\n\n  newProps = _runPlugins({\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    props: newProps,\n    renderedElement: renderedElement\n  });\n\n  // If nothing changed, don't bother cloning the element. Might be a bit\n  // wasteful, as we add the sentinal to stop double-processing when we clone.\n  // Assume benign double-processing is better than unneeded cloning.\n  if (newChildren === renderedElement.props.children && newProps === renderedElement.props) {\n    return renderedElement;\n  }\n\n  return _cloneElement(renderedElement, newProps !== renderedElement.props ? newProps : {}, newChildren);\n};\n\n// Only for use by tests\nresolveStyles.__clearStateForTests = function () {\n  globalState = {};\n};\n\nmodule.exports = resolveStyles;\n// ReactComponent, flow+eslint complaining\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/resolve-styles.js\n ** module id = 5\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar getStateKey = require('./get-state-key');\n\nvar getState = function getState(state /*: {_radiumStyleState: {[key: string]: {[value: string]: boolean}}}*/, elementKey /*: string*/, value /*: string*/) /*: any*/ {\n  var key = getStateKey(elementKey);\n\n  return !!state && !!state._radiumStyleState && !!state._radiumStyleState[key] && state._radiumStyleState[key][value];\n};\n\nmodule.exports = getState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/get-state.js\n ** module id = 6\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar getStateKey = function getStateKey(elementKey /*: ?string*/) /*: string*/ {\n  return elementKey === null || elementKey === undefined ? 'main' : elementKey.toString();\n};\n\nmodule.exports = getStateKey;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/get-state-key.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nvar isPlainObject = require('is-plain-object');\n\nvar shouldMerge = function shouldMerge(value) {\n  // Don't merge objects overriding toString, since they should be converted\n  // to string values.\n  return isPlainObject(value) && value.toString === Object.prototype.toString;\n};\n\n// Merge style objects. Deep merge plain object values.\nvar mergeStyles = function mergeStyles(styles) {\n  var result = {};\n\n  styles.forEach(function (style) {\n    if (!style || typeof style !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(style)) {\n      style = mergeStyles(style);\n    }\n\n    Object.keys(style).forEach(function (key) {\n      if (shouldMerge(style[key]) && shouldMerge(result[key])) {\n        result[key] = mergeStyles([result[key], style[key]]);\n      } else {\n        result[key] = style[key];\n      }\n    });\n  });\n\n  return result;\n};\n\nmodule.exports = mergeStyles;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/merge-styles.js\n ** module id = 8\n ** module chunks = 0\n **/","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n  \n  if (isObjectObject(o) === false) return false;\n  \n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n  \n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n  \n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n  \n  // Most likely a plain Object\n  return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-plain-object/index.js\n ** module id = 9\n ** module chunks = 0\n **/","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object'\n    && !Array.isArray(val);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isobject/index.js\n ** module id = 10\n ** module chunks = 0\n **/","/** @flow */\n/* eslint-disable block-scoped-var */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\n/*:: import type {Config} from '../config';*/\n\nvar checkPropsPlugin = require('./check-props-plugin');\nvar mergeStyleArrayPlugin = require('./merge-style-array-plugin');\nvar prefixPlugin = require('./prefix-plugin');\nvar resolveInteractionStylesPlugin = require('./resolve-interaction-styles-plugin');\nvar resolveMediaQueriesPlugin = require('./resolve-media-queries-plugin');\n\n/*:: export type PluginConfig = {\n  // May not be readable if code has been minified\n  componentName: string,\n\n  // The Radium configuration\n  config: Config,\n\n  // Retrieve the value of a field on the component\n  getComponentField: (key: string) => any,\n\n  // Retrieve the value of a field global to the Radium module\n  // Used so that tests can easily clear global state.\n  getGlobalState: (key: string) => any,\n\n  // Retrieve the value of some state specific to the rendered element.\n  // Requires the element to have a unique key or ref or for an element key\n  // to be passed in.\n  getState: (stateKey: string, elementKey?: string) => any,\n\n  // Access to the mergeStyles utility\n  mergeStyles: (styles: Array<Object>) => Object,\n\n  // The props of the rendered element. This can be changed by each plugin,\n  // and successive plugins will see the result of previous plugins.\n  props: Object,\n\n  // Calls setState on the component with the given key and value.\n  // By default this is specific to the rendered element, but you can override\n  // by passing in the `elementKey` parameter.\n  setState: (stateKey: string, value: any, elementKey?: string) => void,\n\n  // The style prop of the rendered element. This can be changed by each plugin,\n  // and successive plugins will see the result of previous plugins. Kept\n  // separate from `props` for ease of use.\n  style: Object,\n\n  // uses the exenv npm module\n  ExecutionEnvironment: {\n    canUseEventListeners: bool,\n    canUseDOM: bool,\n  }\n};*/\n/*:: export type PluginResult = ?{\n  // Merged into the component directly. Useful for storing things for which you\n  // don't need to re-render, event subscriptions, for instance.\n  componentFields?: Object,\n\n  // Merged into a Radium controlled global state object. Use this instead of\n  // module level state for ease of clearing state between tests.\n  globalState?: Object,\n\n  // Merged into the rendered element's props.\n  props?: Object,\n\n  // Replaces (not merged into) the rendered element's style property.\n  style?: Object,\n};*/\n\nmodule.exports = {\n  checkProps: checkPropsPlugin,\n  mergeStyleArray: mergeStyleArrayPlugin,\n  prefix: prefixPlugin,\n  resolveInteractionStyles: resolveInteractionStylesPlugin,\n  resolveMediaQueries: resolveMediaQueriesPlugin\n};\n\n// May not be readable if code has been minified\n\n// The Radium configuration\n\n// Retrieve the value of a field on the component\n\n// Retrieve the value of a field global to the Radium module\n// Used so that tests can easily clear global state.\n\n// Retrieve the value of some state specific to the rendered element.\n// Requires the element to have a unique key or ref or for an element key\n// to be passed in.\n\n// Access to the mergeStyles utility\n\n// The props of the rendered element. This can be changed by each plugin,\n// and successive plugins will see the result of previous plugins.\n\n// Calls setState on the component with the given key and value.\n// By default this is specific to the rendered element, but you can override\n// by passing in the `elementKey` parameter.\n\n// The style prop of the rendered element. This can be changed by each plugin,\n// and successive plugins will see the result of previous plugins. Kept\n// separate from `props` for ease of use.\n\n// uses the exenv npm module\n\n// Merged into the component directly. Useful for storing things for which you\n// don't need to re-render, event subscriptions, for instance.\n\n// Merged into a Radium controlled global state object. Use this instead of\n// module level state for ease of clearing state between tests.\n\n// Merged into the rendered element's props.\n\n// Replaces (not merged into) the rendered element's style property.\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/plugins/index.js\n ** module id = 11\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*:: import type {PluginConfig, PluginResult} from '.';*/\n\nvar checkProps = (function () {} /*: any*/);\n\nif (process.env.NODE_ENV !== 'production') {\n  // Warn if you use longhand and shorthand properties in the same style\n  // object.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties\n\n  var shorthandPropertyExpansions = {\n    'background': ['backgroundAttachment', 'backgroundBlendMode', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundRepeatX', 'backgroundRepeatY', 'backgroundSize'],\n    'border': ['borderBottom', 'borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderColor', 'borderLeft', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRight', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderStyle', 'borderTop', 'borderTopColor', 'borderTopStyle', 'borderTopWidth', 'borderWidth'],\n    'borderImage': ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],\n    'borderRadius': ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],\n    'font': ['fontFamily', 'fontKerning', 'fontSize', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantLigatures', 'fontWeight', 'lineHeight'],\n    'listStyle': ['listStyleImage', 'listStylePosition', 'listStyleType'],\n    'margin': ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n    'padding': ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n    'transition': ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction']\n  };\n\n  checkProps = function (config /*: PluginConfig*/) /*: PluginResult*/ {\n    var componentName = config.componentName;\n    var style = config.style;\n\n    if (typeof style !== 'object' || !style) {\n      return;\n    }\n\n    var styleKeys = Object.keys(style);\n    styleKeys.forEach(function (styleKey) {\n      if (shorthandPropertyExpansions[styleKey] && shorthandPropertyExpansions[styleKey].some(function (sp) {\n        return styleKeys.indexOf(sp) !== -1;\n      })) {\n        if (process.env.NODE_ENV !== 'production') {\n          /* eslint-disable no-console */\n          console.warn('Radium: property \"' + styleKey + '\" in style object', style, ': do not mix longhand and ' + 'shorthand properties in the same style object. Check the render ' + 'method of ' + componentName + '.', 'See https://github.com/FormidableLabs/radium/issues/95 for more ' + 'information.');\n          /* eslint-enable no-console */\n        }\n      }\n    });\n\n    styleKeys.forEach(function (k) {\n      return checkProps(_extends({}, config, { style: style[k] }));\n    });\n    return;\n  };\n}\n\nmodule.exports = checkProps;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/plugins/check-props-plugin.js\n ** module id = 12\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\n// Convenient syntax for multiple styles: `style={[style1, style2, etc]}`\n// Ignores non-objects, so you can do `this.state.isCool && styles.cool`.\n/*:: import type {PluginConfig, PluginResult} from '.';*/var mergeStyleArrayPlugin = function mergeStyleArrayPlugin(_ref /*: PluginConfig*/) /*: PluginResult*/ {\n  var style = _ref.style;\n  var mergeStyles = _ref.mergeStyles;\n\n  var newStyle = Array.isArray(style) ? mergeStyles(style) : style;\n  return { style: newStyle };\n};\n\nmodule.exports = mergeStyleArrayPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/plugins/merge-style-array-plugin.js\n ** module id = 13\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\n/*:: import type {PluginConfig, PluginResult} from '.';*/\n\nvar Prefixer = require('../prefixer');\n\nvar prefixPlugin = function prefixPlugin(_ref /*: PluginConfig*/) /*: PluginResult*/ {\n  var componentName = _ref.componentName;\n  var style = _ref.style;\n\n  var newStyle = Prefixer.getPrefixedStyle(style, componentName);\n  return { style: newStyle };\n};\n\nmodule.exports = prefixPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/plugins/prefix-plugin.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * Based on https://github.com/jsstyles/css-vendor, but without having to\n * convert between different cases all the time.\n *\n * @flow\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('exenv');\nvar arrayFind = require('array-find');\n\nvar VENDOR_PREFIX_REGEX = /-(moz|webkit|ms|o)-/;\n\nvar vendorPrefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\nvar infoByCssPrefix = {\n  '-moz-': {\n    cssPrefix: '-moz-',\n    jsPrefix: 'Moz',\n    alternativeProperties: {\n      // OLD - Firefox 19-\n      alignItems: ['MozBoxAlign'],\n      flex: ['MozBoxFlex'],\n      flexDirection: ['MozBoxOrient'],\n      justifyContent: ['MozBoxPack'],\n      order: ['MozBoxOrdinalGroup']\n    },\n    alternativeValues: {\n      // OLD - Firefox 19-\n      alignItems: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      display: {\n        flex: ['-moz-box']\n      },\n      flexDirection: {\n        column: ['vertical'],\n        row: ['horizontal']\n      },\n      justifyContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify']\n      }\n    }\n  },\n  '-ms-': {\n    cssPrefix: '-ms-',\n    jsPrefix: 'ms',\n    alternativeProperties: {\n      // TWEENER - IE 10\n      alignContent: ['msFlexLinePack'],\n      alignItems: ['msFlexAlign'],\n      alignSelf: ['msFlexAlignItem'],\n      justifyContent: ['msFlexPack'],\n      order: ['msFlexOrder']\n    },\n    alternativeValues: {\n      // TWEENER - IE 10\n      alignContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify'],\n        'space-around': ['distribute']\n      },\n      alignItems: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      alignSelf: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      display: {\n        flex: ['-ms-flexbox'],\n        'inline-flex': ['-ms-inline-flexbox']\n      },\n      justifyContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify'],\n        'space-around': ['distribute']\n      }\n    }\n  },\n  '-o-': {\n    cssPrefix: '-o-',\n    jsPrefix: 'O'\n  },\n  '-webkit-': {\n    cssPrefix: '-webkit-',\n    jsPrefix: 'Webkit',\n    alternativeProperties: {\n      // OLD - iOS 6-, Safari 3.1-6\n      alignItems: ['WebkitBoxAlign'],\n      flex: ['MozBoxFlex'],\n      flexDirection: ['WebkitBoxOrient'],\n      justifyContent: ['WebkitBoxPack'],\n      order: ['WebkitBoxOrdinalGroup']\n    },\n    alternativeValues: {\n      // OLD - iOS 6-, Safari 3.1-6\n      alignItems: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      display: {\n        flex: ['-webkit-box']\n      },\n      flexDirection: {\n        row: ['horizontal'],\n        column: ['vertical']\n      },\n      justifyContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify']\n      }\n    }\n  }\n};\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n * Copied from React core June 22, 2015.\n * https://github.com/facebook/react/blob/\n * ba81b60ad8e93b747be42a03b797065932c49c96/\n * src/renderers/dom/shared/CSSProperty.js\n */\nvar isUnitlessNumber = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nvar domStyle = {};\nvar prefixedPropertyCache = {};\nvar prefixedValueCache = {};\nvar prefixInfo = {\n  cssPrefix: '',\n  jsPrefix: ''\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  domStyle = (document /*: any*/).createElement('p').style;\n\n  // older Firefox versions may have no float property in style object\n  // so we need to add it manually\n  if (domStyle.float === undefined) {\n    domStyle.float = '';\n  }\n\n  // Based on http://davidwalsh.name/vendor-prefix\n  var prefixMatch;\n  var windowStyles = window.getComputedStyle(document.documentElement, '');\n\n  // Array.prototype.slice.call(windowStyles) fails with\n  // \"Uncaught TypeError: undefined is not a function\"\n  // in older versions Android (KitKat) web views\n  for (var i = 0; i < windowStyles.length; i++) {\n    prefixMatch = windowStyles[i].match(VENDOR_PREFIX_REGEX);\n\n    if (prefixMatch) {\n      break;\n    }\n  }\n\n  var cssVendorPrefix = prefixMatch && prefixMatch[0];\n\n  prefixInfo = cssVendorPrefix && infoByCssPrefix[cssVendorPrefix] ? infoByCssPrefix[cssVendorPrefix] : prefixInfo;\n}\n\nvar getPrefixedPropertyName = function getPrefixedPropertyName(property /*: string*/) /*: string*/ {\n  if (prefixedPropertyCache.hasOwnProperty(property)) {\n    return prefixedPropertyCache[property];\n  }\n\n  var unprefixed = property;\n\n  // Try the prefixed version first. Chrome in particular has the `filter` and\n  // `webkitFilter` properties availalbe on the style object, but only the\n  // prefixed version actually works.\n  var possiblePropertyNames = [\n  // Prefixed\n  prefixInfo.jsPrefix + property[0].toUpperCase() + property.slice(1), unprefixed];\n\n  // Alternative property names\n  if (prefixInfo.alternativeProperties && prefixInfo.alternativeProperties[property]) {\n    possiblePropertyNames = possiblePropertyNames.concat(prefixInfo.alternativeProperties[property]);\n  }\n\n  var workingProperty = arrayFind(possiblePropertyNames, function (possiblePropertyName) {\n    if (possiblePropertyName in domStyle) {\n      return possiblePropertyName;\n    }\n  }) || false;\n\n  prefixedPropertyCache[property] = workingProperty;\n\n  return prefixedPropertyCache[property];\n};\n\n// We are un-prefixing values before checking for isUnitlessNumber,\n// otherwise we are at risk of being in a situation where someone\n// explicitly passes something like `MozBoxFlex: 1` and that will\n// in turn get transformed into `MozBoxFlex: 1px`.\nvar _getUnprefixedProperty = function _getUnprefixedProperty(property) {\n  var noPrefixProperty = property;\n\n  vendorPrefixes.some(function (prefix) {\n    // Let's check if the property starts with a vendor prefix\n    if (property.indexOf(prefix) === 0) {\n      noPrefixProperty = noPrefixProperty.replace(prefix, '');\n\n      // We have removed the vendor prefix, however the first\n      // character is going to be uppercase hence won't match\n      // any of the `isUnitlessNumber` keys as they all start\n      // with lower case. Let's ensure that the first char is\n      // lower case.\n      noPrefixProperty = noPrefixProperty.charAt(0).toLowerCase() + noPrefixProperty.slice(1);\n\n      return true;\n    }\n  });\n\n  return noPrefixProperty;\n};\n\n// React is planning to deprecate adding px automatically\n// (https://github.com/facebook/react/issues/1873), and if they do, this\n// should change to a warning or be removed in favor of React's warning.\n// Same goes for below.\nvar _addPixelSuffixToValueIfNeeded = function _addPixelSuffixToValueIfNeeded(originalProperty, value) {\n  var unPrefixedProperty = _getUnprefixedProperty(originalProperty);\n\n  if (value !== 0 && !isNaN(value) && !isUnitlessNumber[unPrefixedProperty]) {\n    return value + 'px';\n  }\n  return value;\n};\n\nvar _getPrefixedValue = function _getPrefixedValue(componentName, property, value, originalProperty) {\n  if (!Array.isArray(value)) {\n    // don't test numbers (pure or stringy), but do add 'px' prefix if needed\n    if (!isNaN(value) && value !== null) {\n      return _addPixelSuffixToValueIfNeeded(originalProperty, value);\n    }\n\n    if (typeof value !== 'string') {\n      if (value !== null && value !== undefined) {\n        value = value.toString();\n      } else {\n        return value;\n      }\n    }\n\n    // don't test numbers with units (e.g. 10em)\n    if (!isNaN(parseInt(value, 10))) {\n      return value;\n    }\n  }\n\n  var cacheKey = Array.isArray(value) ? value.join(' || ') : property + value;\n\n  if (prefixedValueCache.hasOwnProperty(cacheKey)) {\n    return prefixedValueCache[cacheKey];\n  }\n\n  var possibleValues;\n  if (Array.isArray(value)) {\n    // Add px for the same values React would, otherwise the testing below will\n    // fail and it will try to fallback.\n    possibleValues = value.map(function (v) {\n      return _addPixelSuffixToValueIfNeeded(originalProperty, v);\n    });\n\n    // Add prefixed versions\n    possibleValues = possibleValues.concat(value.filter(function (v) {\n      return !isNaN(v);\n    }) // Don't prefix numbers\n    .map(function (v) {\n      return prefixInfo.cssPrefix + v;\n    }));\n  } else {\n    possibleValues = [\n    // Unprefixed\n    value,\n    // Prefixed\n    prefixInfo.cssPrefix + value];\n  }\n\n  // Alternative values\n  if (prefixInfo.alternativeValues && prefixInfo.alternativeValues[originalProperty] && prefixInfo.alternativeValues[originalProperty][value]) {\n    possibleValues = possibleValues.concat(prefixInfo.alternativeValues[originalProperty][value]);\n  }\n\n  // Test possible value in order\n  var workingValue = arrayFind(possibleValues, function (possibleValue) {\n    domStyle[property] = '';\n    domStyle[property] = possibleValue;\n\n    // Note that we just make sure it is not an empty string. Browsers will\n    // sometimes rewrite values, but still accept them. They will set the value\n    // to an empty string if not supported.\n    // E.g. for border, \"solid 1px black\" becomes \"1px solid black\"\n    //      but \"foobar\" becomes \"\", since it is not supported.\n    return !!domStyle[property];\n  });\n\n  if (workingValue) {\n    prefixedValueCache[cacheKey] = workingValue;\n  } else {\n    // Unsupported, assume unprefixed works, but warn\n    prefixedValueCache[cacheKey] = value;\n\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable no-console */\n      if (console && console.warn) {\n        var componentContext = componentName ? ' in component \"' + componentName + '\"' : '';\n\n        console.warn('Unsupported CSS value \"' + value + '\" for property \"' + property + '\"' + componentContext);\n      }\n      /* eslint-enable no-console */\n    }\n  }\n\n  return prefixedValueCache[cacheKey];\n};\n\n// Returns a new style object with vendor prefixes added to property names\n// and values.\nvar getPrefixedStyle = function getPrefixedStyle(style /*: Object*/, componentName /*: ?string*/) /*: Object*/ {\n  if (!ExecutionEnvironment.canUseDOM) {\n    return Object.keys(style).reduce(function (newStyle, key) {\n      var value = style[key];\n      var newValue = Array.isArray(value) ? value[0] : value;\n      newStyle[key] = newValue;\n      return newStyle;\n    }, {});\n  }\n\n  var prefixedStyle = {};\n  Object.keys(style).forEach(function (property) {\n    var value = style[property];\n\n    var newProperty = getPrefixedPropertyName(property);\n    if (!newProperty) {\n      // Ignore unsupported properties\n      if (process.env.NODE_ENV !== 'production') {\n        /* eslint-disable no-console */\n        if (console && console.warn) {\n          var componentContext = componentName ? ' in component \"' + componentName + '\"' : '';\n\n          console.warn('Unsupported CSS property \"' + property + '\"' + componentContext);\n        }\n        /* eslint-enable no-console */\n        return;\n      }\n    }\n\n    var newValue = _getPrefixedValue(componentName, newProperty, value, property);\n\n    prefixedStyle[newProperty] = newValue;\n  });\n  return prefixedStyle;\n};\n\nmodule.exports = {\n  getPrefixedStyle: getPrefixedStyle,\n  cssPrefix: prefixInfo.cssPrefix,\n  jsPrefix: prefixInfo.jsPrefix\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/prefixer.js\n ** module id = 15\n ** module chunks = 0\n **/","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/exenv/index.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict';\n\nfunction find(array, predicate, context) {\n  if (typeof Array.prototype.find === 'function') {\n    return array.find(predicate, context);\n  }\n\n  context = context || this;\n  var length = array.length;\n  var i;\n\n  if (typeof predicate !== 'function') {\n    throw new TypeError(predicate + ' is not a function');\n  }\n\n  for (i = 0; i < length; i++) {\n    if (predicate.call(context, array[i], i, array)) {\n      return array[i];\n    }\n  }\n}\n\nmodule.exports = find;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/array-find/find.js\n ** module id = 17\n ** module chunks = 0\n **/","/** @flow */\n\n'use strict';\n\n/*:: import type {PluginConfig, PluginResult} from '.';*/\n\nvar MouseUpListener = require('./mouse-up-listener');\n\nvar _isInteractiveStyleField = function _isInteractiveStyleField(styleFieldName) {\n  return styleFieldName === ':hover' || styleFieldName === ':active' || styleFieldName === ':focus';\n};\n\nvar resolveInteractionStyles = function resolveInteractionStyles(config /*: PluginConfig*/) /*: PluginResult*/ {\n  var ExecutionEnvironment = config.ExecutionEnvironment;\n  var getComponentField = config.getComponentField;\n  var getState = config.getState;\n  var mergeStyles = config.mergeStyles;\n  var props = config.props;\n  var setState = config.setState;\n  var style = config.style;\n\n  var newComponentFields = {};\n  var newProps = {};\n\n  // Only add handlers if necessary\n  if (style[':hover']) {\n    // Always call the existing handler if one is already defined.\n    // This code, and the very similar ones below, could be abstracted a bit\n    // more, but it hurts readability IMO.\n    var existingOnMouseEnter = props.onMouseEnter;\n    newProps.onMouseEnter = function (e) {\n      existingOnMouseEnter && existingOnMouseEnter(e);\n      setState(':hover', true);\n    };\n\n    var existingOnMouseLeave = props.onMouseLeave;\n    newProps.onMouseLeave = function (e) {\n      existingOnMouseLeave && existingOnMouseLeave(e);\n      setState(':hover', false);\n    };\n  }\n\n  if (style[':active']) {\n    var existingOnMouseDown = props.onMouseDown;\n    newProps.onMouseDown = function (e) {\n      existingOnMouseDown && existingOnMouseDown(e);\n      newComponentFields._lastMouseDown = Date.now();\n      setState(':active', 'viamousedown');\n    };\n\n    var existingOnKeyDown = props.onKeyDown;\n    newProps.onKeyDown = function (e) {\n      existingOnKeyDown && existingOnKeyDown(e);\n      if (e.key === ' ' || e.key === 'Enter') {\n        setState(':active', 'viakeydown');\n      }\n    };\n\n    var existingOnKeyUp = props.onKeyUp;\n    newProps.onKeyUp = function (e) {\n      existingOnKeyUp && existingOnKeyUp(e);\n      if (e.key === ' ' || e.key === 'Enter') {\n        setState(':active', false);\n      }\n    };\n  }\n\n  if (style[':focus']) {\n    var existingOnFocus = props.onFocus;\n    newProps.onFocus = function (e) {\n      existingOnFocus && existingOnFocus(e);\n      setState(':focus', true);\n    };\n\n    var existingOnBlur = props.onBlur;\n    newProps.onBlur = function (e) {\n      existingOnBlur && existingOnBlur(e);\n      setState(':focus', false);\n    };\n  }\n\n  if (style[':active'] && !getComponentField('_radiumMouseUpListener') && ExecutionEnvironment.canUseEventListeners) {\n    newComponentFields._radiumMouseUpListener = MouseUpListener.subscribe(function () {\n      Object.keys(getComponentField('state')._radiumStyleState).forEach(function (key) {\n        if (getState(':active') === 'viamousedown') {\n          setState(':active', false, key);\n        }\n      });\n    });\n  }\n\n  // Merge the styles in the order they were defined\n  var interactionStyles = Object.keys(style).filter(function (name) {\n    return _isInteractiveStyleField(name) && getState(name);\n  }).map(function (name) {\n    return style[name];\n  });\n\n  var newStyle = mergeStyles([style].concat(interactionStyles));\n\n  // Remove interactive styles\n  newStyle = Object.keys(newStyle).reduce(function (styleWithoutInteractions, name) {\n    if (!_isInteractiveStyleField(name)) {\n      styleWithoutInteractions[name] = newStyle[name];\n    }\n    return styleWithoutInteractions;\n  }, {});\n\n  return {\n    componentFields: newComponentFields,\n    props: newProps,\n    style: newStyle\n  };\n};\n\nmodule.exports = resolveInteractionStyles;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/plugins/resolve-interaction-styles-plugin.js\n ** module id = 18\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _callbacks = [];\nvar _mouseUpListenerIsActive = false;\n\nvar _handleMouseUp = function _handleMouseUp(ev) {\n  _callbacks.forEach(function (callback) {\n    callback(ev);\n  });\n};\n\nvar subscribe = function subscribe(callback /*: () => void*/) /*: {remove: () => void}*/ {\n  if (_callbacks.indexOf(callback) === -1) {\n    _callbacks.push(callback);\n  }\n\n  if (!_mouseUpListenerIsActive) {\n    window.addEventListener('mouseup', _handleMouseUp);\n    _mouseUpListenerIsActive = true;\n  }\n\n  return {\n    remove: function remove() {\n      var index = _callbacks.indexOf(callback);\n      _callbacks.splice(index, 1);\n\n      if (_callbacks.length === 0 && _mouseUpListenerIsActive) {\n        window.removeEventListener('mouseup', _handleMouseUp);\n        _mouseUpListenerIsActive = false;\n      }\n    }\n  };\n};\n\nmodule.exports = {\n  subscribe: subscribe\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/plugins/mouse-up-listener.js\n ** module id = 19\n ** module chunks = 0\n **/","/** @flow */\n\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*:: import type {MatchMediaType} from '../config';*/\n/*:: import type {PluginConfig, PluginResult} from '.';*/\n\nvar _windowMatchMedia;\nvar _getWindowMatchMedia = function _getWindowMatchMedia(ExecutionEnvironment) {\n  if (_windowMatchMedia === undefined) {\n    _windowMatchMedia = !!ExecutionEnvironment.canUseDOM && !!window && !!window.matchMedia && function (mediaQueryString) {\n      return window.matchMedia(mediaQueryString);\n    } || null;\n  }\n  return _windowMatchMedia;\n};\n\nvar resolveMediaQueries = function resolveMediaQueries(_ref /*: PluginConfig*/) /*: PluginResult*/ {\n  var ExecutionEnvironment = _ref.ExecutionEnvironment;\n  var getComponentField = _ref.getComponentField;\n  var getGlobalState = _ref.getGlobalState;\n  var config = _ref.config;\n  var mergeStyles = _ref.mergeStyles;\n  var setState = _ref.setState;\n  var style = _ref.style;\n\n  var newComponentFields = {};\n  var newStyle = style;\n  var matchMedia /*: ?MatchMediaType*/ = config.matchMedia || _getWindowMatchMedia(ExecutionEnvironment);\n  if (!matchMedia) {\n    return newStyle;\n  }\n\n  var mediaQueryListByQueryString = getGlobalState('mediaQueryListByQueryString') || {};\n\n  Object.keys(style).filter(function (name) {\n    return name.indexOf('@media') === 0;\n  }).map(function (query) {\n    var mediaQueryStyles = style[query];\n    query = query.replace('@media ', '');\n\n    // Create a global MediaQueryList if one doesn't already exist\n    var mql = mediaQueryListByQueryString[query];\n    if (!mql && matchMedia) {\n      mediaQueryListByQueryString[query] = mql = matchMedia(query);\n    }\n\n    var listenersByQuery = getComponentField('_radiumMediaQueryListenersByQuery');\n\n    if (!listenersByQuery || !listenersByQuery[query]) {\n      var listener = function listener() {\n        return setState(query, mql.matches, '_all');\n      };\n      mql.addListener(listener);\n      newComponentFields._radiumMediaQueryListenersByQuery = _extends({}, listenersByQuery);\n      newComponentFields._radiumMediaQueryListenersByQuery[query] = {\n        remove: function remove() {\n          mql.removeListener(listener);\n        }\n      };\n    }\n\n    // Apply media query states\n    if (mql.matches) {\n      newStyle = mergeStyles([newStyle, mediaQueryStyles]);\n    }\n  });\n\n  // Remove media queries\n  newStyle = Object.keys(newStyle).reduce(function (styleWithoutMedia, key) {\n    if (key.indexOf('@media') !== 0) {\n      styleWithoutMedia[key] = newStyle[key];\n    }\n    return styleWithoutMedia;\n  }, {});\n\n  return {\n    componentFields: newComponentFields,\n    globalState: { mediaQueryListByQueryString: mediaQueryListByQueryString },\n    style: newStyle\n  };\n};\n\nmodule.exports = resolveMediaQueries;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/plugins/resolve-media-queries-plugin.js\n ** module id = 20\n ** module chunks = 0\n **/","/* @flow */\n\n\"use strict\";\n\nvar allPrintStyles = {};\nvar listeners = [];\n\nvar subscribe = function subscribe(listener /*: () => void*/) /*: {remove: () => void}*/ {\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n\n  return {\n    remove: function remove() {\n      var listenerIndex = listeners.indexOf(listener);\n\n      if (listenerIndex > -1) {\n        listeners.splice(listenerIndex, 1);\n      }\n    }\n  };\n};\n\nvar _emitChange = function _emitChange() {\n  listeners.forEach(function (listener) {\n    return listener();\n  });\n};\n\nvar _appendImportantToEachValue = function _appendImportantToEachValue(styleObj) {\n  var importantStyleObj = {};\n\n  Object.keys(styleObj).forEach(function (key) {\n    var value = styleObj[key];\n\n    // This breaks unitless values but they'll be deprecated soon anyway\n    // https://github.com/facebook/react/issues/1873\n    value = value + \" !important\";\n    importantStyleObj[key] = value;\n  });\n\n  return importantStyleObj;\n};\n\nvar addPrintStyles = function addPrintStyles(Component /*: constructor*/) {\n  if (!Component.printStyles) {\n    return;\n  }\n\n  var printStyleClass = {};\n\n  Object.keys(Component.printStyles).forEach(function (key) {\n    var styles = Component.printStyles[key];\n    var className = \"Radium-\" + Component.displayName + \"-\" + key;\n    allPrintStyles[\".\" + className] = _appendImportantToEachValue(styles);\n    printStyleClass[key] = className;\n  });\n\n  // Allows for lazy loading of JS that then calls Radium to update the\n  // print styles\n  _emitChange();\n  return printStyleClass;\n};\n\nvar getPrintStyles = function getPrintStyles() /*: Object*/ {\n  return allPrintStyles;\n};\n\nmodule.exports = {\n  addPrintStyles: addPrintStyles,\n  getPrintStyles: getPrintStyles,\n  subscribe: subscribe\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/print-styles.js\n ** module id = 21\n ** module chunks = 0\n **/","'use strict';\n\nvar React = require('react');\n\nvar Style = require('./style.js');\nvar printStyles = require('../print-styles.js');\n\nvar PrintStyle = React.createClass({\n  displayName: 'PrintStyle',\n\n  getInitialState: function getInitialState() {\n    return this._getStylesState();\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.subscription = printStyles.subscribe(this._onChange);\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this.subscription.remove();\n  },\n\n  _onChange: function _onChange() {\n    this.setState(this._getStylesState());\n  },\n\n  _getStylesState: function _getStylesState() {\n    return {\n      styles: printStyles.getPrintStyles()\n    };\n  },\n\n  render: function render() {\n    return React.createElement(Style, { rules: {\n        mediaQueries: {\n          print: this.state.styles\n        }\n      } });\n  }\n});\n\nmodule.exports = PrintStyle;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/components/print-style-sheet.js\n ** module id = 22\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar camelCasePropsToDashCase = require('../camel-case-props-to-dash-case');\nvar createMarkupForStyles = require('../create-markup-for-styles');\nvar Prefixer = require('../prefixer');\n\nvar React = require('react');\n\nvar buildCssString = function buildCssString(selector /*: string*/, rules /*: Object*/, prefix /*: (rules: Object, componentName: string) => Object*/) /*: ?string*/ {\n  if (!selector || !rules) {\n    return null;\n  }\n\n  var prefixedRules = prefix(rules, 'Style');\n  var cssPrefixedRules = camelCasePropsToDashCase(prefixedRules);\n  var serializedRules = createMarkupForStyles(cssPrefixedRules);\n\n  return selector + '{' + serializedRules + '}';\n};\n\nvar Style = React.createClass({\n  displayName: 'Style',\n\n  propTypes: {\n    prefix: React.PropTypes.func.isRequired,\n\n    rules: React.PropTypes.object,\n    scopeSelector: React.PropTypes.string\n  },\n\n  getDefaultProps: function getDefaultProps() /*: {scopeSelector: string}*/ {\n    return {\n      prefix: Prefixer.getPrefixedStyle,\n      scopeSelector: ''\n    };\n  },\n\n  _buildStyles: function _buildStyles(styles /*: Object*/) /*: string*/ {\n    var _this = this;\n\n    return Object.keys(styles).reduce(function (accumulator, selector) {\n      var rules = styles[selector];\n\n      if (selector === 'mediaQueries') {\n        accumulator += _this._buildMediaQueryString(rules);\n      } else {\n        var completeSelector = (_this.props.scopeSelector ? _this.props.scopeSelector + ' ' : '') + selector;\n        accumulator += buildCssString(completeSelector, rules, _this.props.prefix) || '';\n      }\n\n      return accumulator;\n    }, '');\n  },\n\n  _buildMediaQueryString: function _buildMediaQueryString(stylesByMediaQuery /*: {[mediaQuery: string]: Object}*/) /*: string*/ {\n    var _this2 = this;\n\n    var contextMediaQueries = this._getContextMediaQueries();\n    var mediaQueryString = '';\n\n    Object.keys(stylesByMediaQuery).forEach(function (query) {\n      var completeQuery = contextMediaQueries[query] ? contextMediaQueries[query] : query;\n      mediaQueryString += '@media ' + completeQuery + '{' + _this2._buildStyles(stylesByMediaQuery[query]) + '}';\n    });\n\n    return mediaQueryString;\n  },\n\n  _getContextMediaQueries: function _getContextMediaQueries() /*: {[mediaQuery: string]: Object}*/ {\n    var contextMediaQueries = {};\n    if (this.context && this.context.mediaQueries) {\n      Object.keys(this.context.mediaQueries).forEach((function (query) {\n        contextMediaQueries[query] = this.context.mediaQueries[query].media;\n      }).bind(this));\n    }\n\n    return contextMediaQueries;\n  },\n\n  render: function render() /*: ?ReactElement*/ {\n    if (!this.props.rules) {\n      return null;\n    }\n\n    var styles = this._buildStyles(this.props.rules);\n\n    return React.createElement('style', { dangerouslySetInnerHTML: { __html: styles } });\n  }\n});\n\nmodule.exports = Style;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/components/style.js\n ** module id = 23\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _camelCaseRegex = /([a-z])?([A-Z])/g;\nvar _camelCaseReplacer = function _camelCaseReplacer(match, p1, p2) {\n  return (p1 || '') + '-' + p2.toLowerCase();\n};\nvar _camelCaseToDashCase = function _camelCaseToDashCase(s) {\n  return s.replace(_camelCaseRegex, _camelCaseReplacer);\n};\n\nvar camelCasePropsToDashCase = function camelCasePropsToDashCase(prefixedStyle /*: Object*/) /*: Object*/ {\n  // Since prefix is expected to work on inline style objects, we must\n  // translate the keys to dash case for rendering to CSS.\n  return Object.keys(prefixedStyle).reduce(function (result, key) {\n    result[_camelCaseToDashCase(key)] = prefixedStyle[key];\n    return result;\n  }, {});\n};\n\nmodule.exports = camelCasePropsToDashCase;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/camel-case-props-to-dash-case.js\n ** module id = 24\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar createMarkupForStyles = function createMarkupForStyles(style /*: Object*/) /*: string*/ {\n  var spaces /*: string*/ = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n\n  return Object.keys(style).map(function (property) {\n    return spaces + property + ': ' + style[property] + ';';\n  }).join('\\n');\n};\n\nmodule.exports = createMarkupForStyles;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/create-markup-for-styles.js\n ** module id = 25\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar camelCasePropsToDashCase = require('./camel-case-props-to-dash-case');\nvar createMarkupForStyles = require('./create-markup-for-styles');\nvar Prefixer = require('./prefixer');\n\nvar ExecutionEnvironment = require('exenv');\n\nvar isAnimationSupported = false;\nvar keyframesPrefixed = 'keyframes';\n\nif (ExecutionEnvironment.canUseDOM) {\n  // Animation feature detection and keyframes prefixing from MDN:\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Detecting_CSS_animation_support\n  var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n  var element = (document.createElement('div') /*: any*/);\n\n  if (element.style.animationName !== undefined) {\n    isAnimationSupported = true;\n  } else {\n    domPrefixes.some(function (prefix) {\n      if (element.style[prefix + 'AnimationName'] !== undefined) {\n        keyframesPrefixed = '-' + prefix.toLowerCase() + '-keyframes';\n        isAnimationSupported = true;\n        return true;\n      }\n      return false;\n    });\n  }\n}\n\nvar animationIndex = 1;\nvar animationStyleSheet = null;\n\nif (isAnimationSupported) {\n  animationStyleSheet = (document.createElement('style') /*: any*/);\n  document.head.appendChild(animationStyleSheet);\n}\n\n// Simple animation helper that injects CSS into a style object containing the\n// keyframes, and returns a string with the generated animation name.\nvar keyframes = function keyframes(keyframeRules /*: {[percentage: string]: {[key: string]: string|number}}*/, componentName /*:: ?: string*/) /*: string*/ {\n  var prefix /*: (style: Object, componentName: ?string) => Object*/ = arguments.length <= 2 || arguments[2] === undefined ? Prefixer.getPrefixedStyle : arguments[2];\n\n  var name = 'Animation' + animationIndex;\n  animationIndex += 1;\n\n  if (!isAnimationSupported) {\n    return name;\n  }\n\n  var rule = '@' + keyframesPrefixed + ' ' + name + ' {\\n' + Object.keys(keyframeRules).map(function (percentage) {\n    var props = keyframeRules[percentage];\n    var prefixedProps = prefix(props, componentName);\n    var cssPrefixedProps = camelCasePropsToDashCase(prefixedProps);\n    var serializedProps = createMarkupForStyles(cssPrefixedProps, '  ');\n    return '  ' + percentage + ' {\\n  ' + serializedProps + '\\n  }';\n  }).join('\\n') + '\\n}\\n';\n\n  // for flow\n  /* istanbul ignore next */\n  if (!animationStyleSheet) {\n    throw new Error('keyframes not initialized properly');\n  }\n\n  animationStyleSheet.sheet.insertRule(rule, animationStyleSheet.sheet.cssRules.length);\n  return name;\n};\n\nmodule.exports = keyframes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/keyframes.js\n ** module id = 26\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _collection = require(\"./collection\");\n\nvar Collection = _interopRequireWildcard(_collection);\n\nvar _log = require(\"./log\");\n\nvar Log = _interopRequireWildcard(_log);\n\nvar _style = require(\"./style\");\n\nvar Style = _interopRequireWildcard(_style);\n\nvar _type = require(\"./type\");\n\nvar Type = _interopRequireWildcard(_type);\n\nvar _propTypes = require(\"./prop-types\");\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nexports[\"default\"] = {\n  Collection: Collection,\n  Log: Log,\n  Style: Style,\n  Type: Type,\n  PropTypes: PropTypes\n};\nmodule.exports = exports[\"default\"];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/victory-util/lib/index.js\n ** module id = 27\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar containsStrings = function containsStrings(collection) {\n  return _lodash2[\"default\"].some(collection, function (item) {\n    return _lodash2[\"default\"].isString(item);\n  });\n};\n\nexports.containsStrings = containsStrings;\nvar containsOnlyStrings = function containsOnlyStrings(collection) {\n  return _lodash2[\"default\"].every(collection, function (item) {\n    return _lodash2[\"default\"].isString(item);\n  });\n};\nexports.containsOnlyStrings = containsOnlyStrings;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/victory-util/lib/collection.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/index.js\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 30\n ** module chunks = 0\n **/","/* global console */\n/* eslint-disable no-console */\n\n// TODO: Use \"warning\" npm module like React is switching to.\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar warn = function warn(message) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (console && console.warn) {\n      console.warn(message);\n    }\n  }\n};\nexports.warn = warn;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/victory-util/lib/log.js\n ** module id = 31\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _reduceCssCalc = require(\"reduce-css-calc\");\n\nvar _reduceCssCalc2 = _interopRequireDefault(_reduceCssCalc);\n\n/**\n * Given an object with CSS/SVG transform definitions, return the string value\n * for use with the `transform` CSS property or SVG attribute. Note that we\n * can't always guarantee the order will match the author's intended order, so\n * authors should only use the object notation if they know that their transform\n * is commutative or that there is only one.\n * @param {Object} obj An object of transform definitions.\n * @returns {String} The generated transform string.\n */\nvar toTransformString = function toTransformString(obj) {\n  if (!obj || typeof obj === \"string\") {\n    return obj;\n  }\n  var transforms = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      var value = obj[key];\n      transforms.push(key + \"(\" + value + \")\");\n    }\n  }\n  return transforms.join(\" \");\n};\n\nexports.toTransformString = toTransformString;\nvar calc = function calc(expr, precision) {\n  return (0, _reduceCssCalc2[\"default\"])(\"calc(\" + expr + \")\", precision);\n};\n\nexports.calc = calc;\n/**\n * Given the name of a color scale, getColorScale will return an array\n * of 5 hex string values in that color scale. If no 'name' parameter\n * is given, it will return the Victory default grayscale.\n * @param {String} name The name of the color scale to return (optional).\n * @returns {Array} An array of 5 hex string values composing a color scale.\n */\nvar getColorScale = function getColorScale(name) {\n  var scales = {\n    victory: [\"#9f9f9f\", \"#e0dfe0\", \"#7e7e7e\", \"#d3d2d3\", \"#000000\"],\n    gray: [\"#969696\", \"#f1f1f1\", \"#636363\", \"#cccccc\", \"#252525\"],\n    bluePurple: [\"#8c96c6\", \"#edf8fb\", \"#8856a7\", \"#b3cde3\", \"#810f7c\"],\n    red: [\"#de2d26\", \"#fee5d9\", \"#fb6a4a\", \"#fcae91\", \"#a50f15\"],\n    yellowBlue: [\"#41b6c4\", \"#ffffcc\", \"#2c7fb8\", \"#a1dab4\", \"#253494\"]\n  };\n  return name ? scales[name] : scales.victory;\n};\nexports.getColorScale = getColorScale;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/victory-util/lib/style.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * Module dependencies\n */\nvar balanced = require(\"balanced-match\")\nvar reduceFunctionCall = require(\"reduce-function-call\")\n\n/**\n * Constantes\n */\nvar MAX_STACK = 100 // should be enough for a single calc()...\nvar NESTED_CALC_RE = /(\\+|\\-|\\*|\\\\|[^a-z]|)(\\s*)(\\()/g\n\n/**\n * Global variables\n */\nvar stack\n\n/**\n * Expose reduceCSSCalc plugin\n *\n * @type {Function}\n */\nmodule.exports = reduceCSSCalc\n\n/**\n * Reduce CSS calc() in a string, whenever it's possible\n *\n * @param {String} value css input\n */\nfunction reduceCSSCalc(value, decimalPrecision) {\n  stack = 0\n  decimalPrecision = Math.pow(10, decimalPrecision === undefined ? 5 : decimalPrecision)\n\n  /**\n   * Evaluates an expression\n   *\n   * @param {String} expression\n   * @returns {String}\n   */\n  function evaluateExpression (expression, functionIdentifier, call) {\n    if (stack++ > MAX_STACK) {\n      stack = 0\n      throw new Error(\"Call stack overflow for \" + call)\n    }\n\n    if (expression === \"\") {\n      throw new Error(functionIdentifier + \"(): '\" + call + \"' must contain a non-whitespace string\")\n    }\n\n    expression = evaluateNestedExpression(expression, call)\n\n    var units = getUnitsInExpression(expression)\n\n    // If multiple units let the expression be (i.e. browser calc())\n    if (units.length > 1) {\n      return functionIdentifier + \"(\" + expression + \")\"\n    }\n\n    var unit = units[0] || \"\"\n\n    if (unit === \"%\") {\n      // Convert percentages to numbers, to handle expressions like: 50% * 50% (will become: 25%):\n      expression = expression.replace(/\\b[0-9\\.]+%/g, function(percent) {\n        return parseFloat(percent.slice(0, -1)) * 0.01\n      })\n    }\n\n    // Remove units in expression:\n    var toEvaluate = expression.replace(new RegExp(unit, \"g\"), \"\")\n    var result\n\n    try {\n      result = eval(toEvaluate)\n    }\n    catch (e) {\n      return functionIdentifier + \"(\" + expression + \")\"\n    }\n\n    // Transform back to a percentage result:\n    if (unit === \"%\") {\n      result *= 100\n    }\n\n    // adjust rounding shit\n    // (0.1 * 0.2 === 0.020000000000000004)\n    result = Math.round(result * decimalPrecision) / decimalPrecision\n\n    // We don't need units for zero values...\n    if (result !== 0) {\n      result += unit\n    }\n\n    return result\n  }\n\n  /**\n   * Evaluates nested expressions\n   *\n   * @param {String} expression\n   * @returns {String}\n   */\n  function evaluateNestedExpression(expression, call) {\n    var evaluatedPart = \"\"\n    var nonEvaluatedPart = expression\n    var matches\n    while ((matches = NESTED_CALC_RE.exec(nonEvaluatedPart))) {\n      if (matches[0].index > 0) {\n        evaluatedPart += nonEvaluatedPart.substring(0, matches[0].index)\n      }\n\n      var balancedExpr = balanced(\"(\", \")\", nonEvaluatedPart.substring([0].index))\n      if (balancedExpr.body === \"\") {\n        throw new Error(\"'\" + expression + \"' must contain a non-whitespace string\")\n      }\n\n      var evaluated = evaluateExpression(balancedExpr.body, \"\", call)\n\n      evaluatedPart += balancedExpr.pre + evaluated\n      nonEvaluatedPart = balancedExpr.post\n    }\n\n    return evaluatedPart + nonEvaluatedPart\n  }\n\n  return reduceFunctionCall(value, /((?:\\-[a-z]+\\-)?calc)\\(/, evaluateExpression)\n}\n\n/**\n * Checks what units are used in an expression\n *\n * @param {String} expression\n * @returns {Array}\n */\n\nfunction getUnitsInExpression(expression) {\n  var uniqueUnits = []\n  var unitRegEx = /[\\.0-9]([%a-z]+)/g\n  var matches = unitRegEx.exec(expression)\n\n  while (matches) {\n    if (!matches || !matches[1]) {\n      continue\n    }\n\n    if (uniqueUnits.indexOf(matches[1]) === -1) {\n      uniqueUnits.push(matches[1])\n    }\n\n    matches = unitRegEx.exec(expression)\n  }\n\n  return uniqueUnits\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/reduce-css-calc/index.js\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = function(a, b, str) {\n  var bal = 0;\n  var m = {};\n\n  for (var i = 0; i < str.length; i++) {\n    if (a == str.substr(i, a.length)) {\n      if (!('start' in m)) m.start = i;\n      bal++;\n    }\n    else if (b == str.substr(i, b.length) && 'start' in m) {\n      bal--;\n      if (!bal) {\n        m.end = i;\n        m.pre = str.substr(0, m.start);\n        m.body = (m.end - m.start > 1)\n          ? str.substring(m.start + a.length, m.end)\n          : '';\n        m.post = str.slice(m.end + b.length);\n        return m;\n      }\n    }\n  }\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/reduce-css-calc/~/balanced-match/index.js\n ** module id = 34\n ** module chunks = 0\n **/","/*\n * Module dependencies\n */\nvar balanced = require(\"balanced-match\")\n\n/**\n * Expose `reduceFunctionCall`\n *\n * @type {Function}\n */\nmodule.exports = reduceFunctionCall\n\n/**\n * Walkthrough all expressions, evaluate them and insert them into the declaration\n *\n * @param {Array} expressions\n * @param {Object} declaration\n */\n\nfunction reduceFunctionCall(string, functionRE, callback) {\n  var call = string\n  return getFunctionCalls(string, functionRE).reduce(function(string, obj) {\n    return string.replace(obj.functionIdentifier + \"(\" + obj.matches.body + \")\", evalFunctionCall(obj.matches.body, obj.functionIdentifier, callback, call, functionRE))\n  }, string)\n}\n\n/**\n * Parses expressions in a value\n *\n * @param {String} value\n * @returns {Array}\n * @api private\n */\n\nfunction getFunctionCalls(call, functionRE) {\n  var expressions = []\n\n  var fnRE = typeof functionRE === \"string\" ? new RegExp(\"\\\\b(\" + functionRE + \")\\\\(\") : functionRE\n  do {\n    var searchMatch = fnRE.exec(call)\n    if (!searchMatch) {\n      return expressions\n    }\n    if (searchMatch[1] === undefined) {\n      throw new Error(\"Missing the first couple of parenthesis to get the function identifier in \" + functionRE)\n    }\n    var fn = searchMatch[1]\n    var startIndex = searchMatch.index\n    var matches = balanced(\"(\", \")\", call.substring(startIndex))\n\n    if (!matches) {\n      throw new SyntaxError(fn + \"(): missing closing ')' in the value '\" + call + \"'\")\n    }\n\n    expressions.push({matches: matches, functionIdentifier: fn})\n    call = matches.post\n  }\n  while (fnRE.test(call))\n\n  return expressions\n}\n\n/**\n * Evaluates an expression\n *\n * @param {String} expression\n * @returns {String}\n * @api private\n */\n\nfunction evalFunctionCall (string, functionIdentifier, callback, call, functionRE) {\n  // allow recursivity\n  return callback(reduceFunctionCall(string, functionRE, callback), functionIdentifier, call)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/reduce-function-call/index.js\n ** module id = 35\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar nullConstructor = function nullConstructor() {\n  return null;\n};\nexports.nullConstructor = nullConstructor;\nvar undefinedConstructor = function undefinedConstructor() {\n  return;\n};\nexports.undefinedConstructor = undefinedConstructor;\n/**\n * Get the constructor of `value`. If `value` is null or undefined, return the\n * special singletons `nullConstructor` or `undefinedConstructor`, respectively.\n * @param {*} value Instance to return the constructor of.\n * @returns {Function} Constructor of `value`.\n */\nvar getConstructor = function getConstructor(value) {\n  if (typeof value === \"undefined\") {\n    return undefinedConstructor;\n  } else if (value === null) {\n    return nullConstructor;\n  } else {\n    return value.constructor;\n  }\n};\n\nexports.getConstructor = getConstructor;\n/**\n * Get the name of the constructor used to create `value`, using\n * `Object.protoype.toString`. If the value is null or undefined, return\n * \"null\" or \"undefined\", respectively.\n * @param {*} value Instance to return the constructor name of.\n * @returns {String} Name of the constructor.\n */\nvar getConstructorName = function getConstructorName(value) {\n  if (typeof value === \"undefined\") {\n    return \"undefined\";\n  } else if (value === null) {\n    return \"null\";\n  }\n  return Object.prototype.toString.call(value).slice(8, -1);\n};\nexports.getConstructorName = getConstructorName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/victory-util/lib/type.js\n ** module id = 37\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _react = require(\"react\");\n\nvar _type = require(\"./type\");\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\n/**\n * Return a new validator based on `validator` but with the option to chain\n * `isRequired` onto the validation. This is nearly identical to how React\n * does it internally, but they don't expose their helper for us to use.\n * @param {Function} validator Validation function.\n * @returns {Function} Validator with `isRequired` option.\n */\nvar makeChainable = function makeChainable(validator) {\n  /* eslint-disable max-params */\n  var _chainable = function _chainable(isRequired, props, propName, componentName) {\n    var value = props[propName];\n    if (typeof value === \"undefined\" || value === null) {\n      if (isRequired) {\n        return new Error(\"Required `\" + propName + \"` was not specified in `\" + componentName + \"`.\");\n      }\n      return null;\n    }\n    return validator(props, propName, componentName);\n  };\n  var chainable = _lodash2[\"default\"].bind(_chainable, null, false);\n  chainable.isRequired = _lodash2[\"default\"].bind(_chainable, null, true);\n  return chainable;\n};\n\nexports.makeChainable = makeChainable;\n/**\n * Check that the value is a non-negative number.\n */\nvar nonNegative = makeChainable(function (props, propName, componentName) {\n  var error = _react.PropTypes.number(props, propName, componentName);\n  if (error) {\n    return error;\n  }\n  var value = props[propName];\n  if (value < 0) {\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be non-negative.\");\n  }\n});\n\nexports.nonNegative = nonNegative;\n/**\n * Check that the value is a two-item Array in ascending order.\n */\nvar minMaxArray = makeChainable(function (props, propName, componentName) {\n  var error = _react.PropTypes.array(props, propName, componentName);\n  if (error) {\n    return error;\n  }\n  var value = props[propName];\n  if (value.length !== 2 || value[1] < value[0]) {\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a [min, max] array.\");\n  }\n});\n\nexports.minMaxArray = minMaxArray;\n/**\n * Check that the value looks like a d3 `scale` function.\n */\nvar scale = makeChainable(function (props, propName, componentName) {\n  var value = props[propName];\n  if (typeof value !== \"function\" || !value.copy || !value.domain || !value.range) {\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a d3 scale.\");\n  }\n});\n\nexports.scale = scale;\n/**\n * Check that an array contains items of the same type.\n */\nvar homogenousArray = makeChainable(function (props, propName, componentName) {\n  var error = _react.PropTypes.array(props, propName, componentName);\n  if (error) {\n    return error;\n  }\n  var value = props[propName];\n  if (value.length > 1) {\n    var _constructor = (0, _type.getConstructor)(value[0]);\n    for (var i = 1; i < value.length; i++) {\n      var otherConstructor = (0, _type.getConstructor)(value[i]);\n      if (_constructor !== otherConstructor) {\n        var constructorName = (0, _type.getConstructorName)(value[0]);\n        var otherConstructorName = (0, _type.getConstructorName)(value[i]);\n        return new Error(\"Expected `\" + propName + \"` in `\" + componentName + \"` to be a \" + (\"homogenous array, but found types `\" + constructorName + \"` and \") + (\"`\" + otherConstructorName + \"`.\"));\n      }\n    }\n  }\n});\nexports.homogenousArray = homogenousArray;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/victory-util/lib/prop-types.js\n ** module id = 38\n ** module chunks = 0\n **/"],"sourceRoot":""}